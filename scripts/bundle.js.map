{
  "version": 3,
  "sources": ["../../node_modules/@riotjs/observable/dist/observable.js", "../../node_modules/lodash/isObject.js", "../../node_modules/lodash/_freeGlobal.js", "../../node_modules/lodash/_root.js", "../../node_modules/lodash/now.js", "../../node_modules/lodash/_trimmedEndIndex.js", "../../node_modules/lodash/_baseTrim.js", "../../node_modules/lodash/_Symbol.js", "../../node_modules/lodash/_getRawTag.js", "../../node_modules/lodash/_objectToString.js", "../../node_modules/lodash/_baseGetTag.js", "../../node_modules/lodash/isObjectLike.js", "../../node_modules/lodash/isSymbol.js", "../../node_modules/lodash/toNumber.js", "../../node_modules/lodash/debounce.js", "../../node_modules/lodash/_arrayEach.js", "../../node_modules/lodash/_createBaseFor.js", "../../node_modules/lodash/_baseFor.js", "../../node_modules/lodash/_baseTimes.js", "../../node_modules/lodash/_baseIsArguments.js", "../../node_modules/lodash/isArguments.js", "../../node_modules/lodash/isArray.js", "../../node_modules/lodash/stubFalse.js", "../../node_modules/lodash/isBuffer.js", "../../node_modules/lodash/_isIndex.js", "../../node_modules/lodash/isLength.js", "../../node_modules/lodash/_baseIsTypedArray.js", "../../node_modules/lodash/_baseUnary.js", "../../node_modules/lodash/_nodeUtil.js", "../../node_modules/lodash/isTypedArray.js", "../../node_modules/lodash/_arrayLikeKeys.js", "../../node_modules/lodash/_isPrototype.js", "../../node_modules/lodash/_overArg.js", "../../node_modules/lodash/_nativeKeys.js", "../../node_modules/lodash/_baseKeys.js", "../../node_modules/lodash/isFunction.js", "../../node_modules/lodash/isArrayLike.js", "../../node_modules/lodash/keys.js", "../../node_modules/lodash/_baseForOwn.js", "../../node_modules/lodash/_createBaseEach.js", "../../node_modules/lodash/_baseEach.js", "../../node_modules/lodash/identity.js", "../../node_modules/lodash/_castFunction.js", "../../node_modules/lodash/forEach.js", "../../node_modules/lodash/each.js", "../../node_modules/lodash/_arrayMap.js", "../../node_modules/lodash/_listCacheClear.js", "../../node_modules/lodash/eq.js", "../../node_modules/lodash/_assocIndexOf.js", "../../node_modules/lodash/_listCacheDelete.js", "../../node_modules/lodash/_listCacheGet.js", "../../node_modules/lodash/_listCacheHas.js", "../../node_modules/lodash/_listCacheSet.js", "../../node_modules/lodash/_ListCache.js", "../../node_modules/lodash/_stackClear.js", "../../node_modules/lodash/_stackDelete.js", "../../node_modules/lodash/_stackGet.js", "../../node_modules/lodash/_stackHas.js", "../../node_modules/lodash/_coreJsData.js", "../../node_modules/lodash/_isMasked.js", "../../node_modules/lodash/_toSource.js", "../../node_modules/lodash/_baseIsNative.js", "../../node_modules/lodash/_getValue.js", "../../node_modules/lodash/_getNative.js", "../../node_modules/lodash/_Map.js", "../../node_modules/lodash/_nativeCreate.js", "../../node_modules/lodash/_hashClear.js", "../../node_modules/lodash/_hashDelete.js", "../../node_modules/lodash/_hashGet.js", "../../node_modules/lodash/_hashHas.js", "../../node_modules/lodash/_hashSet.js", "../../node_modules/lodash/_Hash.js", "../../node_modules/lodash/_mapCacheClear.js", "../../node_modules/lodash/_isKeyable.js", "../../node_modules/lodash/_getMapData.js", "../../node_modules/lodash/_mapCacheDelete.js", "../../node_modules/lodash/_mapCacheGet.js", "../../node_modules/lodash/_mapCacheHas.js", "../../node_modules/lodash/_mapCacheSet.js", "../../node_modules/lodash/_MapCache.js", "../../node_modules/lodash/_stackSet.js", "../../node_modules/lodash/_Stack.js", "../../node_modules/lodash/_setCacheAdd.js", "../../node_modules/lodash/_setCacheHas.js", "../../node_modules/lodash/_SetCache.js", "../../node_modules/lodash/_arraySome.js", "../../node_modules/lodash/_cacheHas.js", "../../node_modules/lodash/_equalArrays.js", "../../node_modules/lodash/_Uint8Array.js", "../../node_modules/lodash/_mapToArray.js", "../../node_modules/lodash/_setToArray.js", "../../node_modules/lodash/_equalByTag.js", "../../node_modules/lodash/_arrayPush.js", "../../node_modules/lodash/_baseGetAllKeys.js", "../../node_modules/lodash/_arrayFilter.js", "../../node_modules/lodash/stubArray.js", "../../node_modules/lodash/_getSymbols.js", "../../node_modules/lodash/_getAllKeys.js", "../../node_modules/lodash/_equalObjects.js", "../../node_modules/lodash/_DataView.js", "../../node_modules/lodash/_Promise.js", "../../node_modules/lodash/_Set.js", "../../node_modules/lodash/_WeakMap.js", "../../node_modules/lodash/_getTag.js", "../../node_modules/lodash/_baseIsEqualDeep.js", "../../node_modules/lodash/_baseIsEqual.js", "../../node_modules/lodash/_baseIsMatch.js", "../../node_modules/lodash/_isStrictComparable.js", "../../node_modules/lodash/_getMatchData.js", "../../node_modules/lodash/_matchesStrictComparable.js", "../../node_modules/lodash/_baseMatches.js", "../../node_modules/lodash/_isKey.js", "../../node_modules/lodash/memoize.js", "../../node_modules/lodash/_memoizeCapped.js", "../../node_modules/lodash/_stringToPath.js", "../../node_modules/lodash/_baseToString.js", "../../node_modules/lodash/toString.js", "../../node_modules/lodash/_castPath.js", "../../node_modules/lodash/_toKey.js", "../../node_modules/lodash/_baseGet.js", "../../node_modules/lodash/get.js", "../../node_modules/lodash/_baseHasIn.js", "../../node_modules/lodash/_hasPath.js", "../../node_modules/lodash/hasIn.js", "../../node_modules/lodash/_baseMatchesProperty.js", "../../node_modules/lodash/_baseProperty.js", "../../node_modules/lodash/_basePropertyDeep.js", "../../node_modules/lodash/property.js", "../../node_modules/lodash/_baseIteratee.js", "../../node_modules/lodash/_baseMap.js", "../../node_modules/lodash/map.js", "../../node_modules/lodash/_defineProperty.js", "../../node_modules/lodash/_baseAssignValue.js", "../../node_modules/lodash/_assignMergeValue.js", "../../node_modules/lodash/_cloneBuffer.js", "../../node_modules/lodash/_cloneArrayBuffer.js", "../../node_modules/lodash/_cloneTypedArray.js", "../../node_modules/lodash/_copyArray.js", "../../node_modules/lodash/_baseCreate.js", "../../node_modules/lodash/_getPrototype.js", "../../node_modules/lodash/_initCloneObject.js", "../../node_modules/lodash/isArrayLikeObject.js", "../../node_modules/lodash/isPlainObject.js", "../../node_modules/lodash/_safeGet.js", "../../node_modules/lodash/_assignValue.js", "../../node_modules/lodash/_copyObject.js", "../../node_modules/lodash/_nativeKeysIn.js", "../../node_modules/lodash/_baseKeysIn.js", "../../node_modules/lodash/keysIn.js", "../../node_modules/lodash/toPlainObject.js", "../../node_modules/lodash/_baseMergeDeep.js", "../../node_modules/lodash/_baseMerge.js", "../../node_modules/lodash/_apply.js", "../../node_modules/lodash/_overRest.js", "../../node_modules/lodash/constant.js", "../../node_modules/lodash/_baseSetToString.js", "../../node_modules/lodash/_shortOut.js", "../../node_modules/lodash/_setToString.js", "../../node_modules/lodash/_baseRest.js", "../../node_modules/lodash/_isIterateeCall.js", "../../node_modules/lodash/_createAssigner.js", "../../node_modules/lodash/merge.js", "../../node_modules/lodash/parseInt.js", "../../node_modules/lodash/_arrayReduce.js", "../../node_modules/lodash/_baseReduce.js", "../../node_modules/lodash/reduce.js", "../../node_modules/lodash/_baseRandom.js", "../../node_modules/lodash/toFinite.js", "../../node_modules/lodash/random.js", "../../node_modules/lodash/_baseRange.js", "../../node_modules/lodash/_createRange.js", "../../node_modules/lodash/range.js", "../../node_modules/lodash/head.js", "../../node_modules/lodash/first.js", "../../node_modules/lodash/last.js", "../../node_modules/lodash/_baseSlice.js", "../../node_modules/lodash/tail.js", "../../src/app/app.js", "../../node_modules/riot/esm/dependencies/@riotjs/util/constants.js", "../../node_modules/riot/esm/dependencies/@riotjs/util/expression-types.js", "../../node_modules/riot/esm/dependencies/@riotjs/util/strings.js", "../../node_modules/riot/esm/dependencies/@riotjs/util/misc.js", "../../node_modules/riot/esm/dependencies/@riotjs/util/checks.js", "../../node_modules/riot/esm/dependencies/@riotjs/util/dom.js", "../../node_modules/riot/esm/dependencies/@riotjs/util/binding-types.js", "../../node_modules/riot/esm/dependencies/@riotjs/util/objects.js", "../../node_modules/riot/esm/dependencies/@riotjs/dom-bindings/dist/dom-bindings.js", "../../node_modules/riot/esm/dependencies/bianco.dom-to-array/index.next.js", "../../node_modules/riot/esm/dependencies/bianco.query/index.next.js", "../../node_modules/riot/esm/dependencies/bianco.attr/index.next.js", "../../node_modules/riot/esm/core/css-manager.js", "../../node_modules/riot/esm/api/pure.js", "../../node_modules/riot/esm/api/__.js", "../../node_modules/@riotjs/route/index.js", "../../src/app/challenges.js", "../../src/app/presenters.js", "../../src/models/base.js", "../../src/models/movable.js", "../../src/models/user.js", "../../src/models/world.js", "../../src/models/elevator.js", "../../src/models/elevator-facade.js", "../../src/models/floor.js", "../../src/app/simulation.js", "../../src/models/world-controller.js", "../../src/app/types.js"],
  "sourcesContent": [";(function(window, undefined) {const ALL_CALLBACKS = '*'\nconst define = Object.defineProperties\nconst entries = Object.entries\n\nconst on = (callbacks, el) => (event, fn) => {\n  if (callbacks.has(event)) {\n    callbacks.get(event).add(fn)\n  } else {\n    callbacks.set(event, new Set().add(fn))\n  }\n\n  return el\n}\n\nconst deleteCallback = (callbacks, el, event,  fn) => {\n  if (fn) {\n    const fns = callbacks.get(event)\n\n    if (fns) {\n      fns.delete(fn)\n      if (fns.size === 0) callbacks.delete(event)\n    }\n  } else callbacks.delete(event)\n}\n\nconst off = (callbacks, el) => (event, fn) => {\n  if (event === ALL_CALLBACKS && !fn) {\n    callbacks.clear()\n  } else {\n    deleteCallback(callbacks, el, event, fn)\n  }\n\n  return el\n}\n\nconst one = (callbacks, el) => (event, fn) => {\n  function on(...args) {\n    el.off(event, on)\n    fn.apply(el, args)\n  }\n  return el.on(event, on)\n}\n\nconst trigger = (callbacks, el) => (event, ...args) => {\n  const fns = callbacks.get(event)\n\n  if (fns) fns.forEach(fn => fn.apply(el, args))\n\n  if (callbacks.get(ALL_CALLBACKS) && event !== ALL_CALLBACKS) {\n    el.trigger(ALL_CALLBACKS, event, ...args)\n  }\n\n  return el\n}\n\nconst observable = function(el) { // eslint-disable-line\n  const callbacks = new Map()\n  const methods = {on, off, one, trigger}\n\n  el = el || {}\n\n  define(el,\n    entries(methods).reduce((acc, [key, method]) => {\n      acc[key] = {\n        value: method(callbacks, el),\n        enumerable: false,\n        writable: false,\n        configurable: false\n      }\n\n      return acc\n    }, {})\n  )\n\n  return el\n}\n  /* istanbul ignore next */\n  // support CommonJS, AMD & browser\n  if (typeof exports === 'object')\n    module.exports = observable\n  else if (typeof define === 'function' && define.amd)\n    define(function() { return observable })\n  else\n    window.observable = observable\n\n})(typeof window != 'undefined' ? window : undefined);", "/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n", "/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n", "var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n", "var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n", "/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n", "var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n", "var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n", "var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n", "var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n", "/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n", "var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n", "var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n", "/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n", "/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n", "var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n", "/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n", "var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n", "/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n", "/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n", "var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n", "var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n", "/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n", "var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n", "var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n", "var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n", "/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n", "var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n", "var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n", "var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n", "var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n", "var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n", "var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n", "var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n", "/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n", "var identity = require('./identity');\n\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nmodule.exports = castFunction;\n", "var arrayEach = require('./_arrayEach'),\n    baseEach = require('./_baseEach'),\n    castFunction = require('./_castFunction'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nmodule.exports = forEach;\n", "module.exports = require('./forEach');\n", "/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n", "/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n", "/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n", "var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n", "var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n", "var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n", "/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n", "/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n", "/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n", "var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n", "var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n", "/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n", "var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n", "/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n", "var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n", "var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n", "var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n", "/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n", "var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n", "var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n", "/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n", "var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n", "var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n", "var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n", "var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n", "/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n", "/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n", "var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n", "/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n", "/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n", "var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n", "var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n", "/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n", "/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n", "var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n", "/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n", "var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n", "/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n", "/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n", "var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n", "var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n", "var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n", "var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n", "var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n", "var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n", "var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n", "var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n", "var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n", "/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n", "var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n", "var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n", "var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n", "var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n", "var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n", "var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n", "var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n", "var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n", "var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n", "var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n", "var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n", "/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n", "var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n", "var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n", "var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n", "/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n", "var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n", "var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n", "var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n", "var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n", "var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n", "var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n", "var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n", "var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;\n", "var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n", "var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n", "var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n", "/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n", "var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n", "var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n", "var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n", "var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n", "var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n", "/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nmodule.exports = safeGet;\n", "var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n", "var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n", "/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n", "var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n", "var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n", "var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;\n", "var assignMergeValue = require('./_assignMergeValue'),\n    cloneBuffer = require('./_cloneBuffer'),\n    cloneTypedArray = require('./_cloneTypedArray'),\n    copyArray = require('./_copyArray'),\n    initCloneObject = require('./_initCloneObject'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isPlainObject = require('./isPlainObject'),\n    isTypedArray = require('./isTypedArray'),\n    safeGet = require('./_safeGet'),\n    toPlainObject = require('./toPlainObject');\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nmodule.exports = baseMergeDeep;\n", "var Stack = require('./_Stack'),\n    assignMergeValue = require('./_assignMergeValue'),\n    baseFor = require('./_baseFor'),\n    baseMergeDeep = require('./_baseMergeDeep'),\n    isObject = require('./isObject'),\n    keysIn = require('./keysIn'),\n    safeGet = require('./_safeGet');\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nmodule.exports = baseMerge;\n", "/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n", "var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n", "/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n", "var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n", "/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n", "var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n", "var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n", "var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n", "var baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n", "var baseMerge = require('./_baseMerge'),\n    createAssigner = require('./_createAssigner');\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nmodule.exports = merge;\n", "var root = require('./_root'),\n    toString = require('./toString');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeParseInt = root.parseInt;\n\n/**\n * Converts `string` to an integer of the specified radix. If `radix` is\n * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n * hexadecimal, in which case a `radix` of `16` is used.\n *\n * **Note:** This method aligns with the\n * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category String\n * @param {string} string The string to convert.\n * @param {number} [radix=10] The radix to interpret `value` by.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.parseInt('08');\n * // => 8\n *\n * _.map(['6', '08', '10'], _.parseInt);\n * // => [6, 8, 10]\n */\nfunction parseInt(string, radix, guard) {\n  if (guard || radix == null) {\n    radix = 0;\n  } else if (radix) {\n    radix = +radix;\n  }\n  return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n}\n\nmodule.exports = parseInt;\n", "/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n", "/**\n * The base implementation of `_.reduce` and `_.reduceRight`, without support\n * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} accumulator The initial value.\n * @param {boolean} initAccum Specify using the first or last element of\n *  `collection` as the initial value.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the accumulated value.\n */\nfunction baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n  eachFunc(collection, function(value, index, collection) {\n    accumulator = initAccum\n      ? (initAccum = false, value)\n      : iteratee(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseReduce;\n", "var arrayReduce = require('./_arrayReduce'),\n    baseEach = require('./_baseEach'),\n    baseIteratee = require('./_baseIteratee'),\n    baseReduce = require('./_baseReduce'),\n    isArray = require('./isArray');\n\n/**\n * Reduces `collection` to a value which is the accumulated result of running\n * each element in `collection` thru `iteratee`, where each successive\n * invocation is supplied the return value of the previous. If `accumulator`\n * is not given, the first element of `collection` is used as the initial\n * value. The iteratee is invoked with four arguments:\n * (accumulator, value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.reduce`, `_.reduceRight`, and `_.transform`.\n *\n * The guarded methods are:\n * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n * and `sortBy`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @returns {*} Returns the accumulated value.\n * @see _.reduceRight\n * @example\n *\n * _.reduce([1, 2], function(sum, n) {\n *   return sum + n;\n * }, 0);\n * // => 3\n *\n * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n *   return result;\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n */\nfunction reduce(collection, iteratee, accumulator) {\n  var func = isArray(collection) ? arrayReduce : baseReduce,\n      initAccum = arguments.length < 3;\n\n  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n}\n\nmodule.exports = reduce;\n", "/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n", "var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n", "var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n", "/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nmodule.exports = baseRange;\n", "var baseRange = require('./_baseRange'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toFinite(start);\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nmodule.exports = createRange;\n", "var createRange = require('./_createRange');\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nmodule.exports = range;\n", "/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\nfunction head(array) {\n  return (array && array.length) ? array[0] : undefined;\n}\n\nmodule.exports = head;\n", "module.exports = require('./head');\n", "/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n", "/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n", "var baseSlice = require('./_baseSlice');\n\n/**\n * Gets all but the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.tail([1, 2, 3]);\n * // => [2, 3]\n */\nfunction tail(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseSlice(array, 1, length) : [];\n}\n\nmodule.exports = tail;\n", "import observable from '@riotjs/observable';\nimport { route } from '@riotjs/route';\nimport debounce from 'lodash/debounce';\nimport each from 'lodash/each';\nimport map from 'lodash/map';\nimport merge from 'lodash/merge';\nimport parseInt from 'lodash/parseInt';\nimport reduce from 'lodash/reduce';\nimport { challenges } from './challenges';\nimport {\n  clearAll,\n  presentChallenge,\n  presentCodeStatus,\n  presentFeedback,\n  presentStats,\n  presentWorld,\n} from './presenters';\nimport Simulation from './simulation';\nimport { typeDeclarations } from './types';\n\n/**\n * Asynchronously creates and initializes a Monaco code editor instance with custom configuration,\n * including loading type declarations, handling code persistence via localStorage, and providing\n * UI controls for saving, resetting, and undoing code changes. Returns an observable object with\n * methods for interacting with the editor and code.\n *\n * @function\n * @returns {Promise<Object>} A promise that resolves to an observable object with methods:\n *   - getCodeObj(): Parses and returns the current code as an object, triggering events on success or error.\n *   - setCode(code: string): Sets the editor's content to the provided code.\n *   - getCode(): Returns the current code from the editor.\n *   - setDevTestCode(): Sets the editor's content to the developer test implementation.\n *   - Triggers events such as 'change', 'code_success', 'usercode_error', and 'apply_code'.\n *\n * @example\n * createEditorAsync().then(editor => {\n *   editor.setCode('// new code');\n *   const codeObj = editor.getCodeObj();\n * });\n */\nconst createEditorAsync = () =>\n  new Promise((resolve, reject) => {\n    const lsKey = 'elevatorCrushCode_v5';\n\n    // Load Monaco Editor from CDN\n    require.config({\n      paths: { vs: 'https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.29.1/min/vs/' },\n    });\n    window.MonacoEnvironment = {\n      getWorkerUrl: function (workerId, label) {\n        return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\n                self.MonacoEnvironment = { baseUrl: \"https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.29.1/min/\" };\n                importScripts(\"https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.29.1/min/vs/base/worker/workerMain.min.js\");`)}`;\n      },\n    };\n\n    require(['vs/editor/editor.main'], function () {\n      // Create the editor with some sample JavaScript code\n      const cm = monaco.editor.create(document.getElementById('editor'), {\n        theme: 'vs-dark',\n        folding: false,\n        minimap: { enabled: false },\n        language: 'javascript',\n        value: '// code goes here\\n',\n      });\n\n      // Add type declarations\n      monaco.languages.typescript.javascriptDefaults.addExtraLib(typeDeclarations);\n\n      // Original setup code\n      const reset = function () {\n        cm.setValue($('#default-elev-implementation').text().trim());\n      };\n      const saveCode = function () {\n        localStorage.setItem(lsKey, cm.getValue());\n        $('#save_message').text('Code saved ' + new Date().toTimeString());\n        returnObj.trigger('change');\n      };\n\n      const existingCode = localStorage.getItem(lsKey);\n      if (existingCode) {\n        cm.setValue(existingCode);\n      } else {\n        reset();\n      }\n\n      $('#button_save').click(function () {\n        saveCode();\n        cm.focus();\n      });\n\n      $('#button_reset').click(function () {\n        if (confirm('Do you really want to reset to the default implementation?')) {\n          localStorage.setItem('develevateBackupCode', cm.getValue());\n          reset();\n        }\n        cm.focus();\n      });\n\n      $('#button_resetundo').click(function () {\n        if (confirm('Do you want to bring back the code as before the last reset?')) {\n          cm.setValue(localStorage.getItem('develevateBackupCode') || '');\n        }\n        cm.focus();\n      });\n\n      const returnObj = observable({});\n      const autoSaver = debounce(saveCode, 1000);\n      cm.onDidChangeModelContent = autoSaver;\n\n      returnObj.getCodeObj = function () {\n        console.log('Getting code...');\n        const code = cm.getValue();\n        let obj;\n        try {\n          obj = getCodeObjFromCode(code);\n          returnObj.trigger('code_success');\n        } catch (e) {\n          returnObj.trigger('usercode_error', e);\n          return null;\n        }\n        return obj;\n      };\n      returnObj.setCode = function (code) {\n        cm.setValue(code);\n      };\n      returnObj.getCode = function () {\n        return cm.getValue();\n      };\n      returnObj.setDevTestCode = function () {\n        cm.setValue($('#devtest-elev-implementation').text().trim());\n      };\n\n      $('#button_apply').click(function () {\n        returnObj.trigger('apply_code');\n      });\n\n      resolve(returnObj);\n    });\n  });\n\nconst createParamsUrl = function (current, overrides) {\n  return (\n    '#' +\n    map(merge(current, overrides), function (val, key) {\n      return key + '=' + val;\n    }).join(',')\n  );\n};\n\n$(function () {\n  const tsKey = 'elevatorTimeScale';\n  createEditorAsync().then((editor) => {\n    let params = {};\n\n    const $world = $('.innerworld');\n    const $stats = $('.statscontainer');\n    const $feedback = $('.feedbackcontainer');\n    const $challenge = $('.challenge');\n    const $codestatus = $('.codestatus');\n\n    const sim = new Simulation({\n      editor,\n      challenges,\n      clearAll,\n      presentStats,\n      presentChallenge,\n      presentWorld,\n      presentFeedback,\n      templates: {\n        floorTempl: document.getElementById('floor-template').innerHTML.trim(),\n        elevatorTempl: document.getElementById('elevator-template').innerHTML.trim(),\n        elevatorButtonTempl: document.getElementById('elevatorbutton-template').innerHTML.trim(),\n        userTempl: document.getElementById('user-template').innerHTML.trim(),\n        challengeTempl: document.getElementById('challenge-template').innerHTML.trim(),\n        feedbackTempl: document.getElementById('feedback-template').innerHTML.trim(),\n        codeStatusTempl: document.getElementById('codestatus-template').innerHTML.trim(),\n      },\n      params,\n      createParamsUrl,\n      tsKey,\n      $world,\n      $feedback,\n      $stats,\n      $challenge,\n    });\n\n    editor.on('apply_code', function () {\n      sim.startChallenge(sim.currentChallengeIndex, true);\n    });\n    editor.on('code_success', function () {\n      presentCodeStatus($codestatus, codeStatusTempl);\n    });\n    editor.on('usercode_error', function (error) {\n      presentCodeStatus($codestatus, codeStatusTempl, error);\n    });\n    editor.on('change', function () {\n      $('#fitness_message').addClass('faded');\n      // const codeStr = editor.getCode();\n      // fitnessSuite(codeStr, true, function(results) {\n      //     const message = \"\";\n      //     if(!results.error) {\n      //         message = \"Fitness avg wait times: \" + map(results, function(r){ return r.options.description + \": \" + r.result.avgWaitTime.toPrecision(3) + \"s\" }).join(\"&nbsp&nbsp&nbsp\");\n      //     } else {\n      //         message = \"Could not compute fitness due to error: \" + results.error;\n      //     }\n      //     $(\"#fitness_message\").html(message).removeClass(\"faded\");\n      // });\n    });\n    editor.trigger('change');\n\n    route(function (path) {\n      params = reduce(\n        path.split(','),\n        function (result, p) {\n          const match = p.match(/(\\w+)=(\\w+$)/);\n          if (match) {\n            result[match[1]] = match[2];\n          }\n          return result;\n        },\n        {}\n      );\n      let requestedChallenge = 0;\n      let autoStart = false;\n      let timeScale = parseFloat(localStorage.getItem(tsKey)) || 2.0;\n\n      each(params, function (val, key) {\n        if (key === 'challenge') {\n          requestedChallenge = parseInt(val) - 1;\n          if (requestedChallenge < 0 || requestedChallenge >= challenges.length) {\n            console.log('Invalid challenge index', requestedChallenge);\n            console.log('Defaulting to first challenge');\n            requestedChallenge = 0;\n          }\n        } else if (key === 'autostart') {\n          autoStart = val === 'false' ? false : true;\n        } else if (key === 'timescale') {\n          timeScale = parseFloat(val);\n        } else if (key === 'devtest') {\n          editor.setDevTestCode();\n        } else if (key === 'fullscreen') {\n          makeDemoFullscreen();\n        }\n      });\n\n      sim.worldController.setTimeScale(timeScale);\n      sim.startChallenge(requestedChallenge, autoStart);\n    });\n  });\n});\n", "/* Riot WIP, @license MIT */\n// Riot.js constants that can be used across more modules\n\nconst COMPONENTS_IMPLEMENTATION_MAP = new Map(),\n  DOM_COMPONENT_INSTANCE_PROPERTY = Symbol('riot-component'),\n  PLUGINS_SET = new Set(),\n  IS_DIRECTIVE = 'is',\n  MOUNT_METHOD_KEY = 'mount',\n  UPDATE_METHOD_KEY = 'update',\n  UNMOUNT_METHOD_KEY = 'unmount',\n  SHOULD_UPDATE_KEY = 'shouldUpdate',\n  ON_BEFORE_MOUNT_KEY = 'onBeforeMount',\n  ON_MOUNTED_KEY = 'onMounted',\n  ON_BEFORE_UPDATE_KEY = 'onBeforeUpdate',\n  ON_UPDATED_KEY = 'onUpdated',\n  ON_BEFORE_UNMOUNT_KEY = 'onBeforeUnmount',\n  ON_UNMOUNTED_KEY = 'onUnmounted',\n  PROPS_KEY = 'props',\n  STATE_KEY = 'state',\n  SLOTS_KEY = 'slots',\n  ROOT_KEY = 'root',\n  IS_PURE_SYMBOL = Symbol('pure'),\n  IS_COMPONENT_UPDATING = Symbol('is_updating'),\n  PARENT_KEY_SYMBOL = Symbol('parent'),\n  ATTRIBUTES_KEY_SYMBOL = Symbol('attributes'),\n  TEMPLATE_KEY_SYMBOL = Symbol('template');\n\nexport { ATTRIBUTES_KEY_SYMBOL, COMPONENTS_IMPLEMENTATION_MAP, DOM_COMPONENT_INSTANCE_PROPERTY, IS_COMPONENT_UPDATING, IS_DIRECTIVE, IS_PURE_SYMBOL, MOUNT_METHOD_KEY, ON_BEFORE_MOUNT_KEY, ON_BEFORE_UNMOUNT_KEY, ON_BEFORE_UPDATE_KEY, ON_MOUNTED_KEY, ON_UNMOUNTED_KEY, ON_UPDATED_KEY, PARENT_KEY_SYMBOL, PLUGINS_SET, PROPS_KEY, ROOT_KEY, SHOULD_UPDATE_KEY, SLOTS_KEY, STATE_KEY, TEMPLATE_KEY_SYMBOL, UNMOUNT_METHOD_KEY, UPDATE_METHOD_KEY };\n", "/* Riot WIP, @license MIT */\nconst ATTRIBUTE = 0;\nconst EVENT = 1;\nconst TEXT = 2;\nconst VALUE = 3;\nconst REF = 4;\n\nconst expressionTypes = {\n  ATTRIBUTE,\n  EVENT,\n  TEXT,\n  VALUE,\n  REF,\n};\n\nexport { ATTRIBUTE, EVENT, REF, TEXT, VALUE, expressionTypes as default };\n", "/* Riot WIP, @license MIT */\n/**\n * Convert a string from camel case to dash-case\n * @param   {string} string - probably a component tag name\n * @returns {string} component name normalized\n */\nfunction camelToDashCase(string) {\n  return string.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()\n}\n\n/**\n * Convert a string containing dashes to camel case\n * @param   {string} string - input string\n * @returns {string} my-string -> myString\n */\nfunction dashToCamelCase(string) {\n  return string.replace(/-(\\w)/g, (_, c) => c.toUpperCase())\n}\n\nexport { camelToDashCase, dashToCamelCase };\n", "/* Riot WIP, @license MIT */\nimport { VALUE, ATTRIBUTE, REF } from './expression-types.js';\nimport { dashToCamelCase } from './strings.js';\n\n/**\n * Throw an error with a descriptive message\n * @param   { string } message - error message\n * @param   { string } cause - optional error cause object\n * @returns { undefined } hoppla... at this point the program should stop working\n */\nfunction panic(message, cause) {\n  throw new Error(message, { cause })\n}\n/**\n * Returns the memoized (cached) function.\n * // borrowed from https://www.30secondsofcode.org/js/s/memoize\n * @param {Function} fn - function to memoize\n * @returns {Function} memoize function\n */\nfunction memoize(fn) {\n  const cache = new Map();\n  const cached = (val) => {\n    return cache.has(val)\n      ? cache.get(val)\n      : cache.set(val, fn.call(this, val)) && cache.get(val)\n  };\n  cached.cache = cache;\n  return cached\n}\n\n/**\n * Evaluate a list of attribute expressions\n * @param   {Array} attributes - attribute expressions generated by the riot compiler\n * @returns {Object} key value pairs with the result of the computation\n */\nfunction evaluateAttributeExpressions(attributes) {\n  return attributes.reduce((acc, attribute) => {\n    const { value, type } = attribute;\n\n    switch (true) {\n      // ref attributes shouldn't be evaluated in the props\n      case attribute.type === REF:\n        break\n      // spread attribute\n      case !attribute.name && type === ATTRIBUTE:\n        return {\n          ...acc,\n          ...value,\n        }\n      // value attribute\n      case type === VALUE:\n        acc.value = attribute.value;\n        break\n      // normal attributes\n      default:\n        acc[dashToCamelCase(attribute.name)] = attribute.value;\n    }\n\n    return acc\n  }, {})\n}\n\nexport { evaluateAttributeExpressions, memoize, panic };\n", "/* Riot WIP, @license MIT */\n/**\n * Quick type checking\n * @param   {*} element - anything\n * @param   {string} type - type definition\n * @returns {boolean} true if the type corresponds\n */\nfunction checkType(element, type) {\n  return typeof element === type\n}\n\n/**\n * Check if an element is part of an svg\n * @param   {HTMLElement}  el - element to check\n * @returns {boolean} true if we are in an svg context\n */\nfunction isSvg(el) {\n  const owner = el.ownerSVGElement;\n\n  return !!owner || owner === null\n}\n\n/**\n * Check if an element is a template tag\n * @param   {HTMLElement}  el - element to check\n * @returns {boolean} true if it's a <template>\n */\nfunction isTemplate(el) {\n  return el.tagName.toLowerCase() === 'template'\n}\n\n/**\n * Check that will be passed if its argument is a function\n * @param   {*} value - value to check\n * @returns {boolean} - true if the value is a function\n */\nfunction isFunction(value) {\n  return checkType(value, 'function')\n}\n\n/**\n * Check if a value is a Boolean\n * @param   {*}  value - anything\n * @returns {boolean} true only for the value is a boolean\n */\nfunction isBoolean(value) {\n  return checkType(value, 'boolean')\n}\n\n/**\n * Check if a value is an Object\n * @param   {*}  value - anything\n * @returns {boolean} true only for the value is an object\n */\nfunction isObject(value) {\n  return !isNil(value) && value.constructor === Object\n}\n\n/**\n * Check if a value is null or undefined\n * @param   {*}  value - anything\n * @returns {boolean} true only for the 'undefined' and 'null' types\n */\nfunction isNil(value) {\n  return value === null || value === undefined\n}\n\nexport { checkType, isBoolean, isFunction, isNil, isObject, isSvg, isTemplate };\n", "/* Riot WIP, @license MIT */\nimport { dashToCamelCase } from './strings.js';\n\n/**\n * Get all the element attributes as object\n * @param   {HTMLElement} element - DOM node we want to parse\n * @returns {Object} all the attributes found as a key value pairs\n */\nfunction DOMattributesToObject(element) {\n  return Array.from(element.attributes).reduce((acc, attribute) => {\n    acc[dashToCamelCase(attribute.name)] = attribute.value;\n    return acc\n  }, {})\n}\n\n/**\n * Move all the child nodes from a source tag to another\n * @param   {HTMLElement} source - source node\n * @param   {HTMLElement} target - target node\n * @returns {undefined} it's a void method \u00AF\\_(\u30C4)_/\u00AF\n */\n\n// Ignore this helper because it's needed only for svg tags\nfunction moveChildren(source, target) {\n  // eslint-disable-next-line fp/no-loops\n  while (source.firstChild) target.appendChild(source.firstChild);\n}\n\n/**\n * Remove the child nodes from any DOM node\n * @param   {HTMLElement} node - target node\n * @returns {undefined}\n */\nfunction cleanNode(node) {\n  // eslint-disable-next-line fp/no-loops\n  while (node.firstChild) node.removeChild(node.firstChild);\n}\n\n/**\n * Clear multiple children in a node\n * @param   {HTMLElement[]} children - direct children nodes\n * @returns {undefined}\n */\nfunction clearChildren(children) {\n  // eslint-disable-next-line fp/no-loops,fp/no-let\n  for (let i = 0; i < children.length; i++) removeChild(children[i]);\n}\n\n/**\n * Remove a node\n * @param {HTMLElement}node - node to remove\n * @returns {undefined}\n */\nconst removeChild = (node) => node.remove();\n\n/**\n * Insert before a node\n * @param {HTMLElement} newNode - node to insert\n * @param {HTMLElement} refNode - ref child\n * @returns {undefined}\n */\nconst insertBefore = (newNode, refNode) =>\n  refNode &&\n  refNode.parentNode &&\n  refNode.parentNode.insertBefore(newNode, refNode);\n\n/**\n * Replace a node\n * @param {HTMLElement} newNode - new node to add to the DOM\n * @param {HTMLElement} replaced - node to replace\n * @returns {undefined}\n */\nconst replaceChild = (newNode, replaced) =>\n  replaced &&\n  replaced.parentNode &&\n  replaced.parentNode.replaceChild(newNode, replaced);\n\nexport { DOMattributesToObject, cleanNode, clearChildren, insertBefore, moveChildren, removeChild, replaceChild };\n", "/* Riot WIP, @license MIT */\nconst EACH = 0;\nconst IF = 1;\nconst SIMPLE = 2;\nconst TAG = 3;\nconst SLOT = 4;\n\nconst bindingTypes = {\n  EACH,\n  IF,\n  SIMPLE,\n  TAG,\n  SLOT,\n};\n\nexport { EACH, IF, SIMPLE, SLOT, TAG, bindingTypes as default };\n", "/* Riot WIP, @license MIT */\nimport { isObject } from './checks.js';\n\n/**\n * Helper function to set an immutable property\n * @param   {Object} source - object where the new property will be set\n * @param   {string} key - object key where the new property will be stored\n * @param   {*} value - value of the new property\n * @param   {Object} options - set the property overriding the default options\n * @returns {Object} - the original object modified\n */\nfunction defineProperty(source, key, value, options = {}) {\n  /* eslint-disable fp/no-mutating-methods */\n  Object.defineProperty(source, key, {\n    value,\n    enumerable: false,\n    writable: false,\n    configurable: true,\n    ...options,\n  });\n  /* eslint-enable fp/no-mutating-methods */\n\n  return source\n}\n\n/**\n * Define multiple properties on a target object\n * @param   {Object} source - object where the new properties will be set\n * @param   {Object} properties - object containing as key pair the key + value properties\n * @param   {Object} options - set the property overriding the default options\n * @returns {Object} the original object modified\n */\nfunction defineProperties(source, properties, options) {\n  Object.entries(properties).forEach(([key, value]) => {\n    defineProperty(source, key, value, options);\n  });\n\n  return source\n}\n\n/**\n * Define default properties if they don't exist on the source object\n * @param   {Object} source - object that will receive the default properties\n * @param   {Object} defaults - object containing additional optional keys\n * @returns {Object} the original object received enhanced\n */\nfunction defineDefaults(source, defaults) {\n  Object.entries(defaults).forEach(([key, value]) => {\n    if (!source[key]) source[key] = value;\n  });\n\n  return source\n}\n\n/**\n * Generate a new object picking only the properties from a given array\n * @param {Object} source - target object\n * @param {Array} keys - list of keys that we want to copy over to the new object\n * @return {Object} a new object conaining only the keys that we have picked from the keys array list\n */\nfunction pick(source, keys) {\n  return isObject(source)\n    ? Object.fromEntries(keys.map((key) => [key, source[key]]))\n    : source\n}\n\nexport { defineDefaults, defineProperties, defineProperty, pick };\n", "/* Riot WIP, @license MIT */\nimport { insertBefore, removeChild, cleanNode, clearChildren, moveChildren, replaceChild } from '../../util/dom.js';\nimport { IS_PURE_SYMBOL, PARENT_KEY_SYMBOL } from '../../util/constants.js';\nimport { SIMPLE, SLOT, TAG, EACH, IF } from '../../util/binding-types.js';\nexport { default as bindingTypes } from '../../util/binding-types.js';\nimport { TEXT, EVENT, REF, VALUE, ATTRIBUTE } from '../../util/expression-types.js';\nexport { default as expressionTypes } from '../../util/expression-types.js';\nimport { defineProperty } from '../../util/objects.js';\nimport { isTemplate, isBoolean, isObject, isFunction, isSvg, isNil } from '../../util/checks.js';\nimport { panic, memoize, evaluateAttributeExpressions } from '../../util/misc.js';\n\nconst HEAD_SYMBOL = Symbol();\nconst TAIL_SYMBOL = Symbol();\n\n/**\n * Create the <template> fragments text nodes\n * @return {Object} {{head: Text, tail: Text}}\n */\nfunction createHeadTailPlaceholders() {\n  const head = document.createTextNode('');\n  const tail = document.createTextNode('');\n\n  head[HEAD_SYMBOL] = true;\n  tail[TAIL_SYMBOL] = true;\n\n  return { head, tail }\n}\n\n/**\n * Create the template meta object in case of <template> fragments\n * @param   {TemplateChunk} componentTemplate - template chunk object\n * @returns {Object} the meta property that will be passed to the mount function of the TemplateChunk\n */\nfunction createTemplateMeta(componentTemplate) {\n  const fragment = componentTemplate.dom.cloneNode(true);\n  const { head, tail } = createHeadTailPlaceholders();\n\n  return {\n    avoidDOMInjection: true,\n    fragment,\n    head,\n    tail,\n    children: [head, ...Array.from(fragment.childNodes), tail],\n  }\n}\n\n/* c8 ignore start */\n/**\n * ISC License\n *\n * Copyright (c) 2020, Andrea Giammarchi, @WebReflection\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\n * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n * PERFORMANCE OF THIS SOFTWARE.\n */\n\n// fork of https://github.com/WebReflection/udomdiff version 1.1.0\n// due to https://github.com/WebReflection/udomdiff/pull/2\n/* eslint-disable */\n\n/**\n * @param {Node[]} a The list of current/live children\n * @param {Node[]} b The list of future children\n * @param {(entry: Node, action: number) => Node} get\n * The callback invoked per each entry related DOM operation.\n * @param {Node} [before] The optional node used as anchor to insert before.\n * @returns {Node[]} The same list of future children.\n */\nconst udomdiff = (a, b, get, before) => {\n  const bLength = b.length;\n  let aEnd = a.length;\n  let bEnd = bLength;\n  let aStart = 0;\n  let bStart = 0;\n  let map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    // append head, tail, or nodes in between: fast path\n    if (aEnd === aStart) {\n      // we could be in a situation where the rest of nodes that\n      // need to be added are not at the end, and in such case\n      // the node to `insertBefore`, if the index is more than 0\n      // must be retrieved, otherwise it's gonna be the first item.\n      const node =\n        bEnd < bLength\n          ? bStart\n            ? get(b[bStart - 1], -0).nextSibling\n            : get(b[bEnd - bStart], 0)\n          : before;\n      while (bStart < bEnd) insertBefore(get(b[bStart++], 1), node);\n    }\n    // remove head or tail: fast path\n    else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        // remove the node only if it's unknown or not live\n        if (!map || !map.has(a[aStart])) removeChild(get(a[aStart], -1));\n        aStart++;\n      }\n    }\n    // same node: fast path\n    else if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n    }\n    // same tail: fast path\n    else if (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    // The once here single last swap \"fast path\" has been removed in v1.1.0\n    // https://github.com/WebReflection/udomdiff/blob/single-final-swap/esm/index.js#L69-L85\n    // reverse swap: also fast path\n    else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n      // this is a \"shrink\" operation that could happen in these cases:\n      // [1, 2, 3, 4, 5]\n      // [1, 4, 3, 2, 5]\n      // or asymmetric too\n      // [1, 2, 3, 4, 5]\n      // [1, 2, 3, 5, 6, 4]\n      const node = get(a[--aEnd], -1).nextSibling;\n      insertBefore(get(b[bStart++], 1), get(a[aStart++], -1).nextSibling);\n      insertBefore(get(b[--bEnd], 1), node);\n      // mark the future index as identical (yeah, it's dirty, but cheap \uD83D\uDC4D)\n      // The main reason to do this, is that when a[aEnd] will be reached,\n      // the loop will likely be on the fast path, as identical to b[bEnd].\n      // In the best case scenario, the next loop will skip the tail,\n      // but in the worst one, this node will be considered as already\n      // processed, bailing out pretty quickly from the map index check\n      a[aEnd] = b[bEnd];\n    }\n    // map based fallback, \"slow\" path\n    else {\n      // the map requires an O(bEnd - bStart) operation once\n      // to store all future nodes indexes for later purposes.\n      // In the worst case scenario, this is a full O(N) cost,\n      // and such scenario happens at least when all nodes are different,\n      // but also if both first and last items of the lists are different\n      if (!map) {\n        map = new Map();\n        let i = bStart;\n        while (i < bEnd) map.set(b[i], i++);\n      }\n      // if it's a future node, hence it needs some handling\n      if (map.has(a[aStart])) {\n        // grab the index of such node, 'cause it might have been processed\n        const index = map.get(a[aStart]);\n        // if it's not already processed, look on demand for the next LCS\n        if (bStart < index && index < bEnd) {\n          let i = aStart;\n          // counts the amount of nodes that are the same in the future\n          let sequence = 1;\n          while (++i < aEnd && i < bEnd && map.get(a[i]) === index + sequence)\n            sequence++;\n          // effort decision here: if the sequence is longer than replaces\n          // needed to reach such sequence, which would brings again this loop\n          // to the fast path, prepend the difference before a sequence,\n          // and move only the future list index forward, so that aStart\n          // and bStart will be aligned again, hence on the fast path.\n          // An example considering aStart and bStart are both 0:\n          // a: [1, 2, 3, 4]\n          // b: [7, 1, 2, 3, 6]\n          // this would place 7 before 1 and, from that time on, 1, 2, and 3\n          // will be processed at zero cost\n          if (sequence > index - bStart) {\n            const node = get(a[aStart], 0);\n            while (bStart < index) insertBefore(get(b[bStart++], 1), node);\n          }\n          // if the effort wasn't good enough, fallback to a replace,\n          // moving both source and target indexes forward, hoping that some\n          // similar node will be found later on, to go back to the fast path\n          else {\n            replaceChild(get(b[bStart++], 1), get(a[aStart++], -1));\n          }\n        }\n        // otherwise move the source forward, 'cause there's nothing to do\n        else aStart++;\n      }\n      // this node has no meaning in the future list, so it's more than safe\n      // to remove it, and check the next live node out instead, meaning\n      // that only the live list index should be forwarded\n      else removeChild(get(a[aStart++], -1));\n    }\n  }\n  return b\n};\n\nconst UNMOUNT_SCOPE = Symbol('unmount');\n\nconst EachBinding = {\n  // dynamic binding properties\n  // childrenMap: null,\n  // node: null,\n  // root: null,\n  // condition: null,\n  // evaluate: null,\n  // template: null,\n  // isTemplateTag: false,\n  nodes: [],\n  // getKey: null,\n  // indexName: null,\n  // itemName: null,\n  // afterPlaceholder: null,\n  // placeholder: null,\n\n  // API methods\n  mount(scope, parentScope) {\n    return this.update(scope, parentScope)\n  },\n  update(scope, parentScope) {\n    const { placeholder, nodes, childrenMap } = this;\n    const collection = scope === UNMOUNT_SCOPE ? null : this.evaluate(scope);\n    const items = collection ? Array.from(collection) : [];\n\n    // prepare the diffing\n    const { newChildrenMap, batches, futureNodes } = createPatch(\n      items,\n      scope,\n      parentScope,\n      this,\n    );\n\n    // patch the DOM only if there are new nodes\n    udomdiff(\n      nodes,\n      futureNodes,\n      patch(Array.from(childrenMap.values()), parentScope),\n      placeholder,\n    );\n\n    // trigger the mounts and the updates\n    batches.forEach((fn) => fn());\n\n    // update the children map\n    this.childrenMap = newChildrenMap;\n    this.nodes = futureNodes;\n\n    return this\n  },\n  unmount(scope, parentScope) {\n    this.update(UNMOUNT_SCOPE, parentScope);\n\n    return this\n  },\n};\n\n/**\n * Patch the DOM while diffing\n * @param   {any[]} redundant - list of all the children (template, nodes, context) added via each\n * @param   {*} parentScope - scope of the parent template\n * @returns {Function} patch function used by domdiff\n */\nfunction patch(redundant, parentScope) {\n  return (item, info) => {\n    if (info < 0) {\n      // get the last element added to the childrenMap saved previously\n      const element = redundant[redundant.length - 1];\n\n      if (element) {\n        // get the nodes and the template in stored in the last child of the childrenMap\n        const { template, nodes, context } = element;\n        // remove the last node (notice <template> tags might have more children nodes)\n        nodes.pop();\n\n        // notice that we pass null as last argument because\n        // the root node and its children will be removed by domdiff\n        if (!nodes.length) {\n          // we have cleared all the children nodes and we can unmount this template\n          redundant.pop();\n          template.unmount(context, parentScope, null);\n        }\n      }\n    }\n\n    return item\n  }\n}\n\n/**\n * Check whether a template must be filtered from a loop\n * @param   {Function} condition - filter function\n * @param   {Object} context - argument passed to the filter function\n * @returns {boolean} true if this item should be skipped\n */\nfunction mustFilterItem(condition, context) {\n  return condition ? !condition(context) : false\n}\n\n/**\n * Extend the scope of the looped template\n * @param   {Object} scope - current template scope\n * @param   {Object} options - options\n * @param   {string} options.itemName - key to identify the looped item in the new context\n * @param   {string} options.indexName - key to identify the index of the looped item\n * @param   {number} options.index - current index\n * @param   {*} options.item - collection item looped\n * @returns {Object} enhanced scope object\n */\nfunction extendScope(scope, { itemName, indexName, index, item }) {\n  defineProperty(scope, itemName, item);\n  if (indexName) defineProperty(scope, indexName, index);\n\n  return scope\n}\n\n/**\n * Loop the current template items\n * @param   {Array} items - expression collection value\n * @param   {*} scope - template scope\n * @param   {*} parentScope - scope of the parent template\n * @param   {EachBinding} binding - each binding object instance\n * @returns {Object} data\n * @returns {Map} data.newChildrenMap - a Map containing the new children template structure\n * @returns {Array} data.batches - array containing the template lifecycle functions to trigger\n * @returns {Array} data.futureNodes - array containing the nodes we need to diff\n */\nfunction createPatch(items, scope, parentScope, binding) {\n  const {\n    condition,\n    template,\n    childrenMap,\n    itemName,\n    getKey,\n    indexName,\n    root,\n    isTemplateTag,\n  } = binding;\n  const newChildrenMap = new Map();\n  const batches = [];\n  const futureNodes = [];\n\n  items.forEach((item, index) => {\n    const context = extendScope(Object.create(scope), {\n      itemName,\n      indexName,\n      index,\n      item,\n    });\n    const key = getKey ? getKey(context) : index;\n    const oldItem = childrenMap.get(key);\n    const nodes = [];\n\n    if (mustFilterItem(condition, context)) {\n      return\n    }\n\n    const mustMount = !oldItem;\n    const componentTemplate = oldItem ? oldItem.template : template.clone();\n    const el = componentTemplate.el || root.cloneNode();\n    const meta =\n      isTemplateTag && mustMount\n        ? createTemplateMeta(componentTemplate)\n        : componentTemplate.meta;\n\n    if (mustMount) {\n      batches.push(() =>\n        componentTemplate.mount(el, context, parentScope, meta),\n      );\n    } else {\n      batches.push(() => componentTemplate.update(context, parentScope));\n    }\n\n    // create the collection of nodes to update or to add\n    // in case of template tags we need to add all its children nodes\n    if (isTemplateTag) {\n      nodes.push(...meta.children);\n    } else {\n      nodes.push(el);\n    }\n\n    // delete the old item from the children map\n    childrenMap.delete(key);\n    futureNodes.push(...nodes);\n\n    // update the children map\n    newChildrenMap.set(key, {\n      nodes,\n      template: componentTemplate,\n      context,\n      index,\n    });\n  });\n\n  return {\n    newChildrenMap,\n    batches,\n    futureNodes,\n  }\n}\n\nfunction create$6(\n  node,\n  { evaluate, condition, itemName, indexName, getKey, template },\n) {\n  const placeholder = document.createTextNode('');\n  const root = node.cloneNode();\n\n  insertBefore(placeholder, node);\n  removeChild(node);\n\n  return {\n    ...EachBinding,\n    childrenMap: new Map(),\n    node,\n    root,\n    condition,\n    evaluate,\n    isTemplateTag: isTemplate(root),\n    template: template.createDOM(node),\n    getKey,\n    indexName,\n    itemName,\n    placeholder,\n  }\n}\n\n/**\n * Binding responsible for the `if` directive\n */\nconst IfBinding = {\n  // dynamic binding properties\n  // node: null,\n  // evaluate: null,\n  // isTemplateTag: false,\n  // placeholder: null,\n  // template: null,\n\n  // API methods\n  mount(scope, parentScope) {\n    return this.update(scope, parentScope)\n  },\n  update(scope, parentScope) {\n    const value = !!this.evaluate(scope);\n    const mustMount = !this.value && value;\n    const mustUnmount = this.value && !value;\n    const mount = () => {\n      const pristine = this.node.cloneNode();\n\n      insertBefore(pristine, this.placeholder);\n      this.template = this.template.clone();\n      this.template.mount(pristine, scope, parentScope);\n    };\n\n    switch (true) {\n      case mustMount:\n        mount();\n        break\n      case mustUnmount:\n        this.unmount(scope);\n        break\n      default:\n        if (value) this.template.update(scope, parentScope);\n    }\n\n    this.value = value;\n\n    return this\n  },\n  unmount(scope, parentScope) {\n    this.template.unmount(scope, parentScope, true);\n\n    return this\n  },\n};\n\nfunction create$5(node, { evaluate, template }) {\n  const placeholder = document.createTextNode('');\n\n  insertBefore(placeholder, node);\n  removeChild(node);\n\n  return {\n    ...IfBinding,\n    node,\n    evaluate,\n    placeholder,\n    template: template.createDOM(node),\n  }\n}\n\n/* c8 ignore next */\nconst ElementProto = typeof Element === 'undefined' ? {} : Element.prototype;\nconst isNativeHtmlProperty = memoize(\n  (name) => ElementProto.hasOwnProperty(name), // eslint-disable-line\n);\n\n/**\n * Add all the attributes provided\n * @param   {HTMLElement} node - target node\n * @param   {Object} attributes - object containing the attributes names and values\n * @returns {undefined} sorry it's a void function :(\n */\nfunction setAllAttributes(node, attributes) {\n  Object.keys(attributes).forEach((name) =>\n    attributeExpression({ node, name }, attributes[name]),\n  );\n}\n\n/**\n * Remove all the attributes provided\n * @param   {HTMLElement} node - target node\n * @param   {Object} newAttributes - object containing all the new attribute names\n * @param   {Object} oldAttributes - object containing all the old attribute names\n * @returns {undefined} sorry it's a void function :(\n */\nfunction removeAllAttributes(node, newAttributes, oldAttributes) {\n  const newKeys = newAttributes ? Object.keys(newAttributes) : [];\n\n  Object.keys(oldAttributes)\n    .filter((name) => !newKeys.includes(name))\n    .forEach((attribute) => node.removeAttribute(attribute));\n}\n\n/**\n * Check whether the attribute value can be rendered\n * @param {*} value - expression value\n * @returns {boolean} true if we can render this attribute value\n */\nfunction canRenderAttribute(value) {\n  return ['string', 'number', 'boolean'].includes(typeof value)\n}\n\n/**\n * Check whether the attribute should be removed\n * @param {*} value - expression value\n * @param   {boolean} isBoolean - flag to handle boolean attributes\n * @returns {boolean} boolean - true if the attribute can be removed}\n */\nfunction shouldRemoveAttribute(value, isBoolean) {\n  // boolean attributes should be removed if the value is falsy\n  if (isBoolean) return !value && value !== 0\n  // otherwise we can try to render it\n  return typeof value === 'undefined' || value === null\n}\n\n/**\n * This methods handles the DOM attributes updates\n * @param   {HTMLElement} expression.node - target node\n * @param   {string} expression.name - attribute name\n * @param   {boolean} expression.isBoolean - flag to handle boolean attributes\n * @param   {*} expression.value - the old expression cached value\n * @param   {*} value - new expression value\n * @returns {undefined}\n */\nfunction attributeExpression(\n  { node, name, isBoolean: isBoolean$1, value: oldValue },\n  value,\n) {\n  // is it a spread operator? {...attributes}\n  if (!name) {\n    if (oldValue) {\n      // remove all the old attributes\n      removeAllAttributes(node, value, oldValue);\n    }\n\n    // is the value still truthy?\n    if (value) {\n      setAllAttributes(node, value);\n    }\n\n    return\n  }\n\n  // store the attribute on the node to make it compatible with native custom elements\n  if (\n    !isNativeHtmlProperty(name) &&\n    (isBoolean(value) || isObject(value) || isFunction(value))\n  ) {\n    node[name] = value;\n  }\n\n  if (shouldRemoveAttribute(value, isBoolean$1)) {\n    node.removeAttribute(name);\n  } else if (canRenderAttribute(value)) {\n    node.setAttribute(name, normalizeValue(name, value, isBoolean$1));\n  }\n}\n\n/**\n * Get the value as string\n * @param   {string} name - attribute name\n * @param   {*} value - user input value\n * @param   {boolean} isBoolean - boolean attributes flag\n * @returns {string} input value as string\n */\nfunction normalizeValue(name, value, isBoolean) {\n  // be sure that expressions like selected={ true } will always be rendered as selected='selected'\n  // fix https://github.com/riot/riot/issues/2975\n  return value === true && isBoolean ? name : value\n}\n\nconst RE_EVENTS_PREFIX = /^on/;\n\nconst getCallbackAndOptions = (value) =>\n  Array.isArray(value) ? value : [value, false];\n\n// see also https://medium.com/@WebReflection/dom-handleevent-a-cross-platform-standard-since-year-2000-5bf17287fd38\nconst EventListener = {\n  handleEvent(event) {\n    this[event.type](event);\n  },\n};\nconst ListenersWeakMap = new WeakMap();\n\nconst createListener = (node) => {\n  const listener = Object.create(EventListener);\n  ListenersWeakMap.set(node, listener);\n  return listener\n};\n\n/**\n * Set a new event listener\n * @param   {HTMLElement} expression.node - target node\n * @param   {string} expression.name - event name\n * @param   {*} value - new expression value\n * @returns {value} the callback just received\n */\nfunction eventExpression({ node, name }, value) {\n  const normalizedEventName = name.replace(RE_EVENTS_PREFIX, '');\n  const eventListener = ListenersWeakMap.get(node) || createListener(node);\n  const [callback, options] = getCallbackAndOptions(value);\n  const handler = eventListener[normalizedEventName];\n  const mustRemoveEvent = handler && !callback;\n  const mustAddEvent = callback && !handler;\n\n  if (mustRemoveEvent) {\n    node.removeEventListener(normalizedEventName, eventListener);\n  }\n\n  if (mustAddEvent) {\n    node.addEventListener(normalizedEventName, eventListener, options);\n  }\n\n  eventListener[normalizedEventName] = callback;\n}\n\n/**\n * Normalize the user value in order to render a empty string in case of falsy values\n * @param   {*} value - user input value\n * @returns {string} hopefully a string\n */\nfunction normalizeStringValue(value) {\n  return isNil(value) ? '' : value\n}\n\n/**\n * Get the the target text node to update or create one from of a comment node\n * @param   {HTMLElement} node - any html element containing childNodes\n * @param   {number} childNodeIndex - index of the text node in the childNodes list\n * @returns {Text} the text node to update\n */\nconst getTextNode = (node, childNodeIndex) => {\n  return node.childNodes[childNodeIndex]\n};\n\n/**\n * This methods handles a simple text expression update\n * @param   {HTMLElement} expression.node - target node\n * @param   {*} value - new expression value\n * @returns {undefined}\n */\nfunction textExpression({ node }, value) {\n  node.data = normalizeStringValue(value);\n}\n\n/**\n * This methods handles the input fields value updates\n * @param   {HTMLElement} expression.node - target node\n * @param   {*} value - new expression value\n * @returns {undefined}\n */\nfunction valueExpression({ node }, value) {\n  node.value = normalizeStringValue(value);\n}\n\n/**\n   This method handles the REF attribute expressions \n * @param   {HTMLElement} expression.node - target node\n * @param   {*} expression.value - the old expression cached value\n * @param   {*} value - new expression value\n * @returns {undefined}\n */\nfunction refExpression({ node, value: oldValue }, value) {\n  // called on mount and update\n  if (value) value(node);\n  // called on unmount\n  // in this case the node value is null\n  else oldValue(null);\n}\n\nconst expressions = {\n  [ATTRIBUTE]: attributeExpression,\n  [EVENT]: eventExpression,\n  [TEXT]: textExpression,\n  [VALUE]: valueExpression,\n  [REF]: refExpression,\n};\n\nconst Expression = {\n  // Static props\n  // node: null,\n  // value: null,\n\n  // API methods\n  /**\n   * Mount the expression evaluating its initial value\n   * @param   {*} scope - argument passed to the expression to evaluate its current values\n   * @returns {Expression} self\n   */\n  mount(scope) {\n    // hopefully a pure function\n    this.value = this.evaluate(scope);\n\n    // IO() DOM updates\n    expressions[this.type](this, this.value);\n\n    return this\n  },\n  /**\n   * Update the expression if its value changed\n   * @param   {*} scope - argument passed to the expression to evaluate its current values\n   * @returns {Expression} self\n   */\n  update(scope) {\n    // pure function\n    const value = this.evaluate(scope);\n\n    if (this.value !== value) {\n      // IO() DOM updates\n      expressions[this.type](this, value);\n      this.value = value;\n    }\n\n    return this\n  },\n  /**\n   * Expression teardown method\n   * @returns {Expression} self\n   */\n  unmount() {\n    // unmount event and ref expressions\n    if ([EVENT, REF].includes(this.type)) expressions[this.type](this, null);\n\n    return this\n  },\n};\n\nfunction create$4(node, data) {\n  return {\n    ...Expression,\n    ...data,\n    node: data.type === TEXT ? getTextNode(node, data.childNodeIndex) : node,\n  }\n}\n\n/**\n * Create a flat object having as keys a list of methods that if dispatched will propagate\n * on the whole collection\n * @param   {Array} collection - collection to iterate\n * @param   {Array<string>} methods - methods to execute on each item of the collection\n * @param   {*} context - context returned by the new methods created\n * @returns {Object} a new object to simplify the the nested methods dispatching\n */\nfunction flattenCollectionMethods(collection, methods, context) {\n  return methods.reduce((acc, method) => {\n    return {\n      ...acc,\n      [method]: (scope) => {\n        return collection.map((item) => item[method](scope)) && context\n      },\n    }\n  }, {})\n}\n\nfunction create$3(node, { expressions }) {\n  return flattenCollectionMethods(\n    expressions.map((expression) => create$4(node, expression)),\n    ['mount', 'update', 'unmount'],\n  )\n}\n\nconst extendParentScope = (attributes, scope, parentScope) => {\n  if (!attributes || !attributes.length) return parentScope\n\n  const expressions = attributes.map((attr) => ({\n    ...attr,\n    value: attr.evaluate(scope),\n  }));\n\n  return Object.assign(\n    Object.create(parentScope || null),\n    evaluateAttributeExpressions(expressions),\n  )\n};\n\nconst findSlotById = (id, slots) => slots?.find((slot) => slot.id === id);\n\n// this function is only meant to fix an edge case\n// https://github.com/riot/riot/issues/2842\nconst getRealParent = (scope, parentScope) =>\n  scope[PARENT_KEY_SYMBOL] || parentScope;\n\nconst SlotBinding = {\n  // dynamic binding properties\n  // node: null,\n  // name: null,\n  attributes: [],\n  // templateData: null,\n  // template: null,\n\n  getTemplateScope(scope, parentScope) {\n    return extendParentScope(this.attributes, scope, parentScope)\n  },\n\n  // API methods\n  mount(scope, parentScope) {\n    const templateData = scope.slots\n      ? findSlotById(this.name, scope.slots)\n      : false;\n    const { parentNode } = this.node;\n\n    // if the slot did not pass any content, we will use the self slot for optional fallback content (https://github.com/riot/riot/issues/3024)\n    const realParent = templateData ? getRealParent(scope, parentScope) : scope;\n\n    // if there is no html for the current slot detected we rely on the parent slots (https://github.com/riot/riot/issues/3055)\n    this.templateData = templateData?.html\n      ? templateData\n      : findSlotById(this.name, realParent.slots);\n\n    // override the template property if the slot needs to be replaced\n    this.template =\n      (this.templateData &&\n        create(this.templateData.html, this.templateData.bindings).createDOM(\n          parentNode,\n        )) ||\n      // otherwise use the optional template fallback if provided by the compiler see also https://github.com/riot/riot/issues/3014\n      this.template?.clone();\n\n    if (this.template) {\n      cleanNode(this.node);\n      this.template.mount(\n        this.node,\n        this.getTemplateScope(scope, realParent),\n        realParent,\n      );\n      this.template.children = Array.from(this.node.childNodes);\n    }\n\n    moveSlotInnerContent(this.node);\n    removeChild(this.node);\n\n    return this\n  },\n  update(scope, parentScope) {\n    if (this.template) {\n      const realParent = this.templateData\n        ? getRealParent(scope, parentScope)\n        : scope;\n\n      this.template.update(this.getTemplateScope(scope, realParent), realParent);\n    }\n\n    return this\n  },\n  unmount(scope, parentScope, mustRemoveRoot) {\n    if (this.template) {\n      this.template.unmount(\n        this.getTemplateScope(scope, parentScope),\n        null,\n        mustRemoveRoot,\n      );\n    }\n\n    return this\n  },\n};\n\n/**\n * Move the inner content of the slots outside of them\n * @param   {HTMLElement} slot - slot node\n * @returns {undefined} it's a void method \u00AF\\_(\u30C4)_/\u00AF\n */\nfunction moveSlotInnerContent(slot) {\n  const child = slot && slot.firstChild;\n\n  if (!child) return\n\n  insertBefore(child, slot);\n  moveSlotInnerContent(slot);\n}\n\n/**\n * Create a single slot binding\n * @param   {HTMLElement} node - slot node\n * @param   {string} name - slot id\n * @param   {AttributeExpressionData[]} attributes - slot attributes\n * @returns {Object} Slot binding object\n */\nfunction createSlot(node, { name, attributes, template }) {\n  return {\n    ...SlotBinding,\n    attributes,\n    template,\n    node,\n    name,\n  }\n}\n\n/**\n * Create a new tag object if it was registered before, otherwise fallback to the simple\n * template chunk\n * @param   {Function} component - component factory function\n * @param   {Array<Object>} slots - array containing the slots markup\n * @param   {Array} attributes - dynamic attributes that will be received by the tag element\n * @returns {TagImplementation|TemplateChunk} a tag implementation or a template chunk as fallback\n */\nfunction getTag(component, slots = [], attributes = []) {\n  // if this tag was registered before we will return its implementation\n  if (component) {\n    return component({ slots, attributes })\n  }\n\n  // otherwise we return a template chunk\n  return create(slotsToMarkup(slots), [\n    ...slotBindings(slots),\n    {\n      // the attributes should be registered as binding\n      // if we fallback to a normal template chunk\n      expressions: attributes.map((attr) => {\n        return {\n          type: ATTRIBUTE,\n          ...attr,\n        }\n      }),\n    },\n  ])\n}\n\n/**\n * Merge all the slots bindings into a single array\n * @param   {Array<Object>} slots - slots collection\n * @returns {Array<Bindings>} flatten bindings array\n */\nfunction slotBindings(slots) {\n  return slots.reduce((acc, { bindings }) => acc.concat(bindings), [])\n}\n\n/**\n * Merge all the slots together in a single markup string\n * @param   {Array<Object>} slots - slots collection\n * @returns {string} markup of all the slots in a single string\n */\nfunction slotsToMarkup(slots) {\n  return slots.reduce((acc, slot) => {\n    return acc + slot.html\n  }, '')\n}\n\nconst TagBinding = {\n  // dynamic binding properties\n  // node: null,\n  // evaluate: null,\n  // name: null,\n  // slots: null,\n  // tag: null,\n  // attributes: null,\n  // getComponent: null,\n\n  mount(scope) {\n    return this.update(scope)\n  },\n  update(scope, parentScope) {\n    const name = this.evaluate(scope);\n\n    // simple update\n    if (name && name === this.name) {\n      this.tag.update(scope);\n    } else {\n      // unmount the old tag if it exists\n      this.unmount(scope, parentScope, true);\n\n      // mount the new tag\n      this.name = name;\n      this.tag = getTag(this.getComponent(name), this.slots, this.attributes);\n      this.tag.mount(this.node, scope);\n    }\n\n    return this\n  },\n  unmount(scope, parentScope, keepRootTag) {\n    if (this.tag) {\n      // keep the root tag\n      this.tag.unmount(keepRootTag);\n    }\n\n    return this\n  },\n};\n\nfunction create$2(\n  node,\n  { evaluate, getComponent, slots, attributes },\n) {\n  return {\n    ...TagBinding,\n    node,\n    evaluate,\n    slots,\n    attributes,\n    getComponent,\n  }\n}\n\nconst bindings = {\n  [IF]: create$5,\n  [SIMPLE]: create$3,\n  [EACH]: create$6,\n  [TAG]: create$2,\n  [SLOT]: createSlot,\n};\n\n/**\n * Text expressions in a template tag will get childNodeIndex value normalized\n * depending on the position of the <template> tag offset\n * @param   {Expression[]} expressions - riot expressions array\n * @param   {number} textExpressionsOffset - offset of the <template> tag\n * @returns {Expression[]} expressions containing the text expressions normalized\n */\nfunction fixTextExpressionsOffset(expressions, textExpressionsOffset) {\n  return expressions.map((e) =>\n    e.type === TEXT\n      ? {\n          ...e,\n          childNodeIndex: e.childNodeIndex + textExpressionsOffset,\n        }\n      : e,\n  )\n}\n\n/**\n * Bind a new expression object to a DOM node\n * @param   {HTMLElement} root - DOM node where to bind the expression\n * @param   {TagBindingData} binding - binding data\n * @param   {number|null} templateTagOffset - if it's defined we need to fix the text expressions childNodeIndex offset\n * @returns {Binding} Binding object\n */\nfunction create$1(root, binding, templateTagOffset) {\n  const { selector, type, redundantAttribute, expressions } = binding;\n  // find the node to apply the bindings\n  const node = selector ? root.querySelector(selector) : root;\n\n  // remove eventually additional attributes created only to select this node\n  if (redundantAttribute) node.removeAttribute(redundantAttribute);\n  const bindingExpressions = expressions || [];\n\n  // init the binding\n  return (bindings[type] || bindings[SIMPLE])(node, {\n    ...binding,\n    expressions:\n      templateTagOffset && !selector\n        ? fixTextExpressionsOffset(bindingExpressions, templateTagOffset)\n        : bindingExpressions,\n  })\n}\n\n// in this case a simple innerHTML is enough\nfunction createHTMLTree(html, root) {\n  const template = isTemplate(root) ? root : document.createElement('template');\n  template.innerHTML = html;\n  return template.content\n}\n\n// for svg nodes we need a bit more work\n/* c8 ignore start */\nfunction createSVGTree(html, container) {\n  // create the SVGNode\n  const svgNode = container.ownerDocument.importNode(\n    new window.DOMParser().parseFromString(\n      `<svg xmlns=\"http://www.w3.org/2000/svg\">${html}</svg>`,\n      'application/xml',\n    ).documentElement,\n    true,\n  );\n\n  return svgNode\n}\n/* c8 ignore end */\n\n/**\n * Create the DOM that will be injected\n * @param {Object} root - DOM node to find out the context where the fragment will be created\n * @param   {string} html - DOM to create as string\n * @returns {HTMLDocumentFragment|HTMLElement} a new html fragment\n */\nfunction createDOMTree(root, html) {\n  /* c8 ignore next */\n  if (isSvg(root)) return createSVGTree(html, root)\n\n  return createHTMLTree(html, root)\n}\n\n/**\n * Inject the DOM tree into a target node\n * @param   {HTMLElement} el - target element\n * @param   {DocumentFragment|SVGElement} dom - dom tree to inject\n * @returns {undefined}\n */\nfunction injectDOM(el, dom) {\n  switch (true) {\n    case isSvg(el):\n      moveChildren(dom, el);\n      break\n    case isTemplate(el):\n      el.parentNode.replaceChild(dom, el);\n      break\n    default:\n      el.appendChild(dom);\n  }\n}\n\n/**\n * Create the Template DOM skeleton\n * @param   {HTMLElement} el - root node where the DOM will be injected\n * @param   {string|HTMLElement} html - HTML markup or HTMLElement that will be injected into the root node\n * @returns {?DocumentFragment} fragment that will be injected into the root node\n */\nfunction createTemplateDOM(el, html) {\n  return html && (typeof html === 'string' ? createDOMTree(el, html) : html)\n}\n\n/**\n * Get the offset of the <template> tag\n * @param {HTMLElement} parentNode - template tag parent node\n * @param {HTMLElement} el - the template tag we want to render\n * @param   {Object} meta - meta properties needed to handle the <template> tags in loops\n * @returns {number} offset of the <template> tag calculated from its siblings DOM nodes\n */\nfunction getTemplateTagOffset(parentNode, el, meta) {\n  const siblings = Array.from(parentNode.childNodes);\n\n  return Math.max(siblings.indexOf(el), siblings.indexOf(meta.head) + 1, 0)\n}\n\n/**\n * Template Chunk model\n * @type {Object}\n */\nconst TemplateChunk = {\n  // Static props\n  // bindings: null,\n  // bindingsData: null,\n  // html: null,\n  // isTemplateTag: false,\n  // fragment: null,\n  // children: null,\n  // dom: null,\n  // el: null,\n\n  /**\n   * Create the template DOM structure that will be cloned on each mount\n   * @param   {HTMLElement} el - the root node\n   * @returns {TemplateChunk} self\n   */\n  createDOM(el) {\n    // make sure that the DOM gets created before cloning the template\n    this.dom =\n      this.dom ||\n      createTemplateDOM(el, this.html) ||\n      document.createDocumentFragment();\n\n    return this\n  },\n\n  // API methods\n  /**\n   * Attach the template to a DOM node\n   * @param   {HTMLElement} el - target DOM node\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @param   {Object} meta - meta properties needed to handle the <template> tags in loops\n   * @returns {TemplateChunk} self\n   */\n  mount(el, scope, parentScope, meta = {}) {\n    if (!el) panic('Please provide DOM node to mount properly your template');\n\n    if (this.el) this.unmount(scope);\n\n    // <template> tags require a bit more work\n    // the template fragment might be already created via meta outside of this call\n    const { fragment, children, avoidDOMInjection } = meta;\n    // <template> bindings of course can not have a root element\n    // so we check the parent node to set the query selector bindings\n    const { parentNode } = children ? children[0] : el;\n    const isTemplateTag = isTemplate(el);\n    const templateTagOffset = isTemplateTag\n      ? getTemplateTagOffset(parentNode, el, meta)\n      : null;\n\n    // create the DOM if it wasn't created before\n    this.createDOM(el);\n\n    // create the DOM of this template cloning the original DOM structure stored in this instance\n    // notice that if a documentFragment was passed (via meta) we will use it instead\n    const cloneNode = fragment || this.dom.cloneNode(true);\n\n    // store root node\n    // notice that for template tags the root note will be the parent tag\n    this.el = isTemplateTag ? parentNode : el;\n\n    // create the children array only for the <template> fragments\n    this.children = isTemplateTag\n      ? children || Array.from(cloneNode.childNodes)\n      : null;\n\n    // inject the DOM into the el only if a fragment is available\n    if (!avoidDOMInjection && cloneNode) injectDOM(el, cloneNode);\n\n    // create the bindings\n    this.bindings = this.bindingsData.map((binding) =>\n      create$1(this.el, binding, templateTagOffset),\n    );\n    this.bindings.forEach((b) => b.mount(scope, parentScope));\n\n    // store the template meta properties\n    this.meta = meta;\n\n    return this\n  },\n\n  /**\n   * Update the template with fresh data\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @returns {TemplateChunk} self\n   */\n  update(scope, parentScope) {\n    this.bindings.forEach((b) => b.update(scope, parentScope));\n\n    return this\n  },\n\n  /**\n   * Remove the template from the node where it was initially mounted\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @param   {boolean|null} mustRemoveRoot - if true remove the root element,\n   * if false or undefined clean the root tag content, if null don't touch the DOM\n   * @returns {TemplateChunk} self\n   */\n  unmount(scope, parentScope, mustRemoveRoot = false) {\n    const el = this.el;\n\n    if (!el) {\n      return this\n    }\n\n    this.bindings.forEach((b) => b.unmount(scope, parentScope, mustRemoveRoot));\n\n    switch (true) {\n      // pure components should handle the DOM unmount updates by themselves\n      // for mustRemoveRoot === null don't touch the DOM\n      case el[IS_PURE_SYMBOL] || mustRemoveRoot === null:\n        break\n\n      // if children are declared, clear them\n      // applicable for <template> and <slot/> bindings\n      case Array.isArray(this.children):\n        clearChildren(this.children);\n        break\n\n      // clean the node children only\n      case !mustRemoveRoot:\n        cleanNode(el);\n        break\n\n      // remove the root node only if the mustRemoveRoot is truly\n      case !!mustRemoveRoot:\n        removeChild(el);\n        break\n    }\n\n    this.el = null;\n\n    return this\n  },\n\n  /**\n   * Clone the template chunk\n   * @returns {TemplateChunk} a clone of this object resetting the this.el property\n   */\n  clone() {\n    return {\n      ...this,\n      meta: {},\n      el: null,\n    }\n  },\n};\n\n/**\n * Create a template chunk wiring also the bindings\n * @param   {string|HTMLElement} html - template string\n * @param   {BindingData[]} bindings - bindings collection\n * @returns {TemplateChunk} a new TemplateChunk copy\n */\nfunction create(html, bindings = []) {\n  return {\n    ...TemplateChunk,\n    html,\n    bindingsData: bindings,\n  }\n}\n\nexport { create$1 as createBinding, create$4 as createExpression, create as template };\n", "/* Riot WIP, @license MIT */\n/**\n * Converts any DOM node/s to a loopable array\n * @param   { HTMLElement|NodeList } els - single html element or a node list\n * @returns { Array } always a loopable object\n */\nfunction domToArray(els) {\n  // can this object be already looped?\n  if (!Array.isArray(els)) {\n    // is it a node list?\n    if (\n      /^\\[object (HTMLCollection|NodeList|Object)\\]$/\n        .test(Object.prototype.toString.call(els))\n        && typeof els.length === 'number'\n    )\n      return Array.from(els)\n    else\n      // if it's a single node\n      // it will be returned as \"array\" with one single entry\n      return [els]\n  }\n  // this object could be looped out of the box\n  return els\n}\n\nexport { domToArray as default };\n", "/* Riot WIP, @license MIT */\nimport domToArray from '../bianco.dom-to-array/index.next.js';\n\n/**\n * Simple helper to find DOM nodes returning them as array like loopable object\n * @param   { string|DOMNodeList } selector - either the query or the DOM nodes to arraify\n * @param   { HTMLElement }        scope      - context defining where the query will search for the DOM nodes\n * @returns { Array } DOM nodes found as array\n */\nfunction $(selector, scope) {\n  return domToArray(typeof selector === 'string' ?\n    (scope || document).querySelectorAll(selector) :\n    selector\n  )\n}\n\nexport { $ as default };\n", "/* Riot WIP, @license MIT */\nimport domToArray from '../bianco.dom-to-array/index.next.js';\n\n/**\n * Normalize the return values, in case of a single value we avoid to return an array\n * @param   { Array } values - list of values we want to return\n * @returns { Array|string|boolean } either the whole list of values or the single one found\n * @private\n */\nconst normalize = values => values.length === 1 ? values[0] : values;\n\n/**\n * Parse all the nodes received to get/remove/check their attributes\n * @param   { HTMLElement|NodeList|Array } els    - DOM node/s to parse\n * @param   { string|Array }               name   - name or list of attributes\n * @param   { string }                     method - method that will be used to parse the attributes\n * @returns { Array|string } result of the parsing in a list or a single value\n * @private\n */\nfunction parseNodes(els, name, method) {\n  const names = typeof name === 'string' ? [name] : name;\n  return normalize(domToArray(els).map(el => {\n    return normalize(names.map(n => el[method](n)))\n  }))\n}\n\n/**\n * Set any attribute on a single or a list of DOM nodes\n * @param   { HTMLElement|NodeList|Array } els   - DOM node/s to parse\n * @param   { string|Object }              name  - either the name of the attribute to set\n *                                                 or a list of properties as object key - value\n * @param   { string }                     value - the new value of the attribute (optional)\n * @returns { HTMLElement|NodeList|Array } the original array of elements passed to this function\n *\n * @example\n *\n * import { set } from 'bianco.attr'\n *\n * const img = document.createElement('img')\n *\n * set(img, 'width', 100)\n *\n * // or also\n * set(img, {\n *   width: 300,\n *   height: 300\n * })\n *\n */\nfunction set(els, name, value) {\n  const attrs = typeof name === 'object' ? name : { [name]: value };\n  const props = Object.keys(attrs);\n\n  domToArray(els).forEach(el => {\n    props.forEach(prop => el.setAttribute(prop, attrs[prop]));\n  });\n  return els\n}\n\n/**\n * Get any attribute from a single or a list of DOM nodes\n * @param   { HTMLElement|NodeList|Array } els   - DOM node/s to parse\n * @param   { string|Array }               name  - name or list of attributes to get\n * @returns { Array|string } list of the attributes found\n *\n * @example\n *\n * import { get } from 'bianco.attr'\n *\n * const img = document.createElement('img')\n *\n * get(img, 'width') // => '200'\n *\n * // or also\n * get(img, ['width', 'height']) // => ['200', '300']\n *\n * // or also\n * get([img1, img2], ['width', 'height']) // => [['200', '300'], ['500', '200']]\n */\nfunction get(els, name) {\n  return parseNodes(els, name, 'getAttribute')\n}\n\nexport { get, set };\n", "/* Riot v9.4.9, @license MIT */\nimport $ from '../dependencies/bianco.query/index.next.js';\nimport { set } from '../dependencies/bianco.attr/index.next.js';\n\nconst CSS_BY_NAME = new Map();\nconst STYLE_NODE_SELECTOR = 'style[riot]';\n\n// memoized curried function\nconst getStyleNode = ((style) => {\n  return () => {\n    // lazy evaluation:\n    // if this function was already called before\n    // we return its cached result\n    if (style) return style\n\n    // create a new style element or use an existing one\n    // and cache it internally\n    style = $(STYLE_NODE_SELECTOR)[0] || document.createElement('style');\n    set(style, 'type', 'text/css');\n\n    /* istanbul ignore next */\n    if (!style.parentNode) document.head.appendChild(style);\n\n    return style\n  }\n})();\n\n/**\n * Object that will be used to inject and manage the css of every tag instance\n */\nconst cssManager = {\n  CSS_BY_NAME,\n  /**\n   * Save a tag style to be later injected into DOM\n   * @param { string } name - if it's passed we will map the css to a tagname\n   * @param { string } css - css string\n   * @returns {Object} self\n   */\n  add(name, css) {\n    if (!CSS_BY_NAME.has(name)) {\n      CSS_BY_NAME.set(name, css);\n      this.inject();\n    }\n\n    return this\n  },\n  /**\n   * Inject all previously saved tag styles into DOM\n   * innerHTML seems slow: http://jsperf.com/riot-insert-style\n   * @returns {Object} self\n   */\n  inject() {\n    getStyleNode().innerHTML = [...CSS_BY_NAME.values()].join('\\n');\n    return this\n  },\n\n  /**\n   * Remove a tag style from the DOM\n   * @param {string} name a registered tagname\n   * @returns {Object} self\n   */\n  remove(name) {\n    if (CSS_BY_NAME.has(name)) {\n      CSS_BY_NAME.delete(name);\n      this.inject();\n    }\n\n    return this\n  },\n};\n\nexport { CSS_BY_NAME, STYLE_NODE_SELECTOR, cssManager as default };\n", "/* Riot v9.4.9, @license MIT */\nimport { isFunction } from '../dependencies/@riotjs/util/checks.js';\nimport { IS_PURE_SYMBOL } from '../dependencies/@riotjs/util/constants.js';\nimport { panic } from '../dependencies/@riotjs/util/misc.js';\n\n/**\n * Lift a riot component Interface into a pure riot object\n * @param   {Function} func - RiotPureComponent factory function\n * @returns {Function} the lifted original function received as argument\n */\nfunction pure(func) {\n  if (!isFunction(func))\n    panic('riot.pure accepts only arguments of type \"function\"');\n  func[IS_PURE_SYMBOL] = true;\n  return func\n}\n\nexport { pure };\n", "/* Riot v9.4.9, @license MIT */\nimport bindingTypes from '../dependencies/@riotjs/util/binding-types.js';\nimport { PARENT_KEY_SYMBOL, DOM_COMPONENT_INSTANCE_PROPERTY, PLUGINS_SET, COMPONENTS_IMPLEMENTATION_MAP, ATTRIBUTES_KEY_SYMBOL, IS_COMPONENT_UPDATING, STATE_KEY, PROPS_KEY } from '../dependencies/@riotjs/util/constants.js';\nimport expressionTypes from '../dependencies/@riotjs/util/expression-types.js';\nimport { createExpression as create$4, createBinding as create$1, template as create } from '../dependencies/@riotjs/dom-bindings/dist/dom-bindings.js';\nimport cssManager from '../core/css-manager.js';\n\n// expose some internal stuff that might be used from external tools\nconst __ = {\n  cssManager,\n  DOMBindings: {\n    template: create,\n    createBinding: create$1,\n    createExpression: create$4,\n    bindingTypes,\n    expressionTypes,\n  },\n  globals: {\n    PROPS_KEY,\n    STATE_KEY,\n    IS_COMPONENT_UPDATING,\n    ATTRIBUTES_KEY_SYMBOL,\n    COMPONENTS_IMPLEMENTATION_MAP,\n    PLUGINS_SET,\n    DOM_COMPONENT_INSTANCE_PROPERTY,\n    PARENT_KEY_SYMBOL,\n  },\n};\n\nexport { __ };\n", "import { __, pure } from 'riot';\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str) {\n    var tokens = [];\n    var i = 0;\n    while (i < str.length) {\n        var char = str[i];\n        if (char === \"*\" || char === \"+\" || char === \"?\") {\n            tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"\\\\\") {\n            tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n            continue;\n        }\n        if (char === \"{\") {\n            tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"}\") {\n            tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \":\") {\n            var name = \"\";\n            var j = i + 1;\n            while (j < str.length) {\n                var code = str.charCodeAt(j);\n                if (\n                // `0-9`\n                (code >= 48 && code <= 57) ||\n                    // `A-Z`\n                    (code >= 65 && code <= 90) ||\n                    // `a-z`\n                    (code >= 97 && code <= 122) ||\n                    // `_`\n                    code === 95) {\n                    name += str[j++];\n                    continue;\n                }\n                break;\n            }\n            if (!name)\n                throw new TypeError(\"Missing parameter name at \".concat(i));\n            tokens.push({ type: \"NAME\", index: i, value: name });\n            i = j;\n            continue;\n        }\n        if (char === \"(\") {\n            var count = 1;\n            var pattern = \"\";\n            var j = i + 1;\n            if (str[j] === \"?\") {\n                throw new TypeError(\"Pattern cannot start with \\\"?\\\" at \".concat(j));\n            }\n            while (j < str.length) {\n                if (str[j] === \"\\\\\") {\n                    pattern += str[j++] + str[j++];\n                    continue;\n                }\n                if (str[j] === \")\") {\n                    count--;\n                    if (count === 0) {\n                        j++;\n                        break;\n                    }\n                }\n                else if (str[j] === \"(\") {\n                    count++;\n                    if (str[j + 1] !== \"?\") {\n                        throw new TypeError(\"Capturing groups are not allowed at \".concat(j));\n                    }\n                }\n                pattern += str[j++];\n            }\n            if (count)\n                throw new TypeError(\"Unbalanced pattern at \".concat(i));\n            if (!pattern)\n                throw new TypeError(\"Missing pattern at \".concat(i));\n            tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n            i = j;\n            continue;\n        }\n        tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n    }\n    tokens.push({ type: \"END\", index: i, value: \"\" });\n    return tokens;\n}\n/**\n * Parse a string for the raw tokens.\n */\nfunction parse(str, options) {\n    if (options === void 0) { options = {}; }\n    var tokens = lexer(str);\n    var _a = options.prefixes, prefixes = _a === void 0 ? \"./\" : _a;\n    var defaultPattern = \"[^\".concat(escapeString(options.delimiter || \"/#?\"), \"]+?\");\n    var result = [];\n    var key = 0;\n    var i = 0;\n    var path = \"\";\n    var tryConsume = function (type) {\n        if (i < tokens.length && tokens[i].type === type)\n            return tokens[i++].value;\n    };\n    var mustConsume = function (type) {\n        var value = tryConsume(type);\n        if (value !== undefined)\n            return value;\n        var _a = tokens[i], nextType = _a.type, index = _a.index;\n        throw new TypeError(\"Unexpected \".concat(nextType, \" at \").concat(index, \", expected \").concat(type));\n    };\n    var consumeText = function () {\n        var result = \"\";\n        var value;\n        while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n            result += value;\n        }\n        return result;\n    };\n    while (i < tokens.length) {\n        var char = tryConsume(\"CHAR\");\n        var name = tryConsume(\"NAME\");\n        var pattern = tryConsume(\"PATTERN\");\n        if (name || pattern) {\n            var prefix = char || \"\";\n            if (prefixes.indexOf(prefix) === -1) {\n                path += prefix;\n                prefix = \"\";\n            }\n            if (path) {\n                result.push(path);\n                path = \"\";\n            }\n            result.push({\n                name: name || key++,\n                prefix: prefix,\n                suffix: \"\",\n                pattern: pattern || defaultPattern,\n                modifier: tryConsume(\"MODIFIER\") || \"\",\n            });\n            continue;\n        }\n        var value = char || tryConsume(\"ESCAPED_CHAR\");\n        if (value) {\n            path += value;\n            continue;\n        }\n        if (path) {\n            result.push(path);\n            path = \"\";\n        }\n        var open = tryConsume(\"OPEN\");\n        if (open) {\n            var prefix = consumeText();\n            var name_1 = tryConsume(\"NAME\") || \"\";\n            var pattern_1 = tryConsume(\"PATTERN\") || \"\";\n            var suffix = consumeText();\n            mustConsume(\"CLOSE\");\n            result.push({\n                name: name_1 || (pattern_1 ? key++ : \"\"),\n                pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,\n                prefix: prefix,\n                suffix: suffix,\n                modifier: tryConsume(\"MODIFIER\") || \"\",\n            });\n            continue;\n        }\n        mustConsume(\"END\");\n    }\n    return result;\n}\n/**\n * Compile a string to a template function for the path.\n */\nfunction compile(str, options) {\n    return tokensToFunction(parse(str, options), options);\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction(tokens, options) {\n    if (options === void 0) { options = {}; }\n    var reFlags = flags(options);\n    var _a = options.encode, encode = _a === void 0 ? function (x) { return x; } : _a, _b = options.validate, validate = _b === void 0 ? true : _b;\n    // Compile all the tokens into regexps.\n    var matches = tokens.map(function (token) {\n        if (typeof token === \"object\") {\n            return new RegExp(\"^(?:\".concat(token.pattern, \")$\"), reFlags);\n        }\n    });\n    return function (data) {\n        var path = \"\";\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (typeof token === \"string\") {\n                path += token;\n                continue;\n            }\n            var value = data ? data[token.name] : undefined;\n            var optional = token.modifier === \"?\" || token.modifier === \"*\";\n            var repeat = token.modifier === \"*\" || token.modifier === \"+\";\n            if (Array.isArray(value)) {\n                if (!repeat) {\n                    throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to not repeat, but got an array\"));\n                }\n                if (value.length === 0) {\n                    if (optional)\n                        continue;\n                    throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to not be empty\"));\n                }\n                for (var j = 0; j < value.length; j++) {\n                    var segment = encode(value[j], token);\n                    if (validate && !matches[i].test(segment)) {\n                        throw new TypeError(\"Expected all \\\"\".concat(token.name, \"\\\" to match \\\"\").concat(token.pattern, \"\\\", but got \\\"\").concat(segment, \"\\\"\"));\n                    }\n                    path += token.prefix + segment + token.suffix;\n                }\n                continue;\n            }\n            if (typeof value === \"string\" || typeof value === \"number\") {\n                var segment = encode(String(value), token);\n                if (validate && !matches[i].test(segment)) {\n                    throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to match \\\"\").concat(token.pattern, \"\\\", but got \\\"\").concat(segment, \"\\\"\"));\n                }\n                path += token.prefix + segment + token.suffix;\n                continue;\n            }\n            if (optional)\n                continue;\n            var typeOfMessage = repeat ? \"an array\" : \"a string\";\n            throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to be \").concat(typeOfMessage));\n        }\n        return path;\n    };\n}\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str) {\n    return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options) {\n    return options && options.sensitive ? \"\" : \"i\";\n}\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path, keys) {\n    if (!keys)\n        return path;\n    var groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n    var index = 0;\n    var execResult = groupsRegex.exec(path.source);\n    while (execResult) {\n        keys.push({\n            // Use parenthesized substring match if available, index otherwise\n            name: execResult[1] || index++,\n            prefix: \"\",\n            suffix: \"\",\n            modifier: \"\",\n            pattern: \"\",\n        });\n        execResult = groupsRegex.exec(path.source);\n    }\n    return path;\n}\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(paths, keys, options) {\n    var parts = paths.map(function (path) { return pathToRegexp(path, keys, options).source; });\n    return new RegExp(\"(?:\".concat(parts.join(\"|\"), \")\"), flags(options));\n}\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(path, keys, options) {\n    return tokensToRegexp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nfunction tokensToRegexp(tokens, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.strict, strict = _a === void 0 ? false : _a, _b = options.start, start = _b === void 0 ? true : _b, _c = options.end, end = _c === void 0 ? true : _c, _d = options.encode, encode = _d === void 0 ? function (x) { return x; } : _d, _e = options.delimiter, delimiter = _e === void 0 ? \"/#?\" : _e, _f = options.endsWith, endsWith = _f === void 0 ? \"\" : _f;\n    var endsWithRe = \"[\".concat(escapeString(endsWith), \"]|$\");\n    var delimiterRe = \"[\".concat(escapeString(delimiter), \"]\");\n    var route = start ? \"^\" : \"\";\n    // Iterate over the tokens and create our regexp string.\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        if (typeof token === \"string\") {\n            route += escapeString(encode(token));\n        }\n        else {\n            var prefix = escapeString(encode(token.prefix));\n            var suffix = escapeString(encode(token.suffix));\n            if (token.pattern) {\n                if (keys)\n                    keys.push(token);\n                if (prefix || suffix) {\n                    if (token.modifier === \"+\" || token.modifier === \"*\") {\n                        var mod = token.modifier === \"*\" ? \"?\" : \"\";\n                        route += \"(?:\".concat(prefix, \"((?:\").concat(token.pattern, \")(?:\").concat(suffix).concat(prefix, \"(?:\").concat(token.pattern, \"))*)\").concat(suffix, \")\").concat(mod);\n                    }\n                    else {\n                        route += \"(?:\".concat(prefix, \"(\").concat(token.pattern, \")\").concat(suffix, \")\").concat(token.modifier);\n                    }\n                }\n                else {\n                    if (token.modifier === \"+\" || token.modifier === \"*\") {\n                        route += \"((?:\".concat(token.pattern, \")\").concat(token.modifier, \")\");\n                    }\n                    else {\n                        route += \"(\".concat(token.pattern, \")\").concat(token.modifier);\n                    }\n                }\n            }\n            else {\n                route += \"(?:\".concat(prefix).concat(suffix, \")\").concat(token.modifier);\n            }\n        }\n    }\n    if (end) {\n        if (!strict)\n            route += \"\".concat(delimiterRe, \"?\");\n        route += !options.endsWith ? \"$\" : \"(?=\".concat(endsWithRe, \")\");\n    }\n    else {\n        var endToken = tokens[tokens.length - 1];\n        var isEndDelimited = typeof endToken === \"string\"\n            ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n            : endToken === undefined;\n        if (!strict) {\n            route += \"(?:\".concat(delimiterRe, \"(?=\").concat(endsWithRe, \"))?\");\n        }\n        if (!isEndDelimited) {\n            route += \"(?=\".concat(delimiterRe, \"|\").concat(endsWithRe, \")\");\n        }\n    }\n    return new RegExp(route, flags(options));\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nfunction pathToRegexp(path, keys, options) {\n    if (path instanceof RegExp)\n        return regexpToRegexp(path, keys);\n    if (Array.isArray(path))\n        return arrayToRegexp(path, keys, options);\n    return stringToRegexp(path, keys, options);\n}\n\n/**\n * Cancel token\n * @private\n * @type { Symbol }\n */\nconst CANCEL = Symbol();\n\n/**\n * Helper that can be returned by ruit function to cancel the tasks chain\n * @returns { Symbol } internal private constant\n * @example\n *\n * ruit(\n *   100,\n *   num => Math.random() * num\n *   num => num > 50 ? ruit.cancel() : num\n *   num => num - 2\n * ).then(result => {\n *   console.log(result) // here we will get only number lower than 50\n * })\n *\n */\nruit.cancel = () => CANCEL;\n\n/**\n * The same as ruit() but with the arguments inverted from right to left\n * @param   { * } tasks - list of tasks to process sequentially\n * @returns { Promise } a promise containing the result of the whole chain\n * @example\n *\n * const curry = f => a => b => f(a, b)\n * const add = (a, b) => a + b\n *\n * const addOne = curry(add)(1)\n *\n * const squareAsync = (num) => {\n *   return new Promise(r => {\n *     setTimeout(r, 500, num * 2)\n *   })\n * }\n *\n * // a -> a + a -> a * 2\n * // basically from right to left: 1 => 1 + 1 => 2 * 2\n * ruit.compose(squareAsync, addOne, 1).then(result => console.log(result)) // 4\n */\nruit.compose = (...tasks) => ruit(...tasks.reverse());\n\n/**\n * Serialize a list of sync and async tasks from left to right\n * @param   { * } tasks - list of tasks to process sequentially\n * @returns { Promise } a promise containing the result of the whole chain\n * @example\n *\n * const curry = f => a => b => f(a, b)\n * const add = (a, b) => a + b\n *\n * const addOne = curry(add)(1)\n *\n * const squareAsync = (num) => {\n *   return new Promise(r => {\n *     setTimeout(r, 500, num * 2)\n *   })\n * }\n *\n * // a -> a + a -> a * 2\n * // basically from left to right: 1 => 1 + 1 => 2 * 2\n * ruit(1, addOne, squareAsync).then(result => console.log(result)) // 4\n */\nfunction ruit(...tasks) {\n  return new Promise((resolve, reject) => {\n    return (function run(queue, result) {\n      if (!queue.length) return resolve(result)\n\n      const [task, ...rest] = queue;\n      const value = typeof task === 'function' ? task(result) : task;\n      const done = v => run(rest, v);\n\n      // check against nil values\n      if (value != null) {\n        if (value === CANCEL) return\n        if (value.then) return value.then(done, reject)\n      }\n\n      return Promise.resolve(done(value))\n    })(tasks)\n  })\n}\n\n// Store the erre the API methods to handle the plugins installation\nconst API_METHODS = new Set();\nconst UNSUBSCRIBE_SYMBOL = Symbol();\nconst UNSUBSCRIBE_METHOD = 'off';\nconst CANCEL_METHOD = 'cancel';\n\n/**\n * Factory function to create the stream generator\n * @private\n * @param {Set} modifiers - stream input modifiers\n * @returns {Generator} the stream generator\n */\nfunction createStream(modifiers) {\n  const stream = (function *stream() {\n    while (true) {\n      // get the initial stream value\n      const input = yield;\n\n      // run the input sequence\n      yield ruit(input, ...modifiers);\n    }\n  })();\n\n  // start the stream\n  stream.next();\n\n  return stream\n}\n\n/**\n * Dispatch a value to several listeners\n * @private\n * @param   {Set} callbacks - callbacks collection\n * @param   {*} value - anything\n * @returns {Set} the callbacks received\n */\nfunction dispatch(callbacks, value) {\n  callbacks.forEach(f => {\n    // unsubscribe the callback if erre.unsubscribe() will be returned\n    if (f(value) === UNSUBSCRIBE_SYMBOL) callbacks.delete(f);\n  });\n\n  return callbacks\n}\n\n/**\n * Throw a panic error\n * @param {string} message - error message\n * @returns {Error} an error object\n */\nfunction panic$1(message) {\n  throw new Error(message)\n}\n\n/**\n * Install an erre plugin adding it to the API\n * @param   {string} name - plugin name\n * @param   {Function} fn - new erre API method\n * @returns {Function} return the erre function\n */\nerre.install = function(name, fn) {\n  if (!name || typeof name !== 'string')\n    panic$1('Please provide a name (as string) for your erre plugin');\n  if (!fn || typeof fn !== 'function')\n    panic$1('Please provide a function for your erre plugin');\n\n  if (API_METHODS.has(name)) {\n    panic$1(`The ${name} is already part of the erre API, please provide a different name`);\n  } else {\n    erre[name] = fn;\n    API_METHODS.add(name);\n  }\n\n  return erre\n};\n\n// alias for ruit canel to stop a stream chain\nerre.install(CANCEL_METHOD, ruit.cancel);\n\n// unsubscribe helper\nerre.install(UNSUBSCRIBE_METHOD, () => UNSUBSCRIBE_SYMBOL);\n\n/**\n * Stream constuction function\n * @param   {...Function} fns - stream modifiers\n * @returns {Object} erre instance\n */\nfunction erre(...fns) {\n  const\n    [success, error, end, modifiers] = [new Set(), new Set(), new Set(), new Set(fns)],\n    generator = createStream(modifiers),\n    stream = Object.create(generator),\n    addToCollection = (collection) => (fn) => collection.add(fn) && stream,\n    deleteFromCollection = (collection) => (fn) => collection.delete(fn) ? stream\n      : panic$1('Couldn\\'t remove handler passed by reference');\n\n  return Object.assign(stream, {\n    on: Object.freeze({\n      value: addToCollection(success),\n      error: addToCollection(error),\n      end: addToCollection(end)\n    }),\n    off: Object.freeze({\n      value: deleteFromCollection(success),\n      error: deleteFromCollection(error),\n      end: deleteFromCollection(end)\n    }),\n    connect: addToCollection(modifiers),\n    push(input) {\n      const { value, done } = stream.next(input);\n\n      // dispatch the stream events\n      if (!done) {\n        value.then(\n          res => dispatch(success, res),\n          err => dispatch(error, err)\n        );\n      }\n\n      return stream\n    },\n    end() {\n      // kill the stream\n      generator.return();\n      // dispatch the end event\n      dispatch(end)\n      // clean up all the collections\n      ;[success, error, end, modifiers].forEach(el => el.clear());\n\n      return stream\n    },\n    fork() {\n      return erre(...modifiers)\n    },\n    next(input) {\n      // get the input and run eventually the promise\n      const result = generator.next(input);\n\n      // pause to the next iteration\n      generator.next();\n\n      return result\n    }\n  })\n}\n\nconst isString = str => typeof str === 'string';\nconst parseURL = (...args) => new URL(...args);\n\n/**\n * Replace the base path from a path\n * @param   {string} path - router path string\n * @returns {string} path cleaned up without the base\n */\nconst replaceBase = path => path.replace(defaults.base, '');\n\n/**\n * Try to match the current path or skip it\n * @param   {RegExp} pathRegExp - target path transformed by pathToRegexp\n * @returns {string|Symbol} if the path match we return it otherwise we cancel the stream\n */\nconst matchOrSkip = pathRegExp => path => match(path, pathRegExp) ? path : erre.cancel();\n\n/**\n * Combine 2 streams connecting the events of dispatcherStream to the receiverStream\n * @param   {Stream} dispatcherStream - main stream dispatching events\n * @param   {Stream} receiverStream - sub stream receiving events from the dispatcher\n * @returns {Stream} receiverStream\n */\nconst joinStreams = (dispatcherStream, receiverStream) => {\n  dispatcherStream.on.value(receiverStream.push);\n\n  receiverStream.on.end(() => {\n    dispatcherStream.off.value(receiverStream.push);\n  });\n\n  return receiverStream\n};\n\n/**\n * Error handling function\n * @param   {Error} error - error to catch\n * @returns {void}\n */\n/* c8 ignore start */\nconst panic$2 = error => {\n  if (defaults.silentErrors) return\n\n  throw new Error(error)\n};\n/* c8 ignore stop */\n\n// make sure that the router will always receive strings params\nconst filterStrings = str => isString(str) ? str : erre.cancel();\n\n// create the streaming router\nconst router = erre(filterStrings).on.error(panic$2); // cast the values of this stream always to string\n\n/**\n * Merge the user options with the defaults\n * @param   {Object} options - custom user options\n * @returns {Object} options object merged with defaults\n */\nconst mergeOptions = options => ({...defaults, ...options});\n\n/* @type {object} general configuration object */\nconst defaults = {\n  base: 'https://localhost',\n  silentErrors: false,\n  // pathToRegexp options\n  sensitive: false,\n  strict: false,\n  end: true,\n  start: true,\n  delimiter: '/#?',\n  encode: undefined,\n  endsWith: undefined,\n  prefixes: './'\n};\n\n/**\n * Configure the router options overriding the defaults\n * @param {Object} options - custom user options to override\n * @returns {Object} new defaults\n */\nconst configure = (options) => {\n  Object.entries(options).forEach(([key, value]) => {\n    if (Object.hasOwn(defaults, key)) defaults[key] = value;\n  });\n\n  return defaults\n};\n\n\n\n/* {@link https://github.com/pillarjs/path-to-regexp#usage} */\nconst toRegexp = (path, keys, options) => pathToRegexp(path, keys, mergeOptions(options));\n\n/**\n * Convert a router entry to a real path computing the url parameters\n * @param   {string} path - router path string\n * @param   {Object} params - named matched parameters\n * @param   {Object} options - pathToRegexp options object\n * @returns {string} computed url string\n */\nconst toPath = (path, params, options) => compile(path, mergeOptions(options))(params);\n\n/**\n * Parse a string path generating an object containing\n * @param   {string} path - target path\n * @param   {RegExp} pathRegExp - path transformed to regexp via pathToRegexp\n * @param   {Object} options - object containing the base path\n * @returns {URL} url object enhanced with the `match` attribute\n */\nconst toURL = (path, pathRegExp, options = {}) => {\n  const {base} = mergeOptions(options);\n  const [, ...params] = pathRegExp.exec(path);\n  const url = parseURL(path, base);\n\n  // extend the url object adding the matched params\n  url.params = params.reduce((acc, param, index) => {\n    const key = options.keys && options.keys[index];\n    if (key) acc[key.name] = param ? decodeURIComponent(param) : param;\n    return acc\n  }, {});\n\n  return url\n};\n\n/**\n * Return true if a path will be matched\n * @param   {string} path - target path\n * @param   {RegExp} pathRegExp - path transformed to regexp via pathToRegexp\n * @returns {boolean} true if the path matches the regexp\n */\nconst match = (path, pathRegExp) => pathRegExp.test(path);\n\n/**\n * Factory function to create an sequence of functions to pass to erre.js\n * This function will be used in the erre stream\n * @param   {RegExp} pathRegExp - path transformed to regexp via pathToRegexp\n * @param   {Object} options - pathToRegexp options object\n * @returns {Array} a functions array that will be used as stream pipe for erre.js\n */\nconst createURLStreamPipe = (pathRegExp, options) => [\n  decodeURI,\n  replaceBase,\n  matchOrSkip(pathRegExp),\n  path => toURL(path, pathRegExp, options)\n];\n\n/**\n * Create a fork of the main router stream\n * @param   {string} path - route to match\n * @param   {Object} options - pathToRegexp options object\n * @returns {Stream} new route stream\n */\nfunction createRoute(path, options) {\n  const keys = [];\n  const pathRegExp = pathToRegexp(path, keys, options);\n  const URLStream = erre(...createURLStreamPipe(pathRegExp, {\n    ...options,\n    keys\n  }));\n\n  return joinStreams(router, URLStream).on.error(panic$2)\n}\n\nconst WINDOW_EVENTS = 'popstate';\nconst CLICK_EVENT = 'click';\nconst DOWNLOAD_LINK_ATTRIBUTE = 'download';\nconst HREF_LINK_ATTRIBUTE = 'href';\nconst TARGET_SELF_LINK_ATTRIBUTE = '_self';\nconst LINK_TAG_NAME = 'A';\nconst HASH = '#';\nconst SLASH = '/';\nconst PATH_ATTRIBUTE = 'path';\nconst RE_ORIGIN = /^.+?\\/\\/+[^/]+/;\n\n/**\n * Converts any DOM node/s to a loopable array\n * @param   { HTMLElement|NodeList } els - single html element or a node list\n * @returns { Array } always a loopable object\n */\nfunction domToArray(els) {\n  // can this object be already looped?\n  if (!Array.isArray(els)) {\n    // is it a node list?\n    if (\n      /^\\[object (HTMLCollection|NodeList|Object)\\]$/\n        .test(Object.prototype.toString.call(els))\n        && typeof els.length === 'number'\n    )\n      return Array.from(els)\n    else\n      // if it's a single node\n      // it will be returned as \"array\" with one single entry\n      return [els]\n  }\n  // this object could be looped out of the box\n  return els\n}\n\n/**\n * Simple helper to find DOM nodes returning them as array like loopable object\n * @param   { string|DOMNodeList } selector - either the query or the DOM nodes to arraify\n * @param   { HTMLElement }        scope      - context defining where the query will search for the DOM nodes\n * @returns { Array } DOM nodes found as array\n */\nfunction $(selector, scope) {\n  return domToArray(typeof selector === 'string' ?\n    (document).querySelectorAll(selector) :\n    selector\n  )\n}\n\nconst getCurrentRoute = ((currentRoute) => {\n  // listen the route changes events to store the current route\n  router.on.value((r) => (currentRoute = r));\n\n  return () => {\n    return currentRoute\n  }\n})(null);\n\n/**\n * Normalize the return values, in case of a single value we avoid to return an array\n * @param   { Array } values - list of values we want to return\n * @returns { Array|string|boolean } either the whole list of values or the single one found\n * @private\n */\nconst normalize = values => values.length === 1 ? values[0] : values;\n\n/**\n * Parse all the nodes received to get/remove/check their attributes\n * @param   { HTMLElement|NodeList|Array } els    - DOM node/s to parse\n * @param   { string|Array }               name   - name or list of attributes\n * @param   { string }                     method - method that will be used to parse the attributes\n * @returns { Array|string } result of the parsing in a list or a single value\n * @private\n */\nfunction parseNodes(els, name, method) {\n  const names = typeof name === 'string' ? [name] : name;\n  return normalize(domToArray(els).map(el => {\n    return normalize(names.map(n => el[method](n)))\n  }))\n}\n\n/**\n * Get any attribute from a single or a list of DOM nodes\n * @param   { HTMLElement|NodeList|Array } els   - DOM node/s to parse\n * @param   { string|Array }               name  - name or list of attributes to get\n * @returns { Array|string } list of the attributes found\n *\n * @example\n *\n * import { get } from 'bianco.attr'\n *\n * const img = document.createElement('img')\n *\n * get(img, 'width') // => '200'\n *\n * // or also\n * get(img, ['width', 'height']) // => ['200', '300']\n *\n * // or also\n * get([img1, img2], ['width', 'height']) // => [['200', '300'], ['500', '200']]\n */\nfunction get(els, name) {\n  return parseNodes(els, name, 'getAttribute')\n}\n\n/**\n * Set any attribute on a single or a list of DOM nodes\n * @param   { HTMLElement|NodeList|Array } els   - DOM node/s to parse\n * @param   { string|Array }               name  - name or list of attributes to detect\n * @returns { boolean|Array } true or false or an array of boolean values\n * @example\n *\n * import { has } from 'bianco.attr'\n *\n * has(img, 'width') // false\n *\n * // or also\n * has(img, ['width', 'height']) // => [false, false]\n *\n * // or also\n * has([img1, img2], ['width', 'height']) // => [[false, false], [false, false]]\n */\nfunction has(els, name) {\n  return parseNodes(els, name, 'hasAttribute')\n}\n\n/**\n * Convert a string from camel case to dash-case\n * @param   {string} string - probably a component tag name\n * @returns {string} component name normalized\n */\n\n/**\n * Convert a string containing dashes to camel case\n * @param   {string} string - input string\n * @returns {string} my-string -> myString\n */\nfunction dashToCamelCase(string) {\n  return string.replace(/-(\\w)/g, (_, c) => c.toUpperCase())\n}\n\n/**\n * Quick type checking\n * @param   {*} element - anything\n * @param   {string} type - type definition\n * @returns {boolean} true if the type corresponds\n */\n\n/**\n * Check if a value is null or undefined\n * @param   {*}  value - anything\n * @returns {boolean} true only for the 'undefined' and 'null' types\n */\nfunction isNil(value) {\n  return value === null || value === undefined\n}\n\nconst getGlobal = () => getWindow() || global;\nconst getWindow = () => (typeof window === 'undefined' ? null : window);\nconst getDocument = () =>\n  typeof document === 'undefined' ? null : document;\nconst getHistory = () =>\n  typeof history === 'undefined' ? null : history;\nconst getLocation = () => {\n  const win = getWindow();\n  return win ? win.location : {}\n};\n\nconst defer = (() => {\n  const globalScope = getGlobal();\n\n  return globalScope.requestAnimationFrame || globalScope.setTimeout\n})();\n\nconst cancelDefer = (() => {\n  const globalScope = getGlobal();\n\n  return globalScope.cancelAnimationFrame || globalScope.clearTimeout\n})();\n\nconst getAttribute = (attributes, name, context) => {\n  if (!attributes) return null\n\n  const normalizedAttributes = attributes.flatMap((attr) =>\n    isNil(attr.name)\n      ? // add support for spread attributes https://github.com/riot/route/issues/178\n        Object.entries(attr.evaluate(context)).map(([key, value]) => ({\n          // evaluate each value of the spread attribute and store it into the array\n          name: key,\n          // create a nested evaluate function pointing to the original value of the spread object\n          evaluate: () => value,\n        }))\n      : attr,\n  );\n\n  return normalizedAttributes.find((a) => dashToCamelCase(a.name) === name)\n};\n\nconst createDefaultSlot = (attributes = []) => {\n  const { template, bindingTypes, expressionTypes } = __.DOMBindings;\n\n  return template(null, [\n    {\n      type: bindingTypes.SLOT,\n      name: 'default',\n      attributes: attributes.map((attr) => ({\n        ...attr,\n        type: expressionTypes.ATTRIBUTE,\n      })),\n    },\n  ])\n};\n\n// True if the selector string is valid\nconst isValidQuerySelectorString = (selector) =>\n  /^([a-zA-Z0-9-_*#.:[\\]\\s>+~()='\"]|\\\\.)+$/.test(selector);\n\n/**\n * Similar to compose but performs from left-to-right function composition.<br/>\n * {@link https://30secondsofcode.org/function#composeright see also}\n * @param   {...[function]} fns) - list of unary function\n * @returns {*} result of the computation\n */\n\n/**\n * Performs right-to-left function composition.<br/>\n * Use Array.prototype.reduce() to perform right-to-left function composition.<br/>\n * The last (rightmost) function can accept one or more arguments; the remaining functions must be unary.<br/>\n * {@link https://30secondsofcode.org/function#compose original source code}\n * @param   {...[function]} fns) - list of unary function\n * @returns {*} result of the computation\n */\nfunction compose(...fns) {\n  return fns.reduce((f, g) => (...args) => f(g(...args)))\n}\n\nconst getInitialRouteValue = (pathToRegexp, path, options) => {\n  const route = compose(\n    ...createURLStreamPipe(pathToRegexp, options).reverse(),\n  )(path);\n\n  return route.params ? route : null\n};\n\nconst clearDOMBetweenNodes = (first, last, includeBoundaries) => {\n  const clear = (node) => {\n    if (!node || (node === last && !includeBoundaries)) return\n    const { nextSibling } = node;\n    node.remove();\n    clear(nextSibling);\n  };\n\n  clear(includeBoundaries ? first : first.nextSibling);\n};\n\nconst routeHoc$1 = ({ slots, attributes }) => {\n  const placeholders = {\n    before: document.createTextNode(''),\n    after: document.createTextNode(''),\n  };\n\n  return {\n    mount(el, context) {\n      // create the component state\n      const currentRoute = getCurrentRoute();\n      const path =\n        getAttribute(attributes, PATH_ATTRIBUTE, context)?.evaluate(context) ||\n        get(el, PATH_ATTRIBUTE);\n      const pathToRegexp = toRegexp(path, []);\n      const state = {\n        pathToRegexp,\n        route:\n          currentRoute && match(currentRoute, pathToRegexp)\n            ? getInitialRouteValue(pathToRegexp, currentRoute, {})\n            : null,\n      };\n      this.el = el;\n      this.slot = createDefaultSlot([\n        {\n          isBoolean: false,\n          name: 'route',\n          evaluate: () => this.state.route,\n        },\n      ]);\n      this.context = context;\n      this.state = state;\n      // set the route listeners\n      this.boundOnBeforeRoute = this.onBeforeRoute.bind(this);\n      this.boundOnRoute = this.onRoute.bind(this);\n      router.on.value(this.boundOnBeforeRoute);\n      this.stream = createRoute(path).on.value(this.boundOnRoute);\n      // update the DOM\n      el.replaceWith(placeholders.before);\n      placeholders.before.parentNode.insertBefore(\n        placeholders.after,\n        placeholders.before.nextSibling,\n      );\n      if (state.route) this.mountSlot();\n    },\n    update(context) {\n      this.context = context;\n      if (this.state.route) this.slot.update({}, context);\n    },\n    mountSlot() {\n      const { route } = this.state;\n      // insert the route root element after the before placeholder\n      placeholders.before.parentNode.insertBefore(\n        this.el,\n        placeholders.before.nextSibling,\n      );\n      this.callLifecycleProperty('onBeforeMount', route);\n      this.slot.mount(\n        this.el,\n        {\n          slots,\n        },\n        this.context,\n      );\n      this.callLifecycleProperty('onMounted', route);\n    },\n    clearDOM(includeBoundaries) {\n      // remove all the DOM nodes between the placeholders\n      clearDOMBetweenNodes(\n        placeholders.before,\n        placeholders.after,\n        includeBoundaries,\n      );\n    },\n    unmount() {\n      router.off.value(this.boundOnBeforeRoute);\n      this.slot.unmount({}, this.context, true);\n      this.clearDOM(true);\n      this.stream.end();\n    },\n    onBeforeRoute(path) {\n      const { route } = this.state;\n      // this component was not mounted or the current path matches\n      // we don't need to unmount this component\n      if (!route || match(path, this.state.pathToRegexp)) return\n\n      this.callLifecycleProperty('onBeforeUnmount', route);\n      this.slot.unmount({}, this.context, true);\n      this.clearDOM(false);\n      this.state.route = null;\n      this.callLifecycleProperty('onUnmounted', route);\n    },\n    onRoute(route) {\n      const prevRoute = this.state.route;\n      this.state.route = route;\n\n      // if this route component was already mounted we need to update it\n      if (prevRoute) {\n        this.callLifecycleProperty('onBeforeUpdate', route);\n        this.slot.update({}, this.context);\n        this.callLifecycleProperty('onUpdated', route);\n      }\n      // this route component was never mounted, so we need to create its DOM\n      else this.mountSlot();\n\n      // emulate the default browser anchor links behaviour\n      if (route.hash && isValidQuerySelectorString(route.hash))\n        $(route.hash)?.[0].scrollIntoView();\n    },\n    callLifecycleProperty(method, ...params) {\n      const attr = getAttribute(attributes, method, this.context);\n\n      if (attr) attr.evaluate(this.context)(...params);\n    },\n  }\n};\n\nvar routeHoc = {\n  css: null,\n\n  exports: pure(\n    routeHoc$1\n  ),\n\n  template: null,\n  name: 'route-hoc'\n};\n\nconst normalizeInitialSlash = (str) =>\n  str[0] === SLASH ? str : `${SLASH}${str}`;\nconst removeTrailingSlash = (str) =>\n  str[str.length - 1] === SLASH ? str.substr(0, str.length - 1) : str;\n\nconst normalizeBase = (base) => {\n  const win = getWindow();\n  const loc = win.location;\n  const root = loc ? `${loc.protocol}//${loc.host}` : '';\n  const { pathname } = loc ? loc : {};\n\n  switch (true) {\n    // pure root url + pathname\n    case Boolean(base) === false:\n      return removeTrailingSlash(`${root}${pathname || ''}`)\n    // full path base\n    case /(www|http(s)?:)/.test(base):\n      return base\n    // hash navigation\n    case base[0] === HASH:\n      return `${root}${pathname && pathname !== SLASH ? pathname : ''}${base}`\n    // root url with trailing slash\n    case base === SLASH:\n      return removeTrailingSlash(root)\n    // custom pathname\n    default:\n      return removeTrailingSlash(`${root}${normalizeInitialSlash(base)}`)\n  }\n};\n\nfunction setBase(base) {\n  configure({ base: normalizeBase(base) });\n}\n\n/**\n * Throw an error with a descriptive message\n * @param   { string } message - error message\n * @param   { string } cause - optional error cause object\n * @returns { undefined } hoppla... at this point the program should stop working\n */\nfunction panic(message, cause) {\n  throw new Error(message, { cause })\n}\n\n/**\n * Split a string into several items separed by spaces\n * @param   { string } l - events list\n * @returns { Array } all the events detected\n * @private\n */\nconst split = l => l.split(/\\s/);\n\n/**\n * Set a listener for all the events received separated by spaces\n * @param   { HTMLElement|NodeList|Array } els     - DOM node/s where the listeners will be bound\n * @param   { string }                     evList  - list of events we want to bind or unbind space separated\n * @param   { Function }                   cb      - listeners callback\n * @param   { string }                     method  - either 'addEventListener' or 'removeEventListener'\n * @param   { Object }                     options - event options (capture, once and passive)\n * @returns { undefined }\n * @private\n */\nfunction manageEvents(els, evList, cb, method, options) {\n  els = domToArray(els);\n\n  split(evList).forEach((e) => {\n    els.forEach(el => el[method](e, cb, options || false));\n  });\n}\n\n/**\n * Set a listener for all the events received separated by spaces\n * @param   { HTMLElement|Array } els    - DOM node/s where the listeners will be bound\n * @param   { string }            evList - list of events we want to bind space separated\n * @param   { Function }          cb     - listeners callback\n * @param   { Object }            options - event options (capture, once and passive)\n * @returns { HTMLElement|NodeList|Array } DOM node/s and first argument of the function\n */\nfunction add(els, evList, cb, options) {\n  manageEvents(els, evList, cb, 'addEventListener', options);\n  return els\n}\n\n/**\n * Remove all the listeners for the events received separated by spaces\n * @param   { HTMLElement|Array } els     - DOM node/s where the events will be unbind\n * @param   { string }            evList  - list of events we want unbind space separated\n * @param   { Function }          cb      - listeners callback\n * @param   { Object }             options - event options (capture, once and passive)\n * @returns { HTMLElement|NodeList|Array }  DOM node/s and first argument of the function\n */\nfunction remove(els, evList, cb, options) {\n  manageEvents(els, evList, cb, 'removeEventListener', options);\n  return els\n}\n\nconst onWindowEvent = () =>\n  router.push(normalizePath(String(getLocation().href)));\nconst onRouterPush = (path) => {\n  const url = path.includes(defaults.base) ? path : defaults.base + path;\n  const loc = getLocation();\n  const hist = getHistory();\n  const doc = getDocument();\n\n  // update the browser history only if it's necessary\n  if (hist && url !== loc.href) {\n    hist.pushState(null, doc.title, url);\n  }\n};\nconst getLinkElement = (node) =>\n  node && !isLinkNode(node) ? getLinkElement(node.parentNode) : node;\nconst isLinkNode = (node) => node.nodeName === LINK_TAG_NAME;\nconst isCrossOriginLink = (path) =>\n  path.indexOf(getLocation().href.match(RE_ORIGIN)[0]) === -1;\nconst isTargetSelfLink = (el) =>\n  el.target && el.target !== TARGET_SELF_LINK_ATTRIBUTE;\nconst isEventForbidden = (event) =>\n  (event.which && event.which !== 1) || // not left click\n  event.metaKey ||\n  event.ctrlKey ||\n  event.shiftKey || // or meta keys\n  event.defaultPrevented; // or default prevented\nconst isForbiddenLink = (el) =>\n  !el ||\n  !isLinkNode(el) || // not A tag\n  has(el, DOWNLOAD_LINK_ATTRIBUTE) || // has download attr\n  !has(el, HREF_LINK_ATTRIBUTE) || // has no href attr\n  isTargetSelfLink(el) ||\n  isCrossOriginLink(el.href);\nconst normalizePath = (path) => path.replace(defaults.base, '');\nconst isInBase = (path) => !defaults.base || path.includes(defaults.base);\n\n/**\n * Callback called anytime something will be clicked on the page\n * @param   {HTMLEvent} event - click event\n * @returns {undefined} void method\n */\nconst onClick = (event) => {\n  if (isEventForbidden(event)) return\n\n  const el = getLinkElement(event.target);\n\n  if (isForbiddenLink(el) || !isInBase(el.href)) return\n\n  event.preventDefault();\n\n  router.push(normalizePath(el.href));\n};\n\n/**\n * Link the rawth router to the DOM events\n * @param { HTMLElement } container - DOM node where the links are located\n * @returns {Function} teardown function\n */\nfunction initDomListeners(container) {\n  const win = getWindow();\n  const root = container || getDocument();\n\n  if (win) {\n    add(win, WINDOW_EVENTS, onWindowEvent);\n    add(root, CLICK_EVENT, onClick);\n  }\n\n  router.on.value(onRouterPush);\n\n  return () => {\n    if (win) {\n      remove(win, WINDOW_EVENTS, onWindowEvent);\n      remove(root, CLICK_EVENT, onClick);\n    }\n\n    router.off.value(onRouterPush);\n  }\n}\n\nconst BASE_ATTRIBUTE_NAME = 'base';\nconst INITIAL_ROUTE = 'initialRoute';\nconst ON_STARTED_ATTRIBUTE_NAME = 'onStarted';\n\nconst routerHoc$1 = ({ slots, attributes, props }) => {\n  if (routerHoc$1.wasInitialized)\n    panic('Multiple <router> components are not supported');\n\n  return {\n    slot: null,\n    el: null,\n    teardown: null,\n    mount(el, context) {\n      const initialRouteAttr = getAttribute(attributes, INITIAL_ROUTE, context);\n      const initialRoute = initialRouteAttr\n        ? initialRouteAttr.evaluate(context)\n        : null;\n      const currentRoute = getCurrentRoute();\n      const onFirstRoute = () => {\n        this.createSlot(context);\n        router.off.value(onFirstRoute);\n      };\n      routerHoc$1.wasInitialized = true;\n\n      this.el = el;\n      this.teardown = initDomListeners(this.root);\n\n      this.setBase(context);\n\n      // mount the slots only if the current route was defined\n      if (currentRoute && !initialRoute) {\n        this.createSlot(context);\n      } else {\n        router.on.value(onFirstRoute);\n        router.push(initialRoute || window.location.href);\n      }\n    },\n    createSlot(context) {\n      if (!slots || !slots.length) return\n      const onStartedAttr = getAttribute(\n        attributes,\n        ON_STARTED_ATTRIBUTE_NAME,\n        context,\n      );\n\n      this.slot = createDefaultSlot();\n\n      this.slot.mount(\n        this.el,\n        {\n          slots,\n        },\n        context,\n      );\n\n      if (onStartedAttr) {\n        onStartedAttr.evaluate(context)(getCurrentRoute());\n      }\n    },\n    update(context) {\n      this.setBase(context);\n\n      // defer the updates to avoid internal recursive update calls\n      // see https://github.com/riot/route/issues/148\n      if (this.slot) {\n        cancelDefer(this.deferred);\n\n        this.deferred = defer(() => {\n          this.slot.update({}, context);\n        });\n      }\n    },\n    unmount(...args) {\n      this.teardown();\n      routerHoc$1.wasInitialized = false;\n\n      if (this.slot) {\n        this.slot.unmount(...args);\n      }\n    },\n    getBase(context) {\n      const baseAttr = getAttribute(attributes, BASE_ATTRIBUTE_NAME, context);\n\n      return baseAttr\n        ? baseAttr.evaluate(context)\n        : this.el.getAttribute(BASE_ATTRIBUTE_NAME) || '/'\n    },\n    setBase(context) {\n      setBase(props ? props.base : this.getBase(context));\n    },\n  }\n};\n\n// flag to avoid multiple router instances\nrouterHoc$1.wasInitialized = false;\n\nvar routerHoc = {\n  css: null,\n\n  exports: pure(\n    routerHoc$1\n  ),\n\n  template: null,\n  name: 'router-hoc'\n};\n\nexport { routeHoc as Route, routerHoc as Router, configure, createURLStreamPipe, defaults, getCurrentRoute, initDomListeners, match, createRoute as route, router, setBase, toPath, toRegexp, toURL };\n", "/**\n * Requires a certain number of users to be transported within a time limit.\n * @param {number} userCount - The number of users to transport.\n * @param {number} timeLimit - The time limit in seconds.\n * @returns {Object} - An object containing the challenge description and evaluation function.\n */\nexport function requireUserCountWithinTime(userCount, timeLimit) {\n  return {\n    description:\n      \"Transport <span class='emphasis-color'>\" +\n      userCount +\n      \"</span> people in <span class='emphasis-color'>\" +\n      timeLimit.toFixed(0) +\n      '</span> seconds or less',\n    evaluate: function (world) {\n      if (world.elapsedTime >= timeLimit || world.transportedCounter >= userCount) {\n        return world.elapsedTime <= timeLimit && world.transportedCounter >= userCount;\n      } else {\n        return null;\n      }\n    },\n  };\n}\n\n/**\n * Requires a certain number of users to be transported within a time limit and with a maximum wait time.\n * @param {number} userCount - The number of users to transport.\n * @param {number} timeLimit - The time limit in seconds.\n * @param {number} maxWaitTime - The maximum wait time in seconds.\n * @returns {Object} - An object containing the challenge description and evaluation function.\n */\nexport function requireUserCountWithMaxWaitTime(userCount, maxWaitTime) {\n  return {\n    description:\n      \"Transport <span class='emphasis-color'>\" +\n      userCount +\n      \"</span> people and let no one wait more than <span class='emphasis-color'>\" +\n      maxWaitTime.toFixed(1) +\n      '</span> seconds',\n    evaluate: function (world) {\n      if (world.maxWaitTime >= maxWaitTime || world.transportedCounter >= userCount) {\n        return world.maxWaitTime <= maxWaitTime && world.transportedCounter >= userCount;\n      } else {\n        return null;\n      }\n    },\n  };\n}\n\n/**\n * Requires a certain number of users to be transported within a time limit and with a maximum wait time.\n * @param {number} userCount - The number of users to transport.\n * @param {number} timeLimit - The time limit in seconds.\n * @param {number} maxWaitTime - The maximum wait time in seconds.\n * @returns {Object} - An object containing the challenge description and evaluation function.\n */\nexport function requireUserCountWithinTimeWithMaxWaitTime(userCount, timeLimit, maxWaitTime) {\n  return {\n    description:\n      \"Transport <span class='emphasis-color'>\" +\n      userCount +\n      \"</span> people in <span class='emphasis-color'>\" +\n      timeLimit.toFixed(0) +\n      \"</span> seconds or less and let no one wait more than <span class='emphasis-color'>\" +\n      maxWaitTime.toFixed(1) +\n      '</span> seconds',\n    evaluate: function (world) {\n      if (world.elapsedTime >= timeLimit || world.maxWaitTime >= maxWaitTime || world.transportedCounter >= userCount) {\n        return (\n          world.elapsedTime <= timeLimit && world.maxWaitTime <= maxWaitTime && world.transportedCounter >= userCount\n        );\n      } else {\n        return null;\n      }\n    },\n  };\n}\n\n/**\n * Requires a certain number of users to be transported within a specified number of elevator moves.\n * @param {number} userCount - The number of users to transport.\n * @param {number} moveLimit - The maximum number of elevator moves allowed.\n * @returns {Object} - An object containing the challenge description and evaluation function.\n */\nexport function requireUserCountWithinMoves(userCount, moveLimit) {\n  return {\n    description:\n      \"Transport <span class='emphasis-color'>\" +\n      userCount +\n      \"</span> people using <span class='emphasis-color'>\" +\n      moveLimit +\n      '</span> elevator moves or less',\n    evaluate: function (world) {\n      if (world.moveCount >= moveLimit || world.transportedCounter >= userCount) {\n        return world.moveCount <= moveLimit && world.transportedCounter >= userCount;\n      } else {\n        return null;\n      }\n    },\n  };\n}\n\n/**\n * Returns a perpetual demo challenge that does not require any specific conditions.\n * @returns {Object} - An object containing the challenge description and an evaluation function that always returns null.\n */\nfunction requireDemo() {\n  return {\n    description: 'Perpetual demo',\n    evaluate: function () {\n      return null;\n    },\n  };\n}\n\n/**\n * An array of challenge configurations for the elevator saga game.\n * Each challenge specifies elevator and building options, as well as a condition function\n * that determines the win criteria for the challenge.\n *\n * @typedef {Object} Challenge\n * @property {Object} options - Configuration options for the challenge.\n * @property {number} options.floorCount - The number of floors in the building.\n * @property {number} options.elevatorCount - The number of elevators available.\n * @property {number} options.spawnRate - The rate at which new users appear.\n * @property {number[]} [options.elevatorCapacities] - Optional array specifying the capacity of each elevator.\n * @property {Function} condition - A function that defines the win condition for the challenge.\n *\n * @type {Challenge[]}\n */\nexport const challenges = [\n  {\n    options: { floorCount: 3, elevatorCount: 1, spawnRate: 0.3 },\n    condition: requireUserCountWithinTime(15, 60),\n  },\n  {\n    options: { floorCount: 5, elevatorCount: 1, spawnRate: 0.4 },\n    condition: requireUserCountWithinTime(20, 60),\n  },\n  {\n    options: { floorCount: 5, elevatorCount: 1, spawnRate: 0.5, elevatorCapacities: [6] },\n    condition: requireUserCountWithinTime(23, 60),\n  },\n  {\n    options: { floorCount: 8, elevatorCount: 2, spawnRate: 0.6 },\n    condition: requireUserCountWithinTime(28, 60),\n  },\n  {\n    options: { floorCount: 6, elevatorCount: 4, spawnRate: 1.7 },\n    condition: requireUserCountWithinTime(100, 68),\n  },\n  {\n    options: { floorCount: 4, elevatorCount: 2, spawnRate: 0.8 },\n    condition: requireUserCountWithinMoves(40, 60),\n  },\n  {\n    options: { floorCount: 3, elevatorCount: 3, spawnRate: 3.0 },\n    condition: requireUserCountWithinMoves(100, 63),\n  },\n  {\n    options: { floorCount: 6, elevatorCount: 2, spawnRate: 0.4, elevatorCapacities: [5] },\n    condition: requireUserCountWithMaxWaitTime(50, 21),\n  },\n  {\n    options: { floorCount: 7, elevatorCount: 3, spawnRate: 0.6 },\n    condition: requireUserCountWithMaxWaitTime(50, 20),\n  },\n  {\n    options: { floorCount: 13, elevatorCount: 2, spawnRate: 1.1, elevatorCapacities: [4, 10] },\n    condition: requireUserCountWithinTime(50, 70),\n  },\n  {\n    options: { floorCount: 9, elevatorCount: 5, spawnRate: 1.1 },\n    condition: requireUserCountWithMaxWaitTime(60, 19),\n  },\n  {\n    options: { floorCount: 9, elevatorCount: 5, spawnRate: 1.1 },\n    condition: requireUserCountWithMaxWaitTime(80, 17),\n  },\n  {\n    options: { floorCount: 9, elevatorCount: 5, spawnRate: 1.1, elevatorCapacities: [5] },\n    condition: requireUserCountWithMaxWaitTime(100, 15),\n  },\n  {\n    options: { floorCount: 9, elevatorCount: 5, spawnRate: 1.0, elevatorCapacities: [6] },\n    condition: requireUserCountWithMaxWaitTime(110, 15),\n  },\n  {\n    options: { floorCount: 8, elevatorCount: 6, spawnRate: 0.9 },\n    condition: requireUserCountWithMaxWaitTime(120, 14),\n  },\n  {\n    options: { floorCount: 12, elevatorCount: 4, spawnRate: 1.4, elevatorCapacities: [5, 10] },\n    condition: requireUserCountWithinTime(70, 80),\n  },\n  {\n    options: { floorCount: 21, elevatorCount: 5, spawnRate: 1.9, elevatorCapacities: [10] },\n    condition: requireUserCountWithinTime(110, 80),\n  },\n  {\n    options: { floorCount: 21, elevatorCount: 8, spawnRate: 1.5, elevatorCapacities: [6, 8] },\n    condition: requireUserCountWithinTimeWithMaxWaitTime(2675, 1800, 45),\n  },\n  {\n    options: { floorCount: 21, elevatorCount: 8, spawnRate: 1.5, elevatorCapacities: [6, 8] },\n    condition: requireDemo(),\n  },\n];\n", "import each from 'lodash/each';\nimport map from 'lodash/map';\nimport * as riot from 'riot';\nimport User from '../models/user';\nimport World from '../models/world';\n\n/**\n * Removes all child elements from each element in the provided collection.\n *\n * @param {jQuery[]} $elems - An array or collection of jQuery elements to be cleared.\n */\nexport function clearAll($elems) {\n  each($elems, function ($elem) {\n    $elem.empty();\n  });\n}\n\n/**\n * Sets the CSS transform property of an element to position it at the specified (x, y) coordinates,\n * including a translateZ(0) for hardware acceleration. Applies vendor prefixes for compatibility.\n *\n * @param {HTMLElement} elem - The DOM element to transform.\n * @param {number} x - The x-coordinate in pixels to translate the element to.\n * @param {number} y - The y-coordinate in pixels to translate the element to.\n */\nfunction setTransformPos(elem, x, y) {\n  const style = 'translate(' + x + 'px,' + y + 'px) translateZ(0)';\n  elem.style.transform = style;\n  elem.style['-ms-transform'] = style;\n  elem.style['-webkit-transform'] = style;\n}\n\n/**\n * Updates the visual state of a user element based on the user's current state.\n *\n * @param {jQuery} $user - The jQuery-wrapped DOM element representing the user.\n * @param {HTMLElement} elem_user - The raw DOM element for the user.\n * @param {User} user - The user object containing state and position.\n * @param {number} user.worldX - The X coordinate of the user in the world.\n * @param {number} user.worldY - The Y coordinate of the user in the world.\n * @param {boolean} user.done - Whether the user has completed their action.\n */\nfunction updateUserState($user, elem_user, user) {\n  setTransformPos(elem_user, user.worldX, user.worldY);\n  if (user.done) {\n    $user.addClass('leaving');\n  }\n}\n\n/**\n * Updates the statistics display elements within the given parent element based on the current state of the world object.\n *\n * @param {jQuery} $parent - The jQuery-wrapped parent element containing the stats display elements.\n * @param {World} world - The world object that emits 'stats_display_changed' events and contains statistics properties:\n *   @param {number} world.transportedCounter - The total number of transported passengers.\n *   @param {number} world.elapsedTime - The elapsed time in seconds.\n *   @param {number} world.transportedPerSec - The number of passengers transported per second.\n *   @param {number} world.avgWaitTime - The average wait time in seconds.\n *   @param {number} world.maxWaitTime - The maximum wait time in seconds.\n *   @param {number} world.moveCount - The total number of moves made.\n *   @function world.on - Registers an event listener.\n *   @function world.trigger - Triggers an event.\n */\nexport function presentStats($parent, world) {\n  const elem_transportedcounter = $parent.find('.transportedcounter').get(0),\n    elem_elapsedtime = $parent.find('.elapsedtime').get(0),\n    elem_transportedpersec = $parent.find('.transportedpersec').get(0),\n    elem_avgwaittime = $parent.find('.avgwaittime').get(0),\n    elem_maxwaittime = $parent.find('.maxwaittime').get(0),\n    elem_movecount = $parent.find('.movecount').get(0);\n\n  world.on('stats_display_changed', function updateStats() {\n    elem_transportedcounter.textContent = world.transportedCounter;\n    elem_elapsedtime.textContent = world.elapsedTime.toFixed(0) + 's';\n    elem_transportedpersec.textContent = world.transportedPerSec.toPrecision(3);\n    elem_avgwaittime.textContent = world.avgWaitTime.toFixed(1) + 's';\n    elem_maxwaittime.textContent = world.maxWaitTime.toFixed(1) + 's';\n    elem_movecount.textContent = world.moveCount;\n  });\n  world.trigger('stats_display_changed');\n}\n\n/**\n * Renders and initializes the challenge UI in the given parent element.\n *\n * @param {jQuery} $parent - The parent jQuery element where the challenge UI will be rendered.\n * @param {Object} challenge - The challenge data object.\n * @param {Object} app - The main application object, providing control methods.\n * @param {World} world - The current world state object.\n * @param {Object} worldController - Controller for managing world state and time scale.\n * @param {number} challengeNum - The current challenge number.\n * @param {string} challengeTempl - The Riot.js template string for rendering the challenge UI.\n */\nexport function presentChallenge($parent, challenge, app, world, worldController, challengeNum, challengeTempl) {\n  const $challenge = $(\n    riot.render(challengeTempl, {\n      challenge: challenge,\n      num: challengeNum,\n      timeScale: worldController.timeScale.toFixed(0) + 'x',\n      startButtonText: world.challengeEnded\n        ? \"<i class='fa fa-repeat'></i> Restart\"\n        : worldController.isPaused\n          ? 'Start'\n          : 'Pause',\n    })\n  );\n  $parent.html($challenge);\n\n  $parent.find('.startstop').on('click', function () {\n    app.startStopOrRestart();\n  });\n  $parent.find('.timescale_increase').on('click', function (e) {\n    e.preventDefault();\n    if (worldController.timeScale < 40) {\n      const timeScale = Math.round(worldController.timeScale * 1.618);\n      worldController.setTimeScale(timeScale);\n    }\n  });\n  $parent.find('.timescale_decrease').on('click', function (e) {\n    e.preventDefault();\n    const timeScale = Math.round(worldController.timeScale / 1.618);\n    worldController.setTimeScale(timeScale);\n  });\n}\n\n/**\n * Renders feedback content into the given parent element using a Riot template.\n *\n * @param {jQuery} $parent - The jQuery element to render the feedback into.\n * @param {string} feedbackTempl - The Riot template string for rendering feedback.\n * @param {World} world - The world object containing floor information.\n * @param {Array} world.floors - Array of floor objects.\n * @param {number} world.floorHeight - The height of each floor.\n * @param {string} title - The title to display in the feedback.\n * @param {string} message - The message to display in the feedback.\n * @param {string} [url] - Optional URL to include in the feedback. If not provided, any anchor tags are removed.\n */\nexport function presentFeedback($parent, feedbackTempl, world, title, message, url) {\n  $parent.html(\n    riot.render(feedbackTempl, {\n      title: title,\n      message: message,\n      url: url,\n      paddingTop: world.floors.length * world.floorHeight * 0.2,\n    })\n  );\n  if (!url) {\n    $parent.find('a').remove();\n  }\n}\n\n/**\n * Renders and manages the interactive world view for the elevator simulation.\n *\n * @param {jQuery} $world - The jQuery element representing the world container.\n * @param {World} world - The world model containing floors, elevators, and related state.\n * @param {string} floorTempl - Riot.js template string for rendering a floor.\n * @param {string} elevatorTempl - Riot.js template string for rendering an elevator.\n * @param {string} elevatorButtonTempl - Riot.js template string for rendering elevator buttons.\n * @param {string} userTempl - Riot.js template string for rendering a user.\n *\n * @fires floor#buttonstate_change - When a floor's up/down button state changes.\n * @fires elevator#new_display_state - When an elevator's position should be updated.\n * @fires elevator#new_current_floor - When an elevator's current floor changes.\n * @fires elevator#floor_buttons_changed - When an elevator's floor button states change.\n * @fires elevator#indicatorstate_change - When an elevator's up/down indicator state changes.\n * @fires world#new_user - When a new user is added to the world.\n * @fires user#new_display_state - When a user's display state should be updated.\n * @fires user#removed - When a user is removed from the world.\n */\nexport function presentWorld($world, world, floorTempl, elevatorTempl, elevatorButtonTempl, userTempl) {\n  $world.css('height', world.floorHeight * world.floors.length);\n\n  $world.append(\n    map(world.floors, function (f) {\n      const $floor = $(riot.render(floorTempl, f));\n      const $up = $floor.find('.up');\n      const $down = $floor.find('.down');\n      f.on('buttonstate_change', function (buttonStates) {\n        $up.toggleClass('activated', buttonStates.up !== '');\n        $down.toggleClass('activated', buttonStates.down !== '');\n      });\n      $up.on('click', function () {\n        f.pressUpButton();\n      });\n      $down.on('click', function () {\n        f.pressDownButton();\n      });\n      return $floor;\n    })\n  );\n  $world.find('.floor').first().find('.down').addClass('invisible');\n  $world.find('.floor').last().find('.up').addClass('invisible');\n\n  function renderElevatorButtons(states) {\n    // This is a rarely executed inner-inner loop, does not need efficiency\n    return map(states, function (b, i) {\n      return riot.render(elevatorButtonTempl, { floorNum: i });\n    }).join('');\n  }\n\n  function setUpElevator(e) {\n    const $elevator = $(riot.render(elevatorTempl, { e: e }));\n    const elem_elevator = $elevator.get(0);\n    $elevator.find('.buttonindicator').html(renderElevatorButtons(e.buttonStates));\n    const $buttons = map($elevator.find('.buttonindicator').children(), function (c) {\n      return $(c);\n    });\n    const elem_floorindicator = $elevator.find('.floorindicator > span').get(0);\n\n    $elevator.on('click', '.buttonpress', function () {\n      e.pressFloorButton(parseInt($(this).text()));\n    });\n    e.on('new_display_state', function updateElevatorPosition() {\n      setTransformPos(elem_elevator, e.worldX, e.worldY);\n    });\n    e.on('new_current_floor', function update_current_floor(floor) {\n      elem_floorindicator.textContent = floor;\n    });\n    e.on('floor_buttons_changed', function update_floor_buttons(states, indexChanged) {\n      $buttons[indexChanged].toggleClass('activated', states[indexChanged]);\n    });\n    e.on('indicatorstate_change', function indicatorstate_change(indicatorStates) {\n      $elevator.find('.up').toggleClass('activated', indicatorStates.up);\n      $elevator.find('.down').toggleClass('activated', indicatorStates.down);\n    });\n    e.trigger('new_state', e);\n    e.trigger('new_display_state', e);\n    e.trigger('new_current_floor', e.currentFloor);\n    return $elevator;\n  }\n\n  $world.append(\n    map(world.elevators, function (e) {\n      return setUpElevator(e);\n    })\n  );\n\n  world.on('new_user', function (user) {\n    const $user = $(riot.render(userTempl, { u: user, state: user.done ? 'leaving' : '' }));\n    const elem_user = $user.get(0);\n\n    user.on('new_display_state', function () {\n      updateUserState($user, elem_user, user);\n    });\n    user.on('removed', function () {\n      $user.remove();\n    });\n    $world.append($user);\n  });\n}\n\n/**\n * Renders the code status (success or error) into the given parent element using the provided template.\n *\n * @param {Object} $parent - The parent element (jQuery-like object) where the status will be rendered.\n * @param {string} templ - The Riot.js template string used for rendering the status.\n * @param {Error|string|null} error - The error object or message to display. If null or falsy, success is shown.\n */\nexport function presentCodeStatus($parent, templ, error) {\n  console.log(error);\n  let errorDisplay = error ? 'block' : 'none';\n  let successDisplay = error ? 'none' : 'block';\n  let errorMessage = error;\n  if (error && error.stack) {\n    errorMessage = error.stack;\n    errorMessage = errorMessage.replace(/\\n/g, '<br>');\n  }\n  const status = riot.render(templ, {\n    errorMessage: errorMessage,\n    errorDisplay: errorDisplay,\n    successDisplay: successDisplay,\n  });\n  $parent.html(status);\n}\n\n/**\n * Sets the demo view to fullscreen by hiding all elements inside the container\n * except for the element with the class 'world', and adjusts the layout styles\n * of the HTML, body, container, and 'world' elements to occupy the full viewport.\n */\nfunction makeDemoFullscreen() {\n  $('body .container > *').not('.world').css('visibility', 'hidden');\n  $('html, body, body .container, .world').css({ width: '100%', margin: '0', padding: 0 });\n}\n", "// Console shim\n(function () {\n  const f = function () {};\n  if (!console) {\n    console = {\n      log: f,\n      info: f,\n      warn: f,\n      debug: f,\n      error: f,\n    };\n  }\n})();\n\n/**\n * Limits a number to a specified range.\n * @param {number} num - The number to limit.\n * @param {number} min - The minimum value of the range.\n * @param {number} max - The maximum value of the range.\n * @returns {number} - Returns the number limited to the specified range.\n * If the number is less than min, it returns min; if greater than max,\n * it returns max; otherwise, it returns the number itself.\n * @example\n * limitNumber(5, 1, 10); // returns 5\n * limitNumber(0, 1, 10); // returns 1\n * limitNumber(15, 1, 10); // returns 10\n */\nexport function limitNumber(num, min, max) {\n  return Math.min(max, Math.max(num, min));\n}\n\n/**\n * Compares two numbers for equality within a small epsilon value.\n * This is useful for floating-point comparisons to avoid precision issues.\n * @param {number} a - The first number to compare.\n * @param {number} b - The second number to compare.\n * @returns {boolean} - Returns true if the numbers are equal within the epsilon range, false otherwise.\n */\nexport function epsilonEquals(a, b) {\n  return Math.abs(a - b) < 0.00000001;\n}\n\n// Polyfill from MDN\n\n/**\n * Returns the sign of a number, indicating whether it is positive, negative, or zero.\n * @param {number} x - The number to evaluate.\n * @returns {number} - Returns 1 if x is positive, -1 if x is negative, and 0 if x is zero or NaN.\n * @example\n * Math.sign(10); // returns 1\n * Math.sign(-5); // returns -1\n * Math.sign(0); // returns 0\n * Math.sign(NaN); // returns NaN\n */\nfunction sign(x) {\n  x = +x; // convert to a number\n  if (x === 0 || isNaN(x)) {\n    return x;\n  }\n  return x > 0 ? 1 : -1;\n}\n\nif (typeof Math.sign === 'undefined') {\n  Math.sign = sign;\n}\n\n/** Logs a deprecation warning to the console.\n * @param {string} name - The name of the deprecated feature.\n */\nfunction deprecationWarning(name) {\n  console.warn('You are using a deprecated feature scheduled for removal: ' + name);\n}\n\n/** * Throws an error if the object is not an instance of the specified type.\n * @param {Object} obj - The object to check.\n * @param {Function} type - The constructor function of the expected type.\n * @throws Will throw an error if obj is not an instance of type.\n * @example\n * newGuard(new MyClass(), MyClass); // No error\n * newGuard({}, MyClass); // Throws an error\n */\nexport function newGuard(obj, type) {\n  if (!(obj instanceof type)) {\n    throw 'Incorrect instantiation, got ' + typeof obj + ' but expected ' + type;\n  }\n}\n\n/**\n * Creates a boolean passthrough function that sets a property on an object and triggers a change event.\n * @param {Object} owner - The owner of the function, typically the context in which it is used.\n * @param {Object} obj - The object on which the property will be set.\n * @param {string} objPropertyName - The name of the property to set on the object.\n * @returns {Function} - A function that takes a value, sets the property, and triggers a change event.\n */\nexport function createBoolPassthroughFunction(owner, obj, objPropertyName) {\n  return function (val) {\n    if (typeof val !== 'undefined') {\n      obj[objPropertyName] = val ? true : false;\n      obj.trigger('change:' + objPropertyName, obj[objPropertyName]);\n      return owner;\n    } else {\n      return obj[objPropertyName];\n    }\n  };\n}\n\n/**\n * Calculates the distance needed to achieve a target speed from a current speed with a given acceleration.\n * @param {number} currentSpeed - The current speed of the object.\n * @param {number} targetSpeed - The target speed to achieve.\n * @param {number} acceleration - The acceleration applied to the object.\n * @returns {number} - The distance required to reach the target speed.\n */\nexport function distanceNeededToAchieveSpeed(currentSpeed, targetSpeed, acceleration) {\n  // v\u00B2 = u\u00B2 + 2a * d\n  const requiredDistance = (Math.pow(targetSpeed, 2) - Math.pow(currentSpeed, 2)) / (2 * acceleration);\n  return requiredDistance;\n}\n\n/**\n * Calculates the acceleration needed to achieve a change in speed over a given distance.\n * @param {number} currentSpeed - The current speed of the object.\n * @param {number} targetSpeed - The target speed to achieve.\n * @param {number} distance - The distance over which the speed change should occur.\n * @returns {number} - The required acceleration to achieve the speed change.\n */\nexport function accelerationNeededToAchieveChangeDistance(currentSpeed, targetSpeed, distance) {\n  // v\u00B2 = u\u00B2 + 2a * d\n  const requiredAcceleration = 0.5 * ((Math.pow(targetSpeed, 2) - Math.pow(currentSpeed, 2)) / distance);\n  return requiredAcceleration;\n}\n\n// Fake frame requester helper used for testing and fitness simulations\n\n/**\n * Creates a frame requester that triggers a callback at specified time intervals.\n * @param {number} timeStep - The time step for each frame in milliseconds.\n * @returns {Object} - An object with methods to register a callback and trigger it.\n */\nexport function createFrameRequester(timeStep) {\n  let currentCb = null;\n  let requester = {};\n  requester.currentT = 0.0;\n  requester.register = function (cb) {\n    currentCb = cb;\n  };\n  requester.trigger = function () {\n    requester.currentT += timeStep;\n    if (currentCb !== null) {\n      currentCb(requester.currentT);\n    }\n  };\n  return requester;\n}\n\n/**\n * Parses a string of code into an object with `init` and `update` methods.\n * The code should be a valid JavaScript object literal or function.\n * @param {string} code - The code string to parse.\n * @returns {Object} - An object containing the parsed code with `init` and `update` methods.\n * @throws Will throw an error if the code does not contain `init` or `update` functions.\n */\nexport function getCodeObjFromCode(code) {\n  if (code.trim().substr(0, 1) == '{' && code.trim().substr(-1, 1) == '}') {\n    code = '(' + code + ')';\n  }\n  /* jslint evil:true */\n  let obj = eval(code);\n  /* jshint evil:false */\n  if (typeof obj.init !== 'function') {\n    throw 'Code must contain an init function';\n  }\n  if (typeof obj.update !== 'function') {\n    throw 'Code must contain an update function';\n  }\n  return obj;\n}\n", "import observable from '@riotjs/observable';\nimport { newGuard } from './base';\n\nconst EPSILON = 0.00001;\n\n/**\n * Linearly interpolates between two values based on a given factor.\n *\n * @param {number} value0 - The start value.\n * @param {number} value1 - The end value.\n * @param {number} x - The interpolation factor, typically between 0 and 1.\n * @returns {number} The interpolated value between value0 and value1.\n */\nexport function linearInterpolate(value0, value1, x) {\n  return value0 + (value1 - value0) * x;\n}\n\n/**\n * Performs a power-based interpolation between two values.\n *\n * @param {number} value0 - The starting value.\n * @param {number} value1 - The ending value.\n * @param {number} x - The interpolation factor, typically between 0 and 1.\n * @param {number} a - The exponent that controls the interpolation curve.\n * @returns {number} The interpolated value between value0 and value1.\n */\nfunction powInterpolate(value0, value1, x, a) {\n  return value0 + ((value1 - value0) * Math.pow(x, a)) / (Math.pow(x, a) + Math.pow(1 - x, a));\n}\n\n/**\n * Interpolates between two values using a power-based interpolation with an exponent of 1.3.\n *\n * @param {number} value0 - The starting value of the interpolation.\n * @param {number} value1 - The ending value of the interpolation.\n * @param {number} x - The interpolation factor, typically between 0 and 1.\n * @returns {number} The interpolated value between value0 and value1.\n */\nfunction coolInterpolate(value0, value1, x) {\n  return powInterpolate(value0, value1, x, 1.3);\n}\n\n/**\n * The default interpolation function used for movement calculations.\n * @type {Function}\n * @see coolInterpolate\n */\nconst DEFAULT_INTERPOLATOR = coolInterpolate;\n\nconst _tmpPosStorage = [0, 0];\n\n/**\n * Represents an object that can be moved within a 2D space, supporting hierarchical parenting,\n * smooth and instant movement, task-based actions, and observable state changes.\n *\n * Extends:\n *   Observable\n *\n * Events:\n *   - 'new_state': Triggered when the object's logical state changes.\n *   - 'new_display_state': Triggered when the object's display position changes.\n *\n * Properties:\n *   @property {number} x - The local x-coordinate of the object.\n *   @property {number} y - The local y-coordinate of the object.\n *   @property {Movable|null} parent - The parent object in the hierarchy, or null if none.\n *   @property {number} worldX - The computed world x-coordinate (updated via updateDisplayPosition).\n *   @property {number} worldY - The computed world y-coordinate (updated via updateDisplayPosition).\n *   @property {Function|null} currentTask - The current asynchronous task being executed, or null if idle.\n *\n * Methods:\n *   @method updateDisplayPosition(forceTrigger) - Updates the display position and triggers an event if changed.\n *   @method moveTo(newX, newY) - Moves the object to the specified coordinates, optionally leaving one unchanged.\n *   @method moveToFast(newX, newY) - Instantly moves the object to the specified coordinates.\n *   @method isBusy() - Returns true if the object is currently executing a task.\n *   @method makeSureNotBusy() - Throws if the object is busy.\n *   @method wait(millis, cb) - Pauses execution for a specified duration, then calls a callback.\n *   @method moveToOverTime(newX, newY, timeToSpend, interpolator, cb) - Smoothly moves the object to a new position over time.\n *   @method update(dt) - Advances the current task by a time delta.\n *   @method getWorldPosition(storage) - Computes the object's world position, considering parent hierarchy.\n *   @method setParent(movableParent) - Sets or removes the object's parent, preserving world position.\n */\nexport default class Movable {\n  constructor() {\n    observable(this);\n    newGuard(this, Movable);\n    this.x = 0.0;\n    this.y = 0.0;\n    this.parent = null;\n    this.worldX = 0.0;\n    this.worldY = 0.0;\n    this.currentTask = null;\n    this.trigger('new_state', this);\n  }\n\n  /**\n   * Updates the display position of the object by retrieving its current world position.\n   * If the position has changed or if `forceTrigger` is true, triggers a 'new_display_state' event.\n   *\n   * @param {boolean} [forceTrigger] - If true, forces the trigger of the 'new_display_state' event even if the position hasn't changed.\n   */\n  updateDisplayPosition(forceTrigger) {\n    this.getWorldPosition(_tmpPosStorage);\n    const oldX = this.worldX;\n    const oldY = this.worldY;\n    this.worldX = _tmpPosStorage[0];\n    this.worldY = _tmpPosStorage[1];\n    if (oldX !== this.worldX || oldY !== this.worldY || forceTrigger === true) {\n      this.trigger('new_display_state', this);\n    }\n  }\n\n  /**\n   * Moves the object to the specified coordinates.\n   * If a coordinate is null, it will not be updated.\n   * Triggers a 'new_state' event after moving.\n   *\n   * @param {number|null} newX - The new x-coordinate, or null to leave unchanged.\n   * @param {number|null} newY - The new y-coordinate, or null to leave unchanged.\n   */\n  moveTo(newX, newY) {\n    if (newX !== null) {\n      this.x = newX;\n    }\n    if (newY !== null) {\n      this.y = newY;\n    }\n    this.trigger('new_state', this);\n  }\n\n  /**\n   * Instantly moves the object to the specified coordinates and triggers a 'new_state' event.\n   *\n   * @param {number} newX - The new x-coordinate to move to.\n   * @param {number} newY - The new y-coordinate to move to.\n   */\n  moveToFast(newX, newY) {\n    this.x = newX;\n    this.y = newY;\n    this.trigger('new_state', this);\n  }\n\n  /**\n   * Checks if the movable object is currently busy with a task.\n   * @returns {boolean} Returns true if there is a current task assigned, otherwise false.\n   */\n  isBusy() {\n    return this.currentTask !== null;\n  }\n\n  /**\n   * Ensures that the movable object is not currently busy.\n   * If the object is busy, logs an error and throws an exception.\n   *\n   * @throws {Object} Throws an object with a message and the current object if it is busy.\n   */\n  makeSureNotBusy() {\n    if (this.isBusy()) {\n      console.error('Attempt to use movable while it was busy', this);\n      throw { message: 'Object is busy - you should use callback', obj: this };\n    }\n  }\n\n  /**\n   * Pauses the execution of the current task for a specified number of milliseconds.\n   * Once the wait time has elapsed, an optional callback function is invoked.\n   *\n   * @param {number} millis - The number of milliseconds to wait.\n   * @param {Function} [cb] - Optional callback to execute after waiting.\n   */\n  wait(millis, cb) {\n    this.makeSureNotBusy();\n    let timeSpent = 0.0;\n    const self = this;\n    self.currentTask = function waitTask(dt) {\n      timeSpent += dt;\n      if (timeSpent > millis) {\n        self.currentTask = null;\n        if (cb) {\n          cb();\n        }\n      }\n    };\n  }\n\n  /**\n   * Moves the object smoothly from its current position to the specified (newX, newY) over a given duration.\n   * The movement is interpolated using the provided interpolator function.\n   *\n   * @param {number|null} newX - The target X coordinate. If null, the current X is used.\n   * @param {number|null} newY - The target Y coordinate. If null, the current Y is used.\n   * @param {number} timeToSpend - The total time (in seconds or ms, depending on context) to spend moving.\n   * @param {function} [interpolator=DEFAULT_INTERPOLATOR] - Function to interpolate between start and end values.\n   *        Signature: (start: number, end: number, factor: number) => number\n   * @param {function} [cb] - Optional callback to invoke when movement is complete.\n   */\n  moveToOverTime(newX, newY, timeToSpend, interpolator, cb) {\n    this.makeSureNotBusy();\n    this.currentTask = true;\n    if (newX === null) {\n      newX = this.x;\n    }\n    if (newY === null) {\n      newY = this.y;\n    }\n    if (typeof interpolator === 'undefined') {\n      interpolator = DEFAULT_INTERPOLATOR;\n    }\n    const origX = this.x;\n    const origY = this.y;\n    let timeSpent = 0.0;\n    const self = this;\n    self.currentTask = function moveToOverTimeTask(dt) {\n      timeSpent = Math.min(timeToSpend, timeSpent + dt);\n      if (timeSpent === timeToSpend) {\n        self.moveToFast(newX, newY);\n        self.currentTask = null;\n        if (cb) {\n          cb();\n        }\n      } else {\n        const factor = timeSpent / timeToSpend;\n        self.moveToFast(interpolator(origX, newX, factor), interpolator(origY, newY, factor));\n      }\n    };\n  }\n\n  /**\n   * Updates the state of the movable object by executing the current task, if any.\n   *\n   * @param {number} dt - The time delta in milliseconds since the last update.\n   */\n  update(dt) {\n    if (this.currentTask !== null) {\n      this.currentTask(dt);\n    }\n  }\n\n  /**\n   * Calculates the world position of the current object by traversing up its parent hierarchy,\n   * accumulating the x and y offsets, and stores the result in the provided storage array.\n   *\n   * @param {number[]} storage - An array where the resulting world x and y coordinates will be stored at indices 0 and 1.\n   */\n  getWorldPosition(storage) {\n    let resultX = this.x;\n    let resultY = this.y;\n    let currentParent = this.parent;\n    while (currentParent !== null) {\n      resultX += currentParent.x;\n      resultY += currentParent.y;\n      currentParent = currentParent.parent;\n    }\n    storage[0] = resultX;\n    storage[1] = resultY;\n  }\n\n  /**\n   * Sets the parent of this movable object, updating its position accordingly.\n   *\n   * If the new parent is `null`, the object is detached from its current parent and its world position is preserved.\n   * If a new parent is provided, the object's position is updated to maintain its world position relative to the new parent.\n   *\n   * @param {Object|null} movableParent - The new parent object, or `null` to remove the parent.\n   */\n  setParent(movableParent) {\n    const objWorld = [0, 0];\n    if (movableParent === null) {\n      if (this.parent !== null) {\n        this.getWorldPosition(objWorld);\n        this.parent = null;\n        this.moveToFast(objWorld[0], objWorld[1]);\n      }\n    } else {\n      this.getWorldPosition(objWorld);\n      const parentWorld = [0, 0];\n      movableParent.getWorldPosition(parentWorld);\n      this.parent = movableParent;\n      this.moveToFast(objWorld[0] - parentWorld[0], objWorld[1] - parentWorld[1]);\n    }\n  }\n}\n", "import { newGuard } from './base.js';\nimport Movable, { linearInterpolate } from './movable.js';\n\n/**\n * Represents a user in the elevator simulation.\n * Extends the Movable class to provide movement and event capabilities.\n *\n * @class\n * @extends Movable\n *\n * @param {number} weight - The weight of the user.\n *\n * @property {number} weight - The user's weight.\n * @property {number} currentFloor - The floor the user is currently on.\n * @property {number} destinationFloor - The floor the user wants to go to.\n * @property {boolean} done - Whether the user has completed their journey.\n * @property {boolean} removeMe - Whether the user should be removed from the simulation.\n *\n * @method appearOnFloor - Places the user on a floor and sets their destination.\n * @param {Object} floor - The floor object where the user appears.\n * @param {number} destinationFloorNum - The floor number the user wants to go to.\n *\n * @method pressFloorButton - Simulates the user pressing the up or down button on a floor.\n * @param {Object} floor - The floor object where the button is pressed.\n *\n * @method handleExit - Handles the user exiting the elevator at their destination.\n * @param {number} floorNum - The floor number where the user exits.\n * @param {Object} elevator - The elevator the user is exiting from.\n *\n * @method elevatorAvailable - Handles the logic when an elevator becomes available for the user.\n * @param {Object} elevator - The available elevator.\n * @param {Object} floor - The floor where the user is waiting.\n */\nexport default class User extends Movable {\n  constructor(weight) {\n    super();\n    newGuard(this, User);\n    this.weight = weight;\n    this.currentFloor = 0;\n    this.destinationFloor = 0;\n    this.done = false;\n    this.removeMe = false;\n  }\n\n  /**\n   * Makes the user appear on a specified floor and sets their destination floor.\n   *\n   * @param {Object} floor - The floor object where the user will appear.\n   * @param {number} destinationFloorNum - The number of the floor the user wants to go to.\n   */\n  appearOnFloor(floor, destinationFloorNum) {\n    const floorPosY = floor.getSpawnPosY();\n    this.currentFloor = floor.level;\n    this.destinationFloor = destinationFloorNum;\n    this.moveTo(null, floorPosY);\n    this.pressFloorButton(floor);\n  }\n\n  /**\n   * Simulates pressing the appropriate floor button (up or down) based on the elevator's current and destination floors.\n   *\n   * @param {Object} floor - The floor object representing the target floor.\n   * @param {Function} floor.pressUpButton - Method to simulate pressing the up button on the floor.\n   * @param {Function} floor.pressDownButton - Method to simulate pressing the down button on the floor.\n   */\n  pressFloorButton(floor) {\n    if (this.destinationFloor < this.currentFloor) {\n      floor.pressDownButton();\n    } else {\n      floor.pressUpButton();\n    }\n  }\n\n  /**\n   * Handles the process of a user exiting an elevator at a specified floor.\n   * If the elevator is at the user's destination floor, the user exits,\n   * updates their state, triggers relevant events, animates their movement,\n   * and cleans up event listeners.\n   *\n   * @param {number} floorNum - The floor number where the exit is attempted.\n   * @param {Object} elevator - The elevator instance the user is exiting from.\n   */\n  handleExit(floorNum, elevator) {\n    if (elevator.currentFloor === this.destinationFloor) {\n      elevator.userExiting(this);\n      this.currentFloor = elevator.currentFloor;\n      this.setParent(null);\n      const destination = this.x + 100;\n      this.done = true;\n      this.trigger('exited_elevator', elevator);\n      this.trigger('new_state');\n      this.trigger('new_display_state');\n      const self = this;\n      this.moveToOverTime(destination, null, 1 + Math.random() * 0.5, linearInterpolate, function lastMove() {\n        self.removeMe = true;\n        self.trigger('removed');\n        self.off('*');\n      });\n      elevator.off('exit_available', this.exitAvailableHandler);\n    }\n  }\n\n  /**\n   * Handles the logic for when an elevator becomes available for the user.\n   *\n   * - Checks if the user is eligible to enter the elevator.\n   * - Determines if the elevator is suitable for the user's travel.\n   * - If suitable and available, the user enters the elevator, triggers relevant events,\n   *   and sets up handlers for exiting.\n   * - If not available, the user presses the floor button to request the elevator.\n   *\n   * @param {Object} elevator - The elevator instance being considered.\n   * @param {number} floor - The floor number where the elevator is available.\n   */\n  elevatorAvailable(elevator, floor) {\n    if (this.done || this.parent !== null || this.isBusy()) {\n      return;\n    }\n    if (!elevator.isSuitableForTravelBetween(this.currentFloor, this.destinationFloor)) {\n      return;\n    }\n    const pos = elevator.userEntering(this);\n    if (pos) {\n      this.setParent(elevator);\n      this.trigger('entered_elevator', elevator);\n      const self = this;\n      this.moveToOverTime(pos[0], pos[1], 1, undefined, function () {\n        elevator.pressFloorButton(self.destinationFloor);\n      });\n      this.exitAvailableHandler = function (floorNum, elevator) {\n        self.handleExit(elevator.currentFloor, elevator);\n      };\n      elevator.on('exit_available', this.exitAvailableHandler);\n    } else {\n      this.pressFloorButton(floor);\n    }\n  }\n}\n", "import observable from '@riotjs/observable';\nimport each from 'lodash/each';\nimport map from 'lodash/map';\nimport random from 'lodash/random';\nimport range from 'lodash/range';\nimport reduce from 'lodash/reduce';\nimport Elevator from './elevator';\nimport ElevatorFacade from './elevator-facade';\nimport Floor from './floor';\nimport User from './user';\n\n/**\n * Represents the simulation world for the elevator saga, managing floors, elevators, users, and simulation statistics.\n *\n * @class\n * @fires World#usercode_error\n * @fires World#new_user\n * @fires World#stats_changed\n *\n * @param {Object} options - Configuration options for the world.\n * @param {number} options.floorHeight - The height of each floor.\n * @param {number} options.floorCount - The total number of floors in the world.\n * @param {number} options.elevatorCount - The number of elevators in the world.\n * @param {number} options.spawnRate - The rate at which users spawn (users per second).\n * @param {Array<number>} [options.elevatorCapacities] - Optional array specifying the capacity of each elevator.\n *\n * @property {number} floorHeight - The height of each floor.\n * @property {number} transportedCounter - The total number of users transported.\n * @property {number} transportedPerSec - The average number of users transported per second.\n * @property {number} moveCount - The total number of elevator moves.\n * @property {number} elapsedTime - The total elapsed simulation time in seconds.\n * @property {number} maxWaitTime - The maximum wait time experienced by any user.\n * @property {number} avgWaitTime - The average wait time for all users.\n * @property {boolean} challengeEnded - Indicates if the simulation challenge has ended.\n * @property {Array<User>} users - The list of users currently in the world.\n * @property {Array<Floor>} floors - The list of floor instances in the world.\n * @property {Array<Elevator>} elevators - The list of elevator instances in the world.\n * @property {Array<ElevatorFacade>} facades - The list of elevator interface facades.\n *\n * @example\n * const world = new World({ floorHeight: 60, floorCount: 5, elevatorCount: 3, spawnRate: 0.7 });\n */\nexport default class World {\n  /**\n   * @param {Object} options - World configuration options.\n   * @param {number} options.floorHeight\n   * @param {number} options.floorCount\n   * @param {number} options.elevatorCount\n   * @param {number} options.spawnRate\n   * @param {Array<number>} [options.elevatorCapacities]\n   */\n  constructor(options) {\n    const defaultOptions = { ...options, floorHeight: 50, floorCount: 4, elevatorCount: 2, spawnRate: 0.5 };\n\n    this.floorCount = defaultOptions.floorCount;\n    this.spawnRate = defaultOptions.spawnRate;\n    this.floorHeight = defaultOptions.floorHeight;\n    this.transportedCounter = 0;\n    this.transportedPerSec = 0.0;\n    this.moveCount = 0;\n    this.elapsedTime = 0.0;\n    this.maxWaitTime = 0.0;\n    this.avgWaitTime = 0.0;\n    this.challengeEnded = false;\n    this.users = [];\n\n    observable(this);\n\n    this._handleUserCodeError = (e) => this.trigger('usercode_error', e);\n\n    this.floors = this.createFloors(defaultOptions.floorCount, this.floorHeight, this._handleUserCodeError);\n    this.elevators = this.createElevators(\n      defaultOptions.elevatorCount,\n      defaultOptions.floorCount,\n      this.floorHeight,\n      defaultOptions.elevatorCapacities\n    );\n    this.facades = map(\n      this.elevators,\n      (elevator) => new ElevatorFacade({}, elevator, defaultOptions.floorCount, this._handleUserCodeError)\n    );\n\n    // Bind elevator entrance availability to floors/users\n    for (let i = 0; i < this.elevators.length; ++i) {\n      this.elevators[i].on('entrance_available', (elevator) => this.handleElevAvailability(elevator));\n    }\n\n    // Bind floor button presses to elevator queueing\n    for (let i = 0; i < this.floors.length; ++i) {\n      this.floors[i].on('up_button_pressed down_button_pressed', (eventName, floor) =>\n        this.handleButtonRepressing(eventName, floor)\n      );\n    }\n  }\n\n  /**\n   * Create an array of Floor instances.\n   * Floors are positioned from top (highest index) to bottom (lowest index),\n   * so the highest floor appears at the top of the display.\n   *\n   * @param {number} floorCount - The number of floors to create.\n   * @param {number} floorHeight - The height of each floor.\n   * @param {Function} errorHandler - Function to handle errors during event triggering.\n   *\n   * @returns {Array<Floor>} An array of Floor instances.\n   */\n  createFloors(floorCount, floorHeight, errorHandler) {\n    return map(range(floorCount), (i) => {\n      const yPos = (floorCount - 1 - i) * floorHeight;\n\n      return new Floor({ floorLevel: i, yPosition: yPos, errorHandler });\n    });\n  }\n\n  /**\n   * Create an array of Elevator instances.\n   * Elevators are positioned horizontally with a gap of 20 pixels between them.\n   * @param {number} elevatorCount - The number of elevators to create.\n   * @param {number} floorCount - The total number of floors in the building.\n   * @param {number} floorHeight - The height of each floor.\n   * @param {Array<number>} [elevatorCapacities] - Optional array specifying the capacity of each elevator.\n   * If not provided, defaults to a single capacity of 4\n   *\n   * @returns {Array<Elevator>} An array of Elevator instances.\n   */\n  createElevators(elevatorCount, floorCount, floorHeight, elevatorCapacities) {\n    elevatorCapacities = elevatorCapacities || [4];\n    let currentX = 200.0;\n\n    return map(range(elevatorCount), (e, i) => {\n      const elevator = new Elevator({\n        speedFloorsPerSec: 2.6,\n        floorCount,\n        floorHeight,\n        maxUsers: elevatorCapacities[i % elevatorCapacities.length],\n      });\n      elevator.moveTo(currentX, null);\n      elevator.setFloorPosition(0);\n      elevator.updateDisplayPosition();\n      currentX += 20 + elevator.width;\n      return elevator;\n    });\n  }\n\n  /**\n   * Create a random user for the simulation.\n   * The user will have a random weight between 55 and 100 kg.\n   * The display type is randomly assigned\n   * to 'child', 'female', or 'male'.\n   *\n   * @returns {User} A new User instance with random attributes.\n   */\n  createRandomUser() {\n    const weight = random(55, 100);\n    const user = new User(weight);\n    if (random(40) === 0) {\n      user.displayType = 'child';\n    } else if (random(1) === 0) {\n      user.displayType = 'female';\n    } else {\n      user.displayType = 'male';\n    }\n    return user;\n  }\n\n  /**\n   * Spawn a user randomly on a floor with a random destination.\n   */\n  spawnUserRandomly() {\n    const user = World.createRandomUser();\n    user.moveTo(105 + random(40), 0);\n    const floorCount = this.floorCount;\n    const currentFloor = random(1) === 0 ? 0 : random(floorCount - 1);\n    let destinationFloor;\n    if (currentFloor === 0) {\n      destinationFloor = random(1, floorCount - 1);\n    } else {\n      if (random(10) === 0) {\n        destinationFloor = (currentFloor + random(1, floorCount - 1)) % floorCount;\n      } else {\n        destinationFloor = 0;\n      }\n    }\n    user.appearOnFloor(this.floors[currentFloor], destinationFloor);\n    return user;\n  }\n\n  /**\n   * Register a user in the world and wire up events.\n   * @param {User} user\n   */\n  registerUser(user) {\n    this.users.push(user);\n    user.updateDisplayPosition(true);\n    user.spawnTimestamp = this.elapsedTime;\n    this.trigger('new_user', user);\n    user.on('exited_elevator', () => {\n      this.transportedCounter++;\n      this.maxWaitTime = Math.max(this.maxWaitTime, this.elapsedTime - user.spawnTimestamp);\n      this.avgWaitTime =\n        (this.avgWaitTime * (this.transportedCounter - 1) + (this.elapsedTime - user.spawnTimestamp)) /\n        this.transportedCounter;\n      this.recalculateStats();\n    });\n    user.updateDisplayPosition(true);\n  }\n\n  /**\n   * Recalculate world statistics.\n   */\n  recalculateStats() {\n    this.transportedPerSec = this.transportedCounter / this.elapsedTime;\n    this.moveCount = reduce(this.elevators, (sum, elevator) => sum + elevator.moveCount, 0);\n    this.trigger('stats_changed');\n  }\n\n  /**\n   * Handle elevator availability for floors and users.\n   * @param {Elevator} elevator\n   */\n  handleElevAvailability(elevator) {\n    for (let i = 0, len = this.floors.length; i < len; ++i) {\n      const floor = this.floors[i];\n      if (elevator.currentFloor === i) {\n        floor.elevatorAvailable(elevator);\n      }\n    }\n    for (let users = this.users, i = 0, len = users.length; i < len; ++i) {\n      const user = users[i];\n      if (user.currentFloor === elevator.currentFloor) {\n        user.elevatorAvailable(elevator, this.floors[elevator.currentFloor]);\n      }\n    }\n  }\n\n  /**\n   * Handle button repressing logic for floors and elevators.\n   */\n  handleButtonRepressing(eventName, floor) {\n    for (let i = 0, len = this.elevators.length, offset = random(len - 1); i < len; ++i) {\n      const elevIndex = (i + offset) % len;\n      const elevator = this.elevators[elevIndex];\n      if (\n        (eventName === 'up_button_pressed' && elevator.goingUpIndicator) ||\n        (eventName === 'down_button_pressed' && elevator.goingDownIndicator)\n      ) {\n        if (\n          elevator.currentFloor === floor.level &&\n          elevator.isOnAFloor() &&\n          !elevator.isMoving &&\n          !elevator.isFull()\n        ) {\n          this.facades[elevIndex].goToFloor(floor.level, true);\n          return;\n        }\n      }\n    }\n  }\n\n  /**\n   * Main update function for the simulation.\n   * @param {number} dt - Delta time in seconds.\n   */\n  update(dt) {\n    this.elapsedTime += dt;\n    this._elapsedSinceSpawn = (this._elapsedSinceSpawn || 1.001 / this.spawnRate) + dt;\n    this._elapsedSinceStatsUpdate = (this._elapsedSinceStatsUpdate || 0.0) + dt;\n\n    while (this._elapsedSinceSpawn > 1.0 / this.spawnRate) {\n      this._elapsedSinceSpawn -= 1.0 / this.spawnRate;\n      this.registerUser(this.spawnUserRandomly());\n    }\n\n    for (let i = 0, len = this.elevators.length; i < len; ++i) {\n      const e = this.elevators[i];\n      e.update(dt);\n      e.updateElevatorMovement(dt);\n    }\n    for (let users = this.users, i = 0, len = users.length; i < len; ++i) {\n      const u = users[i];\n      u.update(dt);\n      this.maxWaitTime = Math.max(this.maxWaitTime, this.elapsedTime - u.spawnTimestamp);\n    }\n    for (let users = this.users, i = users.length - 1; i >= 0; i--) {\n      const u = users[i];\n      if (u.removeMe) {\n        users.splice(i, 1);\n      }\n    }\n    this.recalculateStats();\n  }\n\n  /**\n   * Update display positions for all elevators and users.\n   */\n  updateDisplayPositions() {\n    for (let i = 0, len = this.elevators.length; i < len; ++i) {\n      this.elevators[i].updateDisplayPosition();\n    }\n    for (let users = this.users, i = 0, len = users.length; i < len; ++i) {\n      users[i].updateDisplayPosition();\n    }\n  }\n\n  /**\n   * Unwind the world, removing all event listeners and clearing arrays.\n   */\n  unWind() {\n    each(this.elevators.concat(this.facades).concat(this.users).concat(this.floors).concat([this]), (obj) => {\n      obj.off('*');\n    });\n    this.challengeEnded = true;\n    this.elevators = this.facades = this.users = this.floors = [];\n  }\n\n  /**\n   * Initialize the world (checks elevator queues).\n   */\n  init() {\n    for (let i = 0; i < this.facades.length; ++i) {\n      this.facades[i].checkDestinationQueue();\n    }\n  }\n}\n", "import map from 'lodash/map';\nimport random from 'lodash/random';\nimport range from 'lodash/range';\nimport reduce from 'lodash/reduce';\nimport {\n  accelerationNeededToAchieveChangeDistance,\n  distanceNeededToAchieveSpeed,\n  epsilonEquals,\n  limitNumber,\n  newGuard,\n} from './base';\nimport Movable from './movable';\n\n/**\n * Handles the transition to a new state for the given elevator.\n *\n * @param {Elevator} elevator - The elevator instance to handle the new state for.\n */\nfunction newElevStateHandler(elevator) {\n  elevator.handleNewState();\n}\n\n/**\n * Represents an elevator that can move between floors, carry users, and respond to button presses.\n * The elevator can accelerate, decelerate, and has indicators for going up and down.\n * It manages user slots, floor buttons, and provides methods to control its movement.\n * The elevator can also handle events for when it stops at a floor, when users enter or exit, and when it passes a floor.\n * @class Elevator\n * @extends Movable\n * @param {Object} options - Configuration options for the elevator.\n * @param {number} options.speedFloorsPerSec - The speed of the elevator in floors per second.\n * @param {number} options.floorCount - The total number of floors the elevator serves.\n * @param {number} options.floorHeight - The height of each floor in pixels.\n * @param {number} [options.maxUsers=4] - The maximum number of users the elevator can carry. Defaults to 4.\n *\n * @fires Elevator#new_current_floor - Triggered when the elevator arrives at a new floor.\n * @fires Elevator#passing_floor - Triggered when the elevator passes a floor (not the destination).\n * @fires Elevator#stopped - Triggered when the elevator stops at a floor.\n * @fires Elevator#stopped_at_floor - Triggered when the elevator stops at a specific floor.\n * @fires Elevator#exit_available - Triggered when users can exit the elevator.\n * @fires Elevator#entrance_available - Triggered when new users can enter the elevator.\n * @fires Elevator#floor_button_pressed - Triggered when a floor button is pressed.\n */\nexport default class Elevator extends Movable {\n  /**\n   * Creates an instance of Elevator.\n   * Initializes the elevator with its properties, user slots, and event handlers.\n   * @param {Object} options - Configuration options for the elevator.\n   * @param {number} options.speedFloorsPerSec - The speed of the elevator in floors per second.\n   * @param {number} options.floorCount - The total number of floors the elevator serves.\n   * @param {number} options.floorHeight - The height of each floor in pixels.\n   * @param {number} [options.maxUsers=4] - The maximum number of users the elevator can carry. Defaults to 4.\n   */\n  constructor(options) {\n    super();\n    newGuard(this, Elevator);\n    this.ACCELERATION = options.floorHeight * 2.1;\n    this.DECELERATION = options.floorHeight * 2.6;\n    this.MAXSPEED = options.floorHeight * options.speedFloorsPerSec;\n    this.floorCount = options.floorCount;\n    this.floorHeight = options.floorHeight;\n    this.maxUsers = options.maxUsers || 4;\n    this.destinationY = 0.0;\n    this.velocityY = 0.0;\n    // isMoving flag is needed when going to same floor again - need to re-raise events\n    this.isMoving = false;\n\n    this.goingDownIndicator = true;\n    this.goingUpIndicator = true;\n\n    this.currentFloor = 0;\n    this.previousTruncFutureFloorIfStopped = 0;\n    this.buttonStates = map(range(this.floorCount), function (e, i) {\n      return false;\n    });\n    this.moveCount = 0;\n    this.removed = false;\n    this.userSlots = map(range(this.maxUsers), function (user, i) {\n      return { pos: [2 + i * 10, 30], user: null };\n    });\n    this.width = this.maxUsers * 10;\n    this.destinationY = this.getYPosOfFloor(this.currentFloor);\n\n    this.on('new_state', newElevStateHandler);\n\n    this.on('change:goingUpIndicator', () => {\n      this.trigger('indicatorstate_change', {\n        up: this.goingUpIndicator,\n        down: this.goingDownIndicator,\n      });\n    });\n\n    this.on('change:goingDownIndicator', () => {\n      this.trigger('indicatorstate_change', {\n        up: this.goingUpIndicator,\n        down: this.goingDownIndicator,\n      });\n    });\n  }\n\n  /**\n   * Sets the elevator to a specific floor position.\n   * @param {number} floor - The floor number to set the elevator to.\n   * @throws Will throw an error if the elevator is busy.\n   */\n  setFloorPosition(floor) {\n    const destination = this.getYPosOfFloor(floor);\n    this.currentFloor = floor;\n    this.previousTruncFutureFloorIfStopped = floor;\n    this.moveTo(null, destination);\n  }\n\n  /**\n   * Attempts to assign a user to a random available slot in the elevator.\n   * Starts searching from a random offset to distribute users more evenly.\n   *\n   * @param {Object} user - The user object to be assigned to a slot.\n   * @returns {(Object|boolean)} The position of the assigned slot if successful, or false if no slots are available.\n   */\n  userEntering(user) {\n    const randomOffset = random(this.userSlots.length - 1);\n    for (let i = 0; i < this.userSlots.length; i++) {\n      const slot = this.userSlots[(i + randomOffset) % this.userSlots.length];\n      if (slot.user === null) {\n        slot.user = user;\n        return slot.pos;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Handles the pressing of a floor button.\n   *\n   * Ensures the floor number is within valid bounds, updates the button state,\n   * and triggers relevant events if the button was not previously pressed.\n   *\n   * @param {number} floorNumber - The floor number whose button is being pressed.\n   */\n  pressFloorButton(floorNumber) {\n    floorNumber = limitNumber(floorNumber, 0, this.floorCount - 1);\n    const prev = this.buttonStates[floorNumber];\n    this.buttonStates[floorNumber] = true;\n    if (!prev) {\n      this.trigger('floor_button_pressed', floorNumber);\n      this.trigger('floor_buttons_changed', this.buttonStates, floorNumber);\n    }\n  }\n\n  /**\n   * Marks the specified user as exiting the elevator by setting their slot to null.\n   *\n   * @param {Object} user - The user object to be removed from the elevator slots.\n   */\n  userExiting(user) {\n    for (let i = 0; i < this.userSlots.length; i++) {\n      const slot = this.userSlots[i];\n      if (slot.user === user) {\n        slot.user = null;\n      }\n    }\n  }\n\n  /**\n   * Updates the elevator's vertical movement based on the current velocity, acceleration, and destination.\n   * Handles acceleration, deceleration, and stopping logic to ensure smooth movement and accurate arrival at the destination.\n   *\n   * @param {number} dt - The time delta (in seconds) since the last update.\n   *\n   * @throws {Error} (potentially) if the elevator is busy and has a nonzero velocity (not currently implemented).\n   */\n  updateElevatorMovement(dt) {\n    if (this.isBusy()) {\n      // TODO: Consider if having a nonzero velocity here should throw error..\n      return;\n    }\n\n    // Make sure we're not speeding\n    this.velocityY = limitNumber(this.velocityY, -this.MAXSPEED, this.MAXSPEED);\n\n    // Move elevator\n    this.moveTo(null, this.y + this.velocityY * dt);\n\n    const destinationDiff = this.destinationY - this.y;\n    const directionSign = Math.sign(destinationDiff);\n    const velocitySign = Math.sign(this.velocityY);\n    let acceleration = 0.0;\n    if (destinationDiff !== 0.0) {\n      if (directionSign === velocitySign) {\n        // Moving in correct direction\n        const distanceNeededToStop = distanceNeededToAchieveSpeed(this.velocityY, 0.0, this.DECELERATION);\n        if (distanceNeededToStop * 1.05 < -Math.abs(destinationDiff)) {\n          // Slow down\n          // Allow a certain factor of extra breaking, to enable a smooth breaking movement after detecting overshoot\n          const requiredDeceleration = accelerationNeededToAchieveChangeDistance(this.velocityY, 0.0, destinationDiff);\n          const deceleration = Math.min(this.DECELERATION * 1.1, Math.abs(requiredDeceleration));\n          this.velocityY -= directionSign * deceleration * dt;\n        } else {\n          // Speed up (or keep max speed...)\n          acceleration = Math.min(Math.abs(destinationDiff * 5), this.ACCELERATION);\n          this.velocityY += directionSign * acceleration * dt;\n        }\n      } else if (velocitySign === 0) {\n        // Standing still - should accelerate\n        acceleration = Math.min(Math.abs(destinationDiff * 5), this.ACCELERATION);\n        this.velocityY += directionSign * acceleration * dt;\n      } else {\n        // Moving in wrong direction - decelerate as much as possible\n        this.velocityY -= velocitySign * this.DECELERATION * dt;\n        // Make sure we don't change direction within this time step - let standstill logic handle it\n        if (Math.sign(this.velocityY) !== velocitySign) {\n          this.velocityY = 0.0;\n        }\n      }\n    }\n\n    if (this.isMoving && Math.abs(destinationDiff) < 0.5 && Math.abs(this.velocityY) < 3) {\n      // Snap to destination and stop\n      this.moveTo(null, this.destinationY);\n      this.velocityY = 0.0;\n      this.isMoving = false;\n      this.handleDestinationArrival();\n    }\n  }\n\n  /**\n   * Handles the elevator's arrival at a destination floor.\n   *\n   * Triggers the 'stopped' event with the exact current floor.\n   * If the elevator is on a floor, it:\n   * - Updates the button state for the current floor.\n   * - Triggers 'floor_buttons_changed' with updated button states and current floor.\n   * - Triggers 'stopped_at_floor' for the current floor.\n   * - Triggers 'exit_available' to allow passengers to exit.\n   * - Triggers 'entrance_available' to allow new passengers to enter.\n   */\n  handleDestinationArrival() {\n    this.trigger('stopped', this.getExactCurrentFloor());\n\n    if (this.isOnAFloor()) {\n      this.buttonStates[this.currentFloor] = false;\n      this.trigger('floor_buttons_changed', this.buttonStates, this.currentFloor);\n      this.trigger('stopped_at_floor', this.currentFloor);\n      // Need to allow users to get off first, so that new ones\n      // can enter on the same floor\n      this.trigger('exit_available', this.currentFloor, this);\n      this.trigger('entrance_available', this);\n    }\n  }\n\n  /**\n   * Commands the elevator to move to the specified floor.\n   * Ensures the elevator is not currently busy before initiating movement.\n   *\n   * @param {number} floor - The floor number to which the elevator should move.\n   * @throws {Error} If the elevator is currently busy and cannot accept new commands.\n   */\n  goToFloor(floor) {\n    this.makeSureNotBusy();\n    this.isMoving = true;\n    this.destinationY = this.getYPosOfFloor(floor);\n  }\n\n  /**\n   * Returns the index of the first pressed floor button.\n   * Iterates through the buttonStates array and returns the index of the first element that is truthy.\n   * If no button is pressed, returns 0.\n   *\n   * @returns {number} The index of the first pressed floor button, or 0 if none are pressed.\n   */\n  getFirstPressedFloor() {\n    deprecationWarning('getFirstPressedFloor');\n    for (let i = 0; i < this.buttonStates.length; i++) {\n      if (this.buttonStates[i]) {\n        return i;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * Returns an array of floor numbers for which the elevator's buttons are currently pressed.\n   *\n   * Iterates through the `buttonStates` array and collects the indices (representing floor numbers)\n   * where the button state is truthy (pressed).\n   *\n   * @returns {number[]} An array of floor numbers with pressed buttons.\n   */\n  getPressedFloors() {\n    const arr = [];\n    for (let i = 0; i < this.buttonStates.length; i++) {\n      if (this.buttonStates[i]) {\n        arr.push(i);\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Determines if the elevator is suitable for travel between two floors based on its current direction indicators.\n   *\n   * @param {number} fromFloorNum - The floor number where the travel starts.\n   * @param {number} toFloorNum - The floor number where the travel ends.\n   * @returns {boolean} - Returns true if the elevator is suitable for the requested travel direction, otherwise false.\n   */\n  isSuitableForTravelBetween(fromFloorNum, toFloorNum) {\n    if (fromFloorNum > toFloorNum) {\n      return this.goingDownIndicator;\n    }\n    if (fromFloorNum < toFloorNum) {\n      return this.goingUpIndicator;\n    }\n    return true;\n  }\n\n  /**\n   * Calculates the Y position of a given floor number.\n   *\n   * @param {number} floorNum - The floor number for which to calculate the Y position (0-based).\n   * @returns {number} The Y coordinate of the specified floor.\n   */\n  getYPosOfFloor(floorNum) {\n    return (this.floorCount - 1) * this.floorHeight - floorNum * this.floorHeight;\n  }\n\n  /**\n   * Calculates the exact floor number corresponding to a given Y position.\n   *\n   * @param {number} y - The Y position to convert to a floor number.\n   * @returns {number} The exact (possibly fractional) floor number for the given Y position.\n   */\n  getExactFloorOfYPos(y) {\n    return ((this.floorCount - 1) * this.floorHeight - y) / this.floorHeight;\n  }\n\n  /**\n   * Returns the exact current floor of the elevator based on its current Y position.\n   *\n   * @returns {number} The exact floor number corresponding to the elevator's current Y position.\n   */\n  getExactCurrentFloor() {\n    return this.getExactFloorOfYPos(this.y);\n  }\n\n  /**\n   * Returns the destination floor number based on the elevator's destination Y position.\n   *\n   * @returns {number} The floor number corresponding to the elevator's destination Y position.\n   */\n  getDestinationFloor() {\n    return this.getExactFloorOfYPos(this.destinationY);\n  }\n\n  /**\n   * Returns the current floor number rounded to the nearest integer.\n   * Utilizes the exact current floor value and rounds it to the closest whole number.\n   *\n   * @returns {number} The rounded current floor number.\n   */\n  getRoundedCurrentFloor() {\n    return Math.round(this.getExactCurrentFloor());\n  }\n\n  /**\n   * Calculates the exact floor the elevator will be at if it stops immediately,\n   * taking into account the current velocity and deceleration.\n   *\n   * @returns {number} The exact floor (as a floating-point number) where the elevator would stop.\n   */\n  getExactFutureFloorIfStopped() {\n    const distanceNeededToStop = distanceNeededToAchieveSpeed(this.velocityY, 0.0, this.DECELERATION);\n    return this.getExactFloorOfYPos(this.y - Math.sign(this.velocityY) * distanceNeededToStop);\n  }\n\n  /**\n   * Determines if the elevator is currently moving towards the specified floor.\n   *\n   * @param {number} floorNum - The floor number to check against the elevator's current trajectory.\n   * @returns {boolean} True if the elevator is moving and heading towards the given floor, false otherwise.\n   */\n  isApproachingFloor(floorNum) {\n    const floorYPos = this.getYPosOfFloor(floorNum);\n    const elevToFloor = floorYPos - this.y;\n    return this.velocityY !== 0.0 && Math.sign(this.velocityY) === Math.sign(elevToFloor);\n  }\n\n  /**\n   * Determines whether the elevator is currently positioned exactly on a floor.\n   *\n   * @returns {boolean} True if the elevator's exact current floor is equal to its rounded current floor, otherwise false.\n   */\n  isOnAFloor() {\n    return epsilonEquals(this.getExactCurrentFloor(), this.getRoundedCurrentFloor());\n  }\n\n  /**\n   * Calculates the current load factor of the elevator.\n   * The load factor is determined by summing the weights of all users currently in the elevator\n   * and dividing by the maximum possible load (maxUsers * 100).\n   *\n   * @returns {number} The load factor as a decimal between 0 and 1.\n   */\n  getLoadFactor() {\n    const load = reduce(\n      this.userSlots,\n      function (sum, slot) {\n        return sum + (slot.user ? slot.user.weight : 0);\n      },\n      0\n    );\n    return load / (this.maxUsers * 100);\n  }\n\n  /**\n   * Checks if all user slots in the elevator are occupied.\n   *\n   * @returns {boolean} Returns true if every slot has a user, otherwise false.\n   */\n  isFull() {\n    for (let i = 0; i < this.userSlots.length; i++) {\n      if (this.userSlots[i].user === null) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Checks if all user slots are empty.\n   * @returns {boolean} Returns true if all user slots are empty (i.e., no user is present), otherwise false.\n   */\n  isEmpty() {\n    for (let i = 0; i < this.userSlots.length; i++) {\n      if (this.userSlots[i].user !== null) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Handles the elevator's state update when its position or movement changes.\n   *\n   * - Updates the current floor if the elevator has moved to a new floor, increments the move count,\n   *   and triggers the 'new_current_floor' event.\n   * - Checks if the truncated future floor (if the elevator stopped now) has changed since the last check.\n   *   If so, determines if the elevator is passing a floor (not the destination) and triggers the\n   *   'passing_floor' event with the floor number and direction ('up' or 'down').\n   * - Updates the previous truncated future floor for the next state check.\n   *\n   * @fires Elevator#new_current_floor - Triggered when the elevator arrives at a new floor.\n   * @fires Elevator#passing_floor - Triggered when the elevator passes a floor (not the destination).\n   */\n  handleNewState() {\n    const currentFloor = this.getRoundedCurrentFloor();\n    if (currentFloor !== this.currentFloor) {\n      this.moveCount++;\n      this.currentFloor = currentFloor;\n      this.trigger('new_current_floor', this.currentFloor);\n    }\n\n    const futureTruncFloorIfStopped = Math.trunc(this.getExactFutureFloorIfStopped());\n    if (futureTruncFloorIfStopped !== this.previousTruncFutureFloorIfStopped) {\n      const floorBeingPassed = Math.round(this.getExactFutureFloorIfStopped());\n      if (this.getDestinationFloor() !== floorBeingPassed && this.isApproachingFloor(floorBeingPassed)) {\n        const direction = this.velocityY > 0.0 ? 'down' : 'up';\n        this.trigger('passing_floor', floorBeingPassed, direction);\n      }\n    }\n    this.previousTruncFutureFloorIfStopped = futureTruncFloorIfStopped;\n  }\n}\n", "import observable from '@riotjs/observable';\nimport first from 'lodash/first';\nimport last from 'lodash/last';\nimport tail from 'lodash/tail';\nimport { createBoolPassthroughFunction, epsilonEquals, limitNumber } from './base.js';\n\n/**\n * Facade class for controlling and interacting with an elevator instance.\n * Provides a simplified interface for managing elevator destinations, events, and state.\n *\n * @class ElevatorFacade\n * @param {Object} obj - The observable object to extend.\n * @param {Object} elevator - The underlying elevator instance to wrap.\n * @param {number} floorCount - The total number of floors in the building.\n * @param {Function} errorHandler - Callback to handle errors thrown during event triggering.\n *\n * @property {Array<number>} destinationQueue - Queue of floor numbers the elevator is scheduled to visit.\n * @property {Function} goingUpIndicator - Passthrough function to set/get the elevator's \"going up\" indicator.\n * @property {Function} goingDownIndicator - Passthrough function to set/get the elevator's \"going down\" indicator.\n *\n * @method _tryTrigger(event, arg1, arg2, arg3, arg4) - Safely triggers an event, catching and handling errors.\n * @method checkDestinationQueue() - Checks and processes the next destination in the queue if the elevator is idle.\n * @method goToFloor(floorNum, forceNow) - Adds a floor to the destination queue, optionally forcing it to the front.\n * @method stop() - Clears the destination queue and stops the elevator at the nearest floor.\n * @method getFirstPressedFloor() - Returns the first floor button pressed inside the elevator (deprecated).\n * @method getPressedFloors() - Returns an array of all pressed floor buttons inside the elevator.\n * @method currentFloor() - Returns the current floor number of the elevator.\n * @method maxPassengerCount() - Returns the maximum passenger capacity of the elevator.\n * @method loadFactor() - Returns the current load factor of the elevator.\n * @method destinationDirection() - Returns the direction the elevator is heading ('up', 'down', or 'stopped').\n */\nexport default class ElevatorFacade {\n  constructor(options) {\n    this.elevator = options.elevator;\n    this.floorCount = options.floorCount;\n    this.errorHandler = options.errorHandler;\n    this.destinationQueue = [];\n\n    // Bind passthrough indicator methods\n    this.goingUpIndicator = createBoolPassthroughFunction(this, this.elevator, 'goingUpIndicator');\n    this.goingDownIndicator = createBoolPassthroughFunction(this, this.elevator, 'goingDownIndicator');\n\n    observable(this);\n    // Bind elevator events to facade\n    this.elevator.on('stopped', (position) => {\n      if (this.destinationQueue.length && epsilonEquals(first(this.destinationQueue), position)) {\n        // Reached the destination, so remove element at front of queue\n        this.destinationQueue = tail(this.destinationQueue);\n        if (this.elevator.isOnAFloor()) {\n          this.elevator.wait(1, () => {\n            this.checkDestinationQueue();\n          });\n        } else {\n          this.checkDestinationQueue();\n        }\n      }\n    });\n    this.elevator.on('passing_floor', (floorNum, direction) => {\n      this._tryTrigger('passing_floor', floorNum, direction);\n    });\n    this.elevator.on('stopped_at_floor', (floorNum) => {\n      this._tryTrigger('stopped_at_floor', floorNum);\n    });\n    this.elevator.on('floor_button_pressed', (floorNum) => {\n      this._tryTrigger('floor_button_pressed', floorNum);\n    });\n  }\n\n  _tryTrigger(event, arg1, arg2, arg3, arg4) {\n    try {\n      this.trigger(event, arg1, arg2, arg3, arg4);\n    } catch (e) {\n      this.errorHandler(e);\n    }\n  }\n\n  /**\n   * Checks the elevator's destination queue and directs the elevator to the next floor if it is not busy.\n   * If the destination queue is empty, triggers the 'idle' event.\n   *\n   * @returns {void}\n   */\n  checkDestinationQueue() {\n    if (!this.elevator.isBusy()) {\n      if (this.destinationQueue.length) {\n        this.elevator.goToFloor(first(this.destinationQueue));\n      } else {\n        this._tryTrigger('idle');\n      }\n    }\n  }\n\n  /**\n   * Adds a floor number to the elevator's destination queue, optionally forcing it to the front.\n   * Prevents adding immediately duplicate destinations.\n   *\n   * @param {number} floorNum - The target floor number to go to.\n   * @param {boolean} [forceNow=false] - If true, adds the floor to the front of the queue; otherwise, adds to the end.\n   */\n  goToFloor(floorNum, forceNow) {\n    floorNum = limitNumber(Number(floorNum), 0, this.floorCount - 1);\n    // Auto-prevent immediately duplicate destinations\n    if (this.destinationQueue.length) {\n      const adjacentElement = forceNow ? first(this.destinationQueue) : last(this.destinationQueue);\n      if (epsilonEquals(floorNum, adjacentElement)) {\n        return;\n      }\n    }\n    this.destinationQueue[forceNow ? 'unshift' : 'push'](floorNum);\n    this.checkDestinationQueue();\n  }\n\n  /**\n   * Stops the elevator by clearing its destination queue.\n   * If the elevator is not busy, it sends the elevator to its current exact future floor.\n   *\n   * @returns {void}\n   */\n  stop() {\n    this.destinationQueue = [];\n    if (!this.elevator.isBusy()) {\n      this.elevator.goToFloor(this.elevator.getExactFutureFloorIfStopped());\n    }\n  }\n\n  /**\n   * Returns the first floor button that was pressed inside the elevator.\n   *\n   * @deprecated This method is undocumented and will be removed in future versions.\n   * @returns {number|undefined} The number of the first pressed floor, or undefined if no floor is pressed.\n   */\n  getFirstPressedFloor() {\n    return this.elevator.getFirstPressedFloor();\n  } // Undocumented and deprecated, will be removed\n\n  /**\n   * Returns an array of floor numbers that have been requested by passengers inside the elevator.\n   * These are the floors for which the corresponding buttons have been pressed.\n   *\n   * @returns {number[]} An array of floor numbers currently pressed inside the elevator.\n   */\n  getPressedFloors() {\n    return this.elevator.getPressedFloors();\n  }\n\n  /**\n   * Returns the current floor number of the elevator.\n   * @returns {number} The current floor the elevator is on.\n   */\n  currentFloor() {\n    return this.elevator.currentFloor;\n  }\n\n  /**\n   * Returns the maximum number of passengers the elevator can carry.\n   * @returns {number} The maximum passenger count for the elevator.\n   */\n  maxPassengerCount() {\n    return this.elevator.maxUsers;\n  }\n\n  /**\n   * Returns the current load factor of the elevator.\n   * The load factor is a value between 0 and 1 representing how full the elevator is.\n   *\n   * @returns {number} The current load factor of the elevator.\n   */\n  loadFactor() {\n    return this.elevator.getLoadFactor();\n  }\n\n  /**\n   * Determines the direction the elevator should move to reach its destination.\n   *\n   * @returns {string} Returns 'up' if the destination is above the current position,\n   *                   'down' if the destination is below, or 'stopped' if already at the destination.\n   */\n  destinationDirection() {\n    if (this.elevator.destinationY === this.elevator.y) {\n      return 'stopped';\n    }\n    return this.elevator.destinationY > this.elevator.y ? 'down' : 'up';\n  }\n}\n", "import observable from '@riotjs/observable';\n\n/**\n * Represents a floor in the elevator simulation.\n * Handles button states, triggers events, and manages elevator availability.\n *\n * @class Floor\n * @param {Object} options - Configuration options for the floor.\n * @param {number} options.floorLevel - The floor number/level.\n * @param {number} options.yPosition - The vertical position of the floor.\n * @param {Function} options.errorHandler - Function to handle errors during event triggering.\n *\n * @property {number} level - The floor number/level.\n * @property {number} yPosition - The vertical position of the floor.\n * @property {{up: string, down: string}} buttonStates - The state of the up and down buttons.\n * @property {Function} _errorHandler - Error handler for event triggers.\n *\n * @method pressUpButton - Activates the up button and triggers related events.\n * @method pressDownButton - Activates the down button and triggers related events.\n * @method elevatorAvailable - Resets button states when an elevator becomes available.\n * @method getSpawnPosY - Gets the Y position for spawning entities on this floor.\n * @method floorNum - Returns the floor number/level.\n * @private\n * @method _tryTrigger - Tries to trigger an event and handles errors.\n */\nexport default class Floor {\n  /**\n   * Creates an instance of Floor.\n   * Initializes the floor with a level, Y position, and an error handler for event triggering.\n   * @param {Object} options - Configuration options for the floor.\n   * @param {number} options.floorLevel - The floor number/level.\n   * @param {number} options.yPosition - The vertical position of the floor.\n   * @param {Function} options.errorHandler - Function to handle errors during event triggering.\n   */\n  constructor(options) {\n    if (!options || typeof options.errorHandler !== 'function') {\n      throw new Error('errorHandler must be provided and be a function.');\n    }\n\n    this.level = options.floorLevel;\n    this.yPosition = options.yPosition;\n    this.buttonStates = { up: '', down: '' };\n    this._errorHandler = options.errorHandler;\n\n    observable(this);\n  }\n\n  /**\n   * Attempts to trigger a specified event with up to four arguments.\n   * If an error occurs during the trigger, it is handled by the internal error handler.\n   *\n   * @param {string} event - The name of the event to trigger.\n   * @param {*} [arg1] - The first argument to pass to the event handler.\n   * @param {*} [arg2] - The second argument to pass to the event handler.\n   * @param {*} [arg3] - The third argument to pass to the event handler.\n   * @param {*} [arg4] - The fourth argument to pass to the event handler.\n   */\n  _tryTrigger(event, arg1, arg2, arg3, arg4) {\n    try {\n      this.trigger(event, arg1, arg2, arg3, arg4);\n    } catch (e) {\n      this._errorHandler(e);\n    }\n  }\n\n  /**\n   * Activates the \"up\" button on the floor, updating its state and triggering relevant events if the state changes.\n   *\n   * Triggers:\n   * - 'buttonstate_change' with the updated button states if the \"up\" button was not already activated.\n   * - 'up_button_pressed' with the current floor instance if the \"up\" button was not already activated.\n   */\n  pressUpButton() {\n    const prev = this.buttonStates.up;\n    this.buttonStates.up = 'activated';\n    if (prev !== this.buttonStates.up) {\n      this._tryTrigger('buttonstate_change', this.buttonStates);\n      this._tryTrigger('up_button_pressed', this);\n    }\n  }\n\n  /**\n   * Activates the \"down\" button on the floor, updating its state to 'activated'.\n   * If the button state changes, triggers the 'buttonstate_change' and 'down_button_pressed' events.\n   *\n   * @fires buttonstate_change - Triggered when the button state changes.\n   * @fires down_button_pressed - Triggered when the down button is pressed.\n   */\n  pressDownButton() {\n    const prev = this.buttonStates.down;\n    this.buttonStates.down = 'activated';\n    if (prev !== this.buttonStates.down) {\n      this._tryTrigger('buttonstate_change', this.buttonStates);\n      this._tryTrigger('down_button_pressed', this);\n    }\n  }\n\n  /**\n   * Handles the availability of an elevator at the floor.\n   * If the elevator is going in the direction of a pressed button (up or down),\n   * resets the corresponding button state and triggers a 'buttonstate_change' event.\n   *\n   * @param {Object} elevator - The elevator object.\n   * @param {boolean} elevator.goingUpIndicator - Indicates if the elevator is going up.\n   * @param {boolean} elevator.goingDownIndicator - Indicates if the elevator is going down.\n   */\n  elevatorAvailable(elevator) {\n    if (elevator.goingUpIndicator && this.buttonStates.up) {\n      this.buttonStates.up = '';\n      this._tryTrigger('buttonstate_change', this.buttonStates);\n    }\n    if (elevator.goingDownIndicator && this.buttonStates.down) {\n      this.buttonStates.down = '';\n      this._tryTrigger('buttonstate_change', this.buttonStates);\n    }\n  }\n\n  /**\n   * Calculates and returns the Y-coordinate for spawning an object on the floor.\n   * Adds an offset of 30 to the current floor's Y position.\n   *\n   * @returns {number} The Y-coordinate for the spawn position.\n   */\n  getSpawnPosY() {\n    return this.yPosition + 30;\n  }\n\n  /**\n   * Returns the floor number (level) of this floor.\n   * @returns {number} The floor number.\n   */\n  floorNum() {\n    return this.level;\n  }\n}\n", "import observable from '@riotjs/observable';\nimport World from '../models/world';\nimport WorldController from '../models/world-controller';\n\n/**\n * Main simulation application controller.\n * Handles challenge lifecycle, world setup, and UI integration.\n */\nexport default class Simulation {\n  /**\n   * @param {Object} deps - Dependency injection for UI and editor.\n   * @param {Object} deps.editor - Code editor interface.\n   * @param {Array} deps.challenges - Array of challenge definitions.\n   * @param {Function} deps.clearAll - UI clear function.\n   * @param {Function} deps.presentStats - UI stats presenter.\n   * @param {Function} deps.presentChallenge - UI challenge presenter.\n   * @param {Function} deps.presentWorld - UI world presenter.\n   * @param {Function} deps.presentFeedback - UI feedback presenter.\n   * @param {Object} deps.templates - UI templates.\n   * @param {Object} deps.params - URL params.\n   * @param {Function} deps.createParamsUrl - URL param creator.\n   * @param {string} deps.tsKey - LocalStorage key for timescale.\n   * @param {Object} deps.$world - World DOM element.\n   * @param {Object} deps.$feedback - Feedback DOM element.\n   * @param {Object} deps.$stats - Stats DOM element.\n   * @param {Object} deps.$challenge - Challenge DOM element.\n   */\n  constructor({\n    editor,\n    challenges,\n    clearAll,\n    presentStats,\n    presentChallenge,\n    presentWorld,\n    presentFeedback,\n    templates,\n    params,\n    createParamsUrl,\n    tsKey,\n    $world,\n    $feedback,\n    $stats,\n    $challenge,\n  }) {\n    observable(this);\n    this.editor = editor;\n    this.challenges = challenges;\n    this.clearAll = clearAll;\n    this.presentStats = presentStats;\n    this.presentChallenge = presentChallenge;\n    this.presentWorld = presentWorld;\n    this.presentFeedback = presentFeedback;\n    this.templates = templates;\n    this.params = params;\n    this.createParamsUrl = createParamsUrl;\n    this.tsKey = tsKey;\n    this.$world = $world;\n    this.$feedback = $feedback;\n    this.$stats = $stats;\n    this.$challenge = $challenge;\n\n    this.currentChallengeIndex = 0;\n    this.worldController = new WorldController(1.0 / 60.0);\n    this.worldController.on('usercode_error', (e) => {\n      console.log('World raised code error', e);\n      this.editor.trigger('usercode_error', e);\n    });\n  }\n\n  /**\n   * Start, stop, or restart the simulation.\n   */\n  startStopOrRestart() {\n    if (this.world && this.world.challengeEnded) {\n      this.startChallenge(this.currentChallengeIndex);\n    } else {\n      this.worldController.setPaused(!this.worldController.isPaused);\n    }\n  }\n\n  /**\n   * Start a challenge by index.\n   * @param {number} challengeIndex\n   * @param {boolean} [autoStart]\n   */\n  startChallenge(challengeIndex, autoStart) {\n    if (typeof this.world !== 'undefined') {\n      this.world.unWind();\n      // TODO: Investigate if memory leaks happen here\n    }\n    this.currentChallengeIndex = challengeIndex;\n    this.world = new World(this.challenges[challengeIndex].options);\n    window.world = this.world;\n\n    this.clearAll([this.$world, this.$feedback]);\n    this.presentStats(this.$stats, this.world);\n    this.presentChallenge(\n      this.$challenge,\n      this.challenges[challengeIndex],\n      this,\n      this.world,\n      this.worldController,\n      challengeIndex + 1,\n      this.templates.challengeTempl\n    );\n    this.presentWorld(\n      this.$world,\n      this.world,\n      this.templates.floorTempl,\n      this.templates.elevatorTempl,\n      this.templates.elevatorButtonTempl,\n      this.templates.userTempl\n    );\n\n    this.worldController.on('timescale_changed', () => {\n      localStorage.setItem(this.tsKey, this.worldController.timeScale);\n      this.presentChallenge(\n        this.$challenge,\n        this.challenges[challengeIndex],\n        this,\n        this.world,\n        this.worldController,\n        challengeIndex + 1,\n        this.templates.challengeTempl\n      );\n    });\n\n    this.world.on('stats_changed', () => {\n      const challengeStatus = this.challenges[challengeIndex].condition.evaluate(this.world);\n      if (challengeStatus !== null) {\n        this.world.challengeEnded = true;\n        this.worldController.setPaused(true);\n        if (challengeStatus) {\n          this.presentFeedback(\n            this.$feedback,\n            this.templates.feedbackTempl,\n            this.world,\n            'Success!',\n            'Challenge completed',\n            this.createParamsUrl(this.params, { challenge: challengeIndex + 2 })\n          );\n        } else {\n          this.presentFeedback(\n            this.$feedback,\n            this.templates.feedbackTempl,\n            this.world,\n            'Challenge failed',\n            'Maybe your program needs an improvement?',\n            ''\n          );\n        }\n      }\n    });\n\n    const codeObj = this.editor.getCodeObj();\n    console.log('Starting...');\n    this.worldController.start(this.world, codeObj, window.requestAnimationFrame, autoStart);\n  }\n}\n", "import observable from '@riotjs/observable';\n\n/**\n * Controls the simulation loop and manages the state of the world.\n * Handles pausing, time scaling, and user code integration for the simulation.\n *\n * @class\n * @fires usercode_error - Triggered when an error occurs in user code.\n * @fires timescale_changed - Triggered when the simulation time scale changes.\n * @fires stats_display_changed - Triggered when the stats display should update.\n *\n * @param {number} dtMax - Maximum delta time per update.\n *\n * @property {number} dtMax - Maximum delta time for each update step.\n * @property {number} timeScale - Current time scale for the simulation.\n * @property {boolean} isPaused - Whether the simulation is currently paused.\n *\n * @example\n * const controller = new WorldController(0.1);\n * controller.start(world, userCode, requestAnimationFrame, true);\n */\nexport default class WorldController {\n  /**\n   * @param {number} dtMax - Maximum delta time per update.\n   */\n  constructor(dtMax) {\n    observable(this);\n    this.dtMax = dtMax;\n    this.timeScale = 1.0;\n    this.isPaused = true;\n  }\n\n  /**\n   * Start the simulation loop.\n   * @param {World} world\n   * @param {Object} codeObj - User code object with init/update methods.\n   * @param {Function} animationFrameRequester - Function to request animation frames.\n   * @param {boolean} autoStart - Whether to start immediately.\n   */\n  start(world, codeObj, animationFrameRequester, autoStart) {\n    this.isPaused = true;\n    let lastT = null;\n    let firstUpdate = true;\n    world.on('usercode_error', this.handleUserCodeError.bind(this));\n    const updater = (t) => {\n      if (!this.isPaused && !world.challengeEnded && lastT !== null) {\n        if (firstUpdate) {\n          firstUpdate = false;\n          try {\n            codeObj.init(world.facades, world.floors);\n            world.init();\n          } catch (e) {\n            this.handleUserCodeError(e);\n          }\n        }\n        let dt = t - lastT;\n        let scaledDt = dt * 0.001 * this.timeScale;\n        scaledDt = Math.min(scaledDt, this.dtMax * 3 * this.timeScale);\n        try {\n          codeObj.update(scaledDt, world.facades, world.floors);\n        } catch (e) {\n          this.handleUserCodeError(e);\n        }\n        while (scaledDt > 0.0 && !world.challengeEnded) {\n          const thisDt = Math.min(this.dtMax, scaledDt);\n          world.update(thisDt);\n          scaledDt -= this.dtMax;\n        }\n        world.updateDisplayPositions();\n        world.trigger('stats_display_changed');\n      }\n      lastT = t;\n      if (!world.challengeEnded) {\n        animationFrameRequester(updater);\n      }\n    };\n    if (autoStart) {\n      this.setPaused(false);\n    }\n    animationFrameRequester(updater);\n  }\n\n  /**\n   * Handle user code errors.\n   * @param {Error} e\n   */\n  handleUserCodeError(e) {\n    this.setPaused(true);\n    console.log('Usercode error on update', e);\n    this.trigger('usercode_error', e);\n  }\n\n  /**\n   * Pause or resume the simulation.\n   * @param {boolean} paused\n   */\n  setPaused(paused) {\n    this.isPaused = paused;\n    this.trigger('timescale_changed');\n  }\n\n  /**\n   * Set the simulation time scale.\n   * @param {number} timeScale\n   */\n  setTimeScale(timeScale) {\n    this.timeScale = timeScale;\n    this.trigger('timescale_changed');\n  }\n}\n", "export const typeDeclarations = `interface Solution {\n    init: (elevators: Elevator[], floors: Floor[]) => void;\n    update: (dt: number, elevators: Elevator[], floors: Floor[]) => void;\n}\ninterface Elevator {\n    /**\n     * Queue the elevator to go to specified floor number.\n     * If you specify true as second argument, the elevator will go to that floor directly, and then go to any other queued floors.\n     */\n    goToFloor(floor: number, forceNow?: boolean): void;\n    /**\n     * Clear the destination queue and stop the elevator if it is moving.\n     * Note that you normally don't need to stop elevators - it is intended for advanced solutions with in-transit rescheduling logic.\n     * Also, note that the elevator will probably not stop at a floor, so passengers will not get out.\n     */\n    stop(): void;\n    /**\n     * Gets the floor number that the elevator currently is on.\n     */\n    currentFloor(): number;\n    /**\n     * Gets or sets the going up indicator, which will affect passenger behaviour when stopping at floors.\n     */\n    goingUpIndicator(): boolean;\n    goingUpIndicator(state: boolean): Elevator;\n    /**\n     * Gets or sets the going down indicator, which will affect passenger behaviour when stopping at floors.\n     */\n    goingDownIndicator(): boolean;\n    goingDownIndicator(state: boolean): Elevator;\n    /**\n     * Gets the maximum number of passengers that can occupy the elevator at the same time.\n     */\n    maxPassengerCount(): number;\n    /**\n     * Gets the load factor of the elevator. 0 means empty, 1 means full. Varies with passenger weights, which vary - not an exact measure.\n     */\n    loadFactor(): number;\n    /**\n     * Gets the direction the elevator is currently going to move toward. Can be \\\"up\\\", \\\"down\\\" or \\\"stopped\\\".\n     */\n    destinationDirection(): \"up\" | \"down\" | \"stopped\";\n    /**\n     * The current destination queue, meaning the floor numbers the elevator is scheduled to go to.\n     * Can be modified and emptied if desired. Note that you need to call checkDestinationQueue() for the change to take effect immediately.\n     */\n    destinationQueue: number[];\n    /**\n     * Checks the destination queue for any new destinations to go to.\n     * Note that you only need to call this if you modify the destination queue explicitly.\n     */\n    checkDestinationQueue(): void;\n    /**\n     * Gets the currently pressed floor numbers as an array.\n     */\n    getPressedFloors(): number[];\n    /**\n     * Triggered when the elevator has completed all its tasks and is not doing anything.\n     */\n    on(event: \"idle\", callback: () => void): Elevator;\n    /**\n     * Triggered when a passenger has pressed a button inside the elevator.\n     */\n    on(event: \"floor_button_pressed\", callback: (floorNum: number) => void): Elevator;\n    /**\n     * Triggered slightly before the elevator will pass a floor. A good time to decide whether to stop at that floor.\n     * Note that this event is not triggered for the destination floor. Direction is either \"up\" or \"down\".\n     */\n    on(event: \"passing_floor\", callback: (floorNum: number, direction: \"up\" | \"down\") => void): Elevator;\n    /**\n     * Triggered when the elevator has arrived at a floor.\n     */\n    on(event: \"stopped_at_floor\", callback: (floorNum: number) => void): Elevator;\n}\ninterface Floor {\n    /**\n     * Gets the floor number of the floor object.\n     */\n    floorNum(): number;\n    /**\n     * Triggered when someone has pressed the up button at a floor.\n     * Note that passengers will press the button again if they fail to enter an elevator.\n     */\n    on(event: \"up_button_pressed\", callback: () => void): Floor;\n    /**\n     * Triggered when someone has pressed the down button at a floor.\n     * Note that passengers will press the button again if they fail to enter an elevator.\n     */\n    on(event: \"down_button_pressed\", callback: () => void): Floor;\n}`;\n"],
  "mappings": "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",
  "names": ["window", "undefined", "on", "observable", "isObject", "Symbol", "Symbol", "Symbol", "isObject", "isObject", "debounce", "Buffer", "isObject", "isFunction", "isFunction", "isFunction", "isObject", "Map", "Map", "map", "Map", "othValue", "Uint8Array", "map", "set", "Symbol", "Uint8Array", "Promise", "Set", "WeakMap", "Map", "Promise", "Set", "WeakMap", "getTag", "getTag", "isObject", "memoize", "memoize", "match", "Symbol", "get", "get", "collection", "map", "defineProperty", "defineProperty", "Buffer", "Uint8Array", "isObject", "isObject", "isFunction", "isObject", "isObject", "defineProperty", "isObject", "merge", "parseInt", "collection", "reduce", "sign", "random", "range", "last", "tail", "import_observable", "tail", "get", "map", "isBoolean", "expressions", "bindings", "$", "$", "code", "value", "_a", "result", "stream", "domToArray", "$", "dashToCamelCase", "isNil", "bindingTypes", "expressionTypes", "pathToRegexp", "first", "last", "panic", "import_each", "import_map", "import_reduce", "import_each", "import_map", "deprecationWarning", "obj", "getCodeObjFromCode", "observable", "self", "self", "elevator", "import_observable", "import_map", "import_random", "import_range", "import_reduce", "map", "range", "random", "reduce", "import_observable", "observable", "first", "tail", "last", "import_observable", "observable", "observable", "map", "range", "random", "reduce", "each", "obj", "each", "map", "import_observable", "import_observable", "observable", "challenges", "clearAll", "presentStats", "presentChallenge", "presentWorld", "presentFeedback", "createParamsUrl", "observable", "observable", "debounce", "code", "obj", "map", "merge", "reduce", "match", "each", "parseInt"]
}
